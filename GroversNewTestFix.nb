(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    224669,       4978]
NotebookOptionsPosition[    221397,       4926]
NotebookOutlinePosition[    222081,       4948]
CellTagsIndexPosition[    221975,       4943]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Import", "[", "\"\<https://qtechtheory.org/QuESTlink.m\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CreateDownloadedQuESTEnv", "[", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.852701216924458*^9, 3.852703040875533*^9, {3.8527031601963196`*^9, 
   3.8527031613755207`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2d90409d-cec0-485e-a330-29551883c542"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QuEST`*"}]], "Input",
 CellChangeTimes->{{3.8526564120526237`*^9, 3.8526564455962086`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"60babb56-7ae1-43f5-834c-a61236a116f5"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["QuEST`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["QuEST`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ApplyCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ApplyCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CloneQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CloneQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitClassicalState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InitClassicalState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ApplyPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CollapseToOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CollapseToOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPlusState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InitPlusState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPhaseFunc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ApplyPhaseFunc", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateDensityQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPureState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InitPureState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyQFT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ApplyQFT", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateDensityQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitStateFromAmps", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InitStateFromAmps", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcCircuitMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcCircuitMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDownloadedQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateDownloadedQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitZeroState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InitZeroState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcDensityInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateLocalQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateLocalQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InsertCircuitNoise", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "InsertCircuitNoise", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcDensityInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IsDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "IsDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcExpecPauliProd", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDamping", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "MixDamping", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcExpecPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateRemoteQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CreateRemoteQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "MixDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcFidelity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcFidelity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "DestroyAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "MixDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["CalcHilbertSchmidtDistance", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcHilbertSchmidtDistance", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "DestroyQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "MixTwoQubitDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "DestroyQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "MixTwoQubitDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "DrawCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Operator", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "Operator", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcPauliSumMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcPauliSumMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuitTopology", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "DrawCircuitTopology", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "PlotDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcProbOfAllOutcomes", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcProbOfAllOutcomes", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExtractCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ExtractCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "SetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcProbOfOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcProbOfOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "SetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcPurity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcPurity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetWeightedQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "SetWeightedQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcQuregDerivs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcQuregDerivs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitColumns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetCircuitColumns", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimplifyPaulis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "SimplifyPaulis", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcTotalProb", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CalcTotalProb", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StartRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "StartRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CheckCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CheckCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetPauliSumFromCoeffs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetPauliSumFromCoeffs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StopRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "StopRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CheckDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "CheckDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ViewCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Circuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "Circuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ViewDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ClearRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "ClearRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetUnsupportedGates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", {
                   "GetUnsupportedGates", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{{3.8526564266264367`*^9, 3.8526564461531467`*^9}},
 CellLabel->
  "Out[161]=",ExpressionUUID->"6bb281d7-4283-44a5-9c27-0db3de0d86f6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PlotDensityMatrix[matrix] (accepts id or numeric \
matrix) plots a component (default is magnitude) of the given matrix as a 3D \
bar plot.\\nPlotDensityMatrix[matrix1, matrix2] plots both matrix1 and \
matrix2 simultaneously, and the latter is intended as a \\\"reference\\\" \
state.\\nPlotDensityMatrix[matrix, vector] converts the state-vector to a \
density matrix, and plots.\\nPlotDensityMatrix accepts optional arguments \
PlotComponent, BarSpacing and all options for Histogram3D. Customising the \
colour may require overriding the default ColorFunction.\\nWhen two matrices \
are passed, many options (e.g. ChartStyle) can accept a length-2 list.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{"QuEST`Private`id_Integer", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    RowBox[{"GetQuregMatrix", "[", "QuEST`Private`id", "]"}], 
                    ",", "QuEST`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`matrix_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`data", ",", 
                    "QuEST`Private`chartelem", ",", "QuEST`Private`space", 
                    ",", "QuEST`Private`offset"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`data", "=", 
                    RowBox[{"QuEST`Private`extractMatrixData", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PlotComponent", "]"}], ",", 
                    "QuEST`Private`matrix"}], "]"}]}], ";", 
                    RowBox[{"QuEST`Private`chartelem", "=", 
                    RowBox[{"QuEST`Private`extractChartElemFunc", "[", 
                    RowBox[{"OptionValue", "[", "ChartElementFunction", "]"}],
                     "]"}]}], ";", 
                    RowBox[{"QuEST`Private`space", "=", 
                    RowBox[{"QuEST`Private`extractBarSpacing", "[", 
                    RowBox[{"OptionValue", "[", "BarSpacing", "]"}], "]"}]}], 
                    ";", 
                    RowBox[{"QuEST`Private`offset", "=", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "QuEST`Private`space", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`data", ",", 
                    "QuEST`Private`chartelem", ",", "QuEST`Private`space"}], 
                    "}"}], ",", "$Failed"}], "]"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Histogram3D", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`extractWeightedData", "[", 
                    "QuEST`Private`data", "]"}], ",", 
                    RowBox[{"Times", "@@", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data", "]"}]}], 
                    ",", 
                    RowBox[{"ChartElementFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`region", ",", "QuEST`Private`inds",
                     ",", "QuEST`Private`meta"}], "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"ChartElementData", "[", 
                    "QuEST`Private`chartelem", "]"}], "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`region", "+", 
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`offset", ",", 
                    "QuEST`Private`offset", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"QuEST`Private`data", ",", 
                    RowBox[{"First", "[", "QuEST`Private`inds", "]"}]}], 
                    "]"}]}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
                    "QuEST`Private`inds", ",", "QuEST`Private`meta"}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "QuEST`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "Histogram3D", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "\"DeepSeaColors\"", "]"}], "[", 
                    RowBox[{"1", "-", "#1"}], "]"}], "&"}], ")"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data", "]"}], 
                    "]"}]}], "}"}]}], ",", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data", "]"}], 
                    "]"}]}], "}"}]}], ",", "Automatic"}], "}"}]}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    
                    RowBox[{
                    "QuEST`Private`id1_Integer", ",", 
                    "QuEST`Private`id2_Integer", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    RowBox[{"GetQuregMatrix", "[", "QuEST`Private`id1", "]"}],
                     ",", 
                    RowBox[{"GetQuregMatrix", "[", "QuEST`Private`id2", "]"}],
                     ",", "QuEST`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{"QuEST`Private`id1_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`matr2_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    RowBox[{"GetQuregMatrix", "[", "QuEST`Private`id1", "]"}],
                     ",", "QuEST`Private`matr2", ",", "QuEST`Private`opts"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`matr1_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    "QuEST`Private`id2_Integer", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{"QuEST`Private`matr1", ",", 
                    RowBox[{"GetQuregMatrix", "[", "QuEST`Private`id2", "]"}],
                     ",", "QuEST`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`matr1_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    
                    RowBox[{
                    "QuEST`Private`vec2_", "?", 
                    "QuEST`Private`isNumericVector"}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`matr2", "=", 
                    RowBox[{"KroneckerProduct", "[", 
                    RowBox[{
                    RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"{", "QuEST`Private`vec2", "}"}], "]"}], ",", 
                    "QuEST`Private`vec2"}], "]"}]}], "}"}], ",", 
                    RowBox[{"PlotDensityMatrix", "[", 
                    
                    RowBox[{"QuEST`Private`matr1", ",", "QuEST`Private`matr2",
                     ",", "QuEST`Private`opts"}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "QuEST`Private`matr1_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    
                    RowBox[{
                    "QuEST`Private`matr2_", "?", 
                    "QuEST`Private`isNumericSquareMatrix"}], ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"PlotDensityMatrix", ",", "Histogram3D"}], "}"}], 
                    "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`data1", ",", "QuEST`Private`data2",
                     ",", "QuEST`Private`chartelem", ",", 
                    "QuEST`Private`space", ",", "QuEST`Private`offset"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`data1", "=", 
                    RowBox[{"QuEST`Private`extractMatrixData", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PlotComponent", "]"}], ",", 
                    "QuEST`Private`matr1"}], "]"}]}], ";", 
                    RowBox[{"QuEST`Private`data2", "=", 
                    RowBox[{"QuEST`Private`extractMatrixData", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PlotComponent", "]"}], ",", 
                    "QuEST`Private`matr2"}], "]"}]}], ";", 
                    RowBox[{"QuEST`Private`chartelem", "=", 
                    RowBox[{"QuEST`Private`extractChartElemFunc", "[", 
                    RowBox[{"OptionValue", "[", "ChartElementFunction", "]"}],
                     "]"}]}], ";", 
                    RowBox[{"QuEST`Private`space", "=", 
                    RowBox[{"QuEST`Private`extractBarSpacing", "[", 
                    RowBox[{"OptionValue", "[", "BarSpacing", "]"}], "]"}]}], 
                    ";", 
                    RowBox[{"QuEST`Private`offset", "=", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "QuEST`Private`space", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`data1", ",", "QuEST`Private`data2",
                     ",", "QuEST`Private`chartelem", ",", 
                    "QuEST`Private`space"}], "}"}], ",", "$Failed"}], "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"Histogram3D", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`extractWeightedData", "[", 
                    "QuEST`Private`data1", "]"}], ",", 
                    
                    RowBox[{"QuEST`Private`extractWeightedData", "[", 
                    "QuEST`Private`data2", "]"}]}], "}"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Times", "@@", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data1", "]"}]}],
                     ",", 
                    RowBox[{"Times", "@@", 
                    
                    RowBox[{"Dimensions", "[", "QuEST`Private`data2", 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"ChartElementFunction", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`region", ",", "QuEST`Private`inds",
                     ",", "QuEST`Private`meta"}], "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"ChartElementData", "[", 
                    "QuEST`Private`chartelem", "]"}], "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`region", "+", 
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`offset", ",", 
                    "QuEST`Private`offset", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"QuEST`Private`data1", ",", 
                    RowBox[{"First", "[", "QuEST`Private`inds", "]"}]}], 
                    "]"}]}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
                    "QuEST`Private`inds", ",", "QuEST`Private`meta"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`region", ",", "QuEST`Private`inds",
                     ",", "QuEST`Private`meta"}], "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"ChartElementData", "[", 
                    "QuEST`Private`chartelem", "]"}], "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`region", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1.001`", " ", "QuEST`Private`offset"}], ",", 
                    RowBox[{"1.001`", " ", "QuEST`Private`offset"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"QuEST`Private`data2", ",", 
                    RowBox[{"First", "[", "QuEST`Private`inds", "]"}]}], 
                    "]"}]}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
                    "QuEST`Private`inds", ",", "QuEST`Private`meta"}], 
                    "]"}]}], "]"}]}], "}"}]}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "QuEST`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "Histogram3D", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"ChartStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}]}], "}"}]}], ",", 
                    RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "\"DeepSeaColors\"", "]"}], "[", 
                    RowBox[{"1", "-", "#1"}], "]"}], "&"}], ")"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data1", "]"}], 
                    "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data2", "]"}], 
                    "]"}]}], "]"}]}], "}"}]}], ",", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data1", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"Dimensions", "[", "QuEST`Private`data2", "]"}], 
                    "]"}]}], "]"}]}], "}"}]}], ",", "Automatic"}], "}"}]}], 
                    ",", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"RelieveDPZFighting\"", "\[Rule]", "True"}], 
                    "}"}]}]}], "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"PlotDensityMatrix", "[", "___", "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"PlotDensityMatrix", "::", "error"}], 
                    "MessageName"], ",", 
                    "\"Invalid arguments. See ?PlotDensityMatrix. Note the \
first argument must be a numeric square matrix.\""}], "]"}], ";", "$Failed"}],
                     ")"}]}]}, {" "}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"BarSpacing", "\[Rule]", "0.5`"}], ",", 
                    RowBox[{"PlotComponent", "\[Rule]", "\<\"Magnitude\"\>"}],
                     ",", 
                    RowBox[{
                    "ChartElementFunction", 
                    "\[Rule]", "\<\"ProfileCube\"\>"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`PlotDensityMatrix\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PlotDensityMatrix[matrix] (accepts id or numeric \
matrix) plots a component (default is magnitude) of the given matrix as a 3D \
bar plot.\\nPlotDensityMatrix[matrix1, matrix2] plots both matrix1 and \
matrix2 simultaneously, and the latter is intended as a \\\"reference\\\" \
state.\\nPlotDensityMatrix[matrix, vector] converts the state-vector to a \
density matrix, and plots.\\nPlotDensityMatrix accepts optional arguments \
PlotComponent, BarSpacing and all options for Histogram3D. Customising the \
colour may require overriding the default ColorFunction.\\nWhen two matrices \
are passed, many options (e.g. ChartStyle) can accept a length-2 list.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "PlotDensityMatrix[matrix] (accepts id or numeric matrix) plots a \
component (default is magnitude) of the given matrix as a 3D bar plot.\n\
PlotDensityMatrix[matrix1, matrix2] plots both matrix1 and matrix2 \
simultaneously, and the latter is intended as a \"reference\" state.\n\
PlotDensityMatrix[matrix, vector] converts the state-vector to a density \
matrix, and plots.\nPlotDensityMatrix accepts optional arguments \
PlotComponent, BarSpacing and all options for Histogram3D. Customising the \
colour may require overriding the default ColorFunction.\nWhen two matrices \
are passed, many options (e.g. ChartStyle) can accept a length-2 list.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`PlotDensityMatrix, {QuEST`PlotDensityMatrix[
         Pattern[QuEST`Private`id, 
          Blank[Integer]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       QuEST`PlotDensityMatrix[
         QuEST`GetQuregMatrix[QuEST`Private`id], QuEST`Private`opts], 
       QuEST`PlotDensityMatrix[
         PatternTest[
          Pattern[QuEST`Private`matrix, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       Block[{QuEST`Private`data, QuEST`Private`chartelem, 
          QuEST`Private`space, QuEST`Private`offset}, 
         QuEST`Private`data = QuEST`Private`extractMatrixData[
            OptionValue[QuEST`Option`PlotComponent], QuEST`Private`matrix]; 
         QuEST`Private`chartelem = QuEST`Private`extractChartElemFunc[
            OptionValue[ChartElementFunction]]; 
         QuEST`Private`space = QuEST`Private`extractBarSpacing[
            OptionValue[BarSpacing]]; 
         QuEST`Private`offset = QuEST`Private`space ({1, -1}/2); If[
           
           MemberQ[{
            QuEST`Private`data, QuEST`Private`chartelem, 
             QuEST`Private`space}, $Failed], 
           Return[$Failed]]; Histogram3D[
           QuEST`Private`extractWeightedData[QuEST`Private`data], 
           Apply[Times, 
            Dimensions[QuEST`Private`data]], ChartElementFunction -> 
           Function[{
             QuEST`Private`region, QuEST`Private`inds, QuEST`Private`meta}, 
             ChartElementData[QuEST`Private`chartelem][
             QuEST`Private`region + {
               QuEST`Private`offset, QuEST`Private`offset, {0, 2 Min[0, 
                   Extract[QuEST`Private`data, 
                    First[QuEST`Private`inds]]]}}, QuEST`Private`inds, 
              QuEST`Private`meta]], 
           FilterRules[{QuEST`Private`opts}, 
            Options[Histogram3D]], 
           ColorFunction -> (ColorData["DeepSeaColors"][1 - #]& ), 
           PlotRange -> {0.5 + {0, 
               First[
                Dimensions[QuEST`Private`data]]}, 0.5 + {0, 
               Last[
                Dimensions[QuEST`Private`data]]}, Automatic}]], 
       QuEST`PlotDensityMatrix[
         Pattern[QuEST`Private`id1, 
          Blank[Integer]], 
         Pattern[QuEST`Private`id2, 
          Blank[Integer]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       QuEST`PlotDensityMatrix[
         QuEST`GetQuregMatrix[QuEST`Private`id1], 
         QuEST`GetQuregMatrix[QuEST`Private`id2], QuEST`Private`opts], 
       QuEST`PlotDensityMatrix[
         Pattern[QuEST`Private`id1, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`matr2, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       QuEST`PlotDensityMatrix[
         QuEST`GetQuregMatrix[QuEST`Private`id1], QuEST`Private`matr2, 
         QuEST`Private`opts], QuEST`PlotDensityMatrix[
         PatternTest[
          Pattern[QuEST`Private`matr1, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         Pattern[QuEST`Private`id2, 
          Blank[Integer]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       QuEST`PlotDensityMatrix[QuEST`Private`matr1, 
         QuEST`GetQuregMatrix[QuEST`Private`id2], QuEST`Private`opts], 
       QuEST`PlotDensityMatrix[
         PatternTest[
          Pattern[QuEST`Private`matr1, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         PatternTest[
          Pattern[QuEST`Private`vec2, 
           Blank[]], QuEST`Private`isNumericVector], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       With[{QuEST`Private`matr2 = KroneckerProduct[
            ConjugateTranspose[{QuEST`Private`vec2}], QuEST`Private`vec2]}, 
         QuEST`PlotDensityMatrix[
         QuEST`Private`matr1, QuEST`Private`matr2, QuEST`Private`opts]], 
       QuEST`PlotDensityMatrix[
         PatternTest[
          Pattern[QuEST`Private`matr1, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         PatternTest[
          Pattern[QuEST`Private`matr2, 
           Blank[]], QuEST`Private`isNumericSquareMatrix], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[{QuEST`PlotDensityMatrix, Histogram3D}]]] :> 
       Block[{QuEST`Private`data1, QuEST`Private`data2, 
          QuEST`Private`chartelem, QuEST`Private`space, QuEST`Private`offset},
          QuEST`Private`data1 = QuEST`Private`extractMatrixData[
            OptionValue[QuEST`Option`PlotComponent], QuEST`Private`matr1]; 
         QuEST`Private`data2 = QuEST`Private`extractMatrixData[
            OptionValue[QuEST`Option`PlotComponent], QuEST`Private`matr2]; 
         QuEST`Private`chartelem = QuEST`Private`extractChartElemFunc[
            OptionValue[ChartElementFunction]]; 
         QuEST`Private`space = QuEST`Private`extractBarSpacing[
            OptionValue[BarSpacing]]; 
         QuEST`Private`offset = QuEST`Private`space ({1, -1}/2); If[
           
           MemberQ[{
            QuEST`Private`data1, QuEST`Private`data2, QuEST`Private`chartelem,
              QuEST`Private`space}, $Failed], 
           Return[$Failed]]; Histogram3D[{
            QuEST`Private`extractWeightedData[QuEST`Private`data1], 
            QuEST`Private`extractWeightedData[QuEST`Private`data2]}, 
           Max[
            Apply[Times, 
             Dimensions[QuEST`Private`data1]], 
            Apply[Times, 
             Dimensions[QuEST`Private`data2]]], ChartElementFunction -> {
             
             Function[{
              QuEST`Private`region, QuEST`Private`inds, QuEST`Private`meta}, 
              ChartElementData[QuEST`Private`chartelem][
              QuEST`Private`region + {
                QuEST`Private`offset, QuEST`Private`offset, {0, 2 Min[0, 
                    Extract[QuEST`Private`data1, 
                    First[QuEST`Private`inds]]]}}, QuEST`Private`inds, 
               QuEST`Private`meta]], 
             
             Function[{
              QuEST`Private`region, QuEST`Private`inds, QuEST`Private`meta}, 
              ChartElementData[QuEST`Private`chartelem][
              QuEST`Private`region + {
                1.001 QuEST`Private`offset, 1.001 QuEST`Private`offset, {
                 0, 2 Min[0, 
                    Extract[QuEST`Private`data2, 
                    First[QuEST`Private`inds]]]}}, QuEST`Private`inds, 
               QuEST`Private`meta]]}, 
           FilterRules[{QuEST`Private`opts}, 
            Options[Histogram3D]], ChartStyle -> {
             Opacity[1], 
             Opacity[0.3]}, 
           ColorFunction -> (ColorData["DeepSeaColors"][1 - #]& ), 
           PlotRange -> {0.5 + {0, 
               Max[
                First[
                 Dimensions[QuEST`Private`data1]], 
                First[
                 Dimensions[QuEST`Private`data2]]]}, 0.5 + {0, 
               Max[
                Last[
                 Dimensions[QuEST`Private`data1]], 
                Last[
                 Dimensions[QuEST`Private`data2]]]}, Automatic}, 
           Method -> {"RelieveDPZFighting" -> True}]], QuEST`PlotDensityMatrix[
         BlankNullSequence[]] :> (Message[
          MessageName[QuEST`PlotDensityMatrix, "error"], 
          "Invalid arguments. See ?PlotDensityMatrix. Note the first argument \
must be a numeric square matrix."]; $Failed)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     BarSpacing -> 0.5, QuEST`Option`PlotComponent -> "Magnitude", 
      ChartElementFunction -> "ProfileCube"}, "Attributes" -> {}, "FullName" -> 
    "QuEST`PlotDensityMatrix"], False]]], "Print",
 CellTags->
  "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d",ExpressionUUID->"8f8ac196-55c1-\
4ee0-aa37-b80e3dec7de1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateDensityQureg", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitClassicalStateState", "[", 
   RowBox[{"0", ",", "0"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsDensityMatrix", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetQuregMatrix", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"E0", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "p", "]"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"E0t", "[", "p_", "]"}], ":=", 
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"E0", "[", "p", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"E1", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", "p"}], "]"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"E1t", "[", "p_", "]"}], ":=", 
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"E1", "[", "p", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", "0.75"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "[", "a_", "]"}], ":=", 
  RowBox[{"Circuit", "[", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", "a", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ApplyCircuit", "[", 
  RowBox[{"0", ",", 
   RowBox[{"C1", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"CalcCircuitMatrix", "[", 
  RowBox[{"C1", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"GetQuregMatrix", "[", "0", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GStatePopNoErr", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"InitClassicalState", "[", 
        RowBox[{"0", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ApplyCircuit", "[", 
        RowBox[{"0", ",", 
         RowBox[{"C1", "[", "x", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PlotDensityMatrix", "[", "0", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"2", "*", "Pi"}], ",", 
        FractionBox["Pi", "2"]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GStatePopErr", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InitClassicalState", "[", 
      RowBox[{"0", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{"0", ",", 
       RowBox[{"C1", "[", "Pi", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]0", "=", 
      RowBox[{"GetQuregMatrix", "[", "0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"E0", "[", "p", "]"}], ".", "\[Rho]0", ".", 
        RowBox[{"E0t", "[", "p", "]"}]}], "+", 
       RowBox[{
        RowBox[{"E1", "[", "p", "]"}], ".", "\[Rho]0", ".", 
        RowBox[{"E1t", "[", "p", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetQuregMatrix", "[", 
      RowBox[{"0", ",", "\[Rho]1"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"CalcProbOfOutcome", "[", 
      RowBox[{"0", ",", "0", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlotDensityMatrix", "[", "0", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "1", ",", "0.33"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XList", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "Pi"}], ",", 
     FractionBox["Pi", "4"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"?", "PlotComponent"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8526564636118965`*^9, 3.8526566035283947`*^9}, {
   3.8526566362902393`*^9, 3.8526566467896576`*^9}, {3.8526571344052286`*^9, 
   3.8526574644427986`*^9}, {3.852657548509218*^9, 3.852657636417595*^9}, {
   3.8526576703496456`*^9, 3.8526577882425427`*^9}, {3.8527003311140723`*^9, 
   3.8527004898656893`*^9}, {3.8527005519670153`*^9, 
   3.8527005667024417`*^9}, {3.852700606249196*^9, 3.8527006243737097`*^9}, {
   3.852700722667908*^9, 3.852700728992922*^9}, {3.8527008407736864`*^9, 
   3.8527008437410975`*^9}, {3.8527008748789625`*^9, 3.852700979695365*^9}, {
   3.852701014641735*^9, 3.852701032733664*^9}, {3.852701080332616*^9, 
   3.852701164828086*^9}, {3.852701242335519*^9, 3.8527012759169893`*^9}, {
   3.8527013219192038`*^9, 3.852701387861994*^9}, {3.8527014315886765`*^9, 
   3.8527014643602376`*^9}, {3.852701517339672*^9, 3.852701542633548*^9}, {
   3.85270160276093*^9, 3.8527016538840384`*^9}, {3.8527016850052547`*^9, 
   3.85270168542888*^9}, {3.8527017458460894`*^9, 3.8527018155347395`*^9}, {
   3.852701854216655*^9, 3.8527018965667815`*^9}, {3.8527022634752626`*^9, 
   3.8527022935710073`*^9}, {3.8527024031578465`*^9, 
   3.8527024586918535`*^9}, {3.852702493274392*^9, 3.852702495338066*^9}, {
   3.852702553955445*^9, 3.85270263744941*^9}, {3.8527028436956167`*^9, 
   3.8527028495420027`*^9}, {3.8527028906426787`*^9, 
   3.8527029363272257`*^9}, {3.852702991977906*^9, 3.852702993585188*^9}, {
   3.852703060349862*^9, 3.8527031364839697`*^9}, {3.852703951257108*^9, 
   3.8527039789415216`*^9}, {3.85270402510693*^9, 3.8527040932138767`*^9}, {
   3.8527042968668723`*^9, 3.852704424770895*^9}, {3.8527044907408333`*^9, 
   3.8527048087115507`*^9}, {3.8527048736666684`*^9, 3.852704877637827*^9}, {
   3.852704930994077*^9, 3.8527049384266095`*^9}, {3.8527055019274263`*^9, 
   3.8527055647179446`*^9}, {3.8527057772383738`*^9, 
   3.8527057818560643`*^9}, {3.8527058852820272`*^9, 
   3.8527058912334614`*^9}, {3.852705924194627*^9, 3.852705942500936*^9}, 
   3.852706006099584*^9, {3.8527060622571735`*^9, 3.8527061383932962`*^9}, {
   3.8527062416377835`*^9, 3.8527063336212854`*^9}, {3.852706460586707*^9, 
   3.8527065084068637`*^9}, {3.8527065466108885`*^9, 
   3.8527065486456885`*^9}, {3.8527066416270585`*^9, 3.8527066436269855`*^9}, 
   3.8527067065606117`*^9, {3.8527067723028016`*^9, 3.8527067725302057`*^9}, {
   3.8527069309007535`*^9, 3.852706932225989*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"0257d2cf-3e07-4646-8465-9dbaa99c30e2"],

Cell[BoxData["0.75`"], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.8527069328308287`*^9},
 CellLabel->
  "Out[655]=",ExpressionUUID->"5a89f266-41e3-418e-be7a-00808ab6c881"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.8527069328361864`*^9},
 CellLabel->
  "Out[657]=",ExpressionUUID->"7857bffd-d512-4602-acdb-e8fd88354922"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.8527069328431797`*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"cf999717-3ce2-41e1-b247-242b361cf544"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5000000000000001`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.5000000000000001`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.5000000000000001`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.5000000000000001`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.8527069328491855`*^9},
 CellLabel->
  "Out[659]=",ExpressionUUID->"f76edb6d-38b0-4d31-a67f-1ffdb53904b0"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    660, 117, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.852706932854604*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"c64357af-c6f0-4e59-adea-33fe49b4c467"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    660, 118, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.8527069328749433`*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"9f42abf6-f0d0-47a4-bd76-f4314f830728"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    660, 119, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.8527069329270773`*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"2339dda1-72f7-41a4-824f-d769f643e0da"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \\\"::\
\\\", \\\"rep\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 660, 120, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.852706932966408*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"d4fc92ee-8191-429c-820b-2c4620ee9c08"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    661, 121, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.8527069330843287`*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"2fcceb8e-3aaf-4583-99b8-1a88d260be95"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    661, 122, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.8527069331209545`*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"92a6f2e5-10b8-4fdf-a21b-09b2de230778"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "rep", 
   "\"\\!\\(\\*RowBox[{\\\"0\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Magnitude\\\\\\\"\\\"}]\\) is not a valid replacement rule.\"", 2,
    661, 123, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.8527069331747723`*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"b71e3b1f-2310-461c-b96d-570e2553a2df"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \\\"::\
\\\", \\\"rep\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 661, 124, 21514201153559488048, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.852706074289605*^9, 3.8527060876555004`*^9}, {
   3.852706122793711*^9, 3.852706138866906*^9}, 3.8527062308861713`*^9, {
   3.8527062713507023`*^9, 3.8527063177262783`*^9}, 3.852706416974844*^9, 
   3.8527065097978086`*^9, 3.8527065494856043`*^9, 3.8527066442815123`*^9, 
   3.8527067070765543`*^9, 3.85270677316018*^9, 3.852706836412319*^9, 
   3.852706933217414*^9},
 CellLabel->
  "During evaluation of \
In[647]:=",ExpressionUUID->"d325b5a5-edd7-4416-b806-c0b4bd09dac3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAtDFYfQXNBpdPSF9MIAuDuO/
wKEeXRxdPbr70cXR1b/AoZ6QPnT3o6v/gkM9ujgu/6OrR7gDAFeUNtY=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{36.195708025516645`, 
                 80.60368790584975}, {-26.77076285232272, 
                 33.577989424418206`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOLsMSLGassm2qCKM+FQz4Sm
/gMO9R9wqH+BQ/0LAurR3f8Ch/th4n/ssav/Y4/d/ejqP+BQ/wWH+i8E1BMO
fwCFuDXC
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.77100254471237, 
                 105.8905674853039}, {-18.655048974515154`, 
                 3.0772073987419617`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhx9hgRY7VlE21Qxb/gUP8F
TT0DDvUMONT/sceuHiGOXT26+xHi2NW/wKH+BQ73o6tHiGMPH3T1TATUEw5/
AHdeNb4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.95338277523614, 130.30954216444943`}, {
                 24.019653658164117`, 53.02504210682963}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHGP2K7Wc+XGlqjicHkGdHFU
9QwOqPJwgEP9H3vs6hHi2NWjux8hjl09XJ4BXRy7+9HVI8Sxhw+6eiYC6gmH
PwAT/jUo
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{115.15666629469207`, 
                 152.0680215165999}, {-5.092454145934298, 
                 18.818256428933132`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.749399456654644*^-33]& ,
             TagBoxNote->"3.749399456654644*^-33"],
            StyleBox[
            "3.749399456654644`*^-33", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.749399456654644*^-33, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDiBbZc1xcXPLVHFf+CQ/0X
NPUfcKj/gEP9CxzqXxBQj+7+Fzjc/wKNRlf/Aof70dV/wKH+Cw71XwioJxz+
AEWCThw=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{35.65567945550254, 
                 80.22402931082252}, {-27.13227951255753, 
                 33.437124348379086`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.6699999999999999]& ,
             TagBoxNote->"0.6699999999999999"],
            StyleBox[
            "0.6699999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.6699999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOJuTFeurGOosEEVZ8KhnglN
/Qcc6j/gUP8Ch/oXBNSju/8FDvfDxP/YY1f/xx67+9HVf8Ch/gsO9V8IqCcc
/gDrnD9J
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.35794227541463, 
                 105.60653372921252`}, {-18.985875259135355`, 
                 2.8210005954067014`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 2.0818995585505002`*^-17]& ,
             TagBoxNote->"2.0818995585505002*^-17"],
            StyleBox[
            "2.0818995585505002`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[2.0818995585505002`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhxN6YrV9YxVNigin/Bof4L
mnoGHOoZcKj/Y49dPUIcu3p09yPEsat/gUP9CxzuR1ePEMcePujqmQioJxz+
AN1CP0U=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.61286257614306, 130.11785117897693`}, {
                 23.85020598702858, 52.957717986078805`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 2.0818995585505002`*^-17]& ,
             TagBoxNote->"2.0818995585505002*^-17"],
            StyleBox[
            "2.0818995585505002`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[2.0818995585505002`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[
              0.2368308208955224, 0.33762665671641806`, 0.8374638656716419], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHG51teBO+Su2qOKw+UZ0MVR
1TM4oMrDAQ71f+yxq0eIY1eP7n6EOHb1cHkGdHHs7kdXjxDHHj7o6pkIqCcc
/gC/lTis
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{114.91523640677265`, 
                 153.65345179270278`}, {-21.415956971994845`, 
                 18.62157596112157}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.32999999999999996`]& ,
             TagBoxNote->"0.32999999999999996"],
            StyleBox[
            "0.32999999999999996`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.32999999999999996`, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[
              0.23969663636363633`, 0.31147498181818195`, 0.8192702121212122], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDiB79qxPQfumqPKv4Fh/ov
aOo/4FD/AYf6FzjUvyCgHt39L3C4/wUaja7+BQ73o6v/gEP9FxzqvxBQTzj8
AT7XVcY=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{37.788948879201556`, 
                 80.27317240934903}, {-9.832677997793027, 33.45535795720833}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.3399999999999999]& ,
             TagBoxNote->"0.3399999999999999"],
            StyleBox[
            "0.3399999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.3399999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOITslcqWU8vs0EVZ8KhnglN
/Qcc6j/gUP8Ch/oXBNSju/8FDvfDxP/YY1f/xx67+9HVf8Ch/gsO9V8IqCcc
/gC7hD8B
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.41140889457554, 
                 105.64329912592231`}, {-18.94305302644301, 
                 2.8541640647553095`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1.9594348786357657`*^-17]& ,
             TagBoxNote->"1.9594348786357657*^-17"],
            StyleBox[
            "1.9594348786357657`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[1.9594348786357657`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQjxCdkrlaynl9mgin/Bof4L
mnoGHOoZcKj/Y49dPUIcu3p09yPEsat/gUP9CxzuR1ePEMcePujqmQioJxz+
AK0qPv0=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.65693959142332, 130.14266370557084`}, {
                 23.872139333741714`, 52.96643243622495}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1.9594348786357657`*^-17]& ,
             TagBoxNote->"1.9594348786357657*^-17"],
            StyleBox[
            "1.9594348786357657`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[1.9594348786357657`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHH51teBO+Se2qOKw+UZ0MVR
1TM4oMrDAQ71f+yxq0eIY1eP7n6EOHb1cHkGdHHs7kdXjxDHHj7o6pkIqCcc
/gAzzDlF
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{114.94648714868835`, 
                 155.5289110394096}, {-38.96905125303529, 
                 18.647034327491134`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.66]& ,
             TagBoxNote->"0.66"],
            StyleBox["0.66`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.66, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
L2v04Q3h5VAP4O+lSqE/y63JVg02cCS5aeVej/6NiP4it90jf2seffh/1Nve
lIh+C2W0WBtAr970CMKKkdz/RLuHzc8usq3AaXqVHNuD2T51cQReT19V2gHf
baFGrYXUmzX/CE5p+AjSg+V7+DSEuZTtwM7+ORgjnJT6bb/rc9meez6qkC1n
d9//89nOAy/waPBFAreG4JZc9fx4N82DO9fHBHWOEhlk+LGwJ4AMfyGu3YF7
rVuX3bL+ruyEB3jd4M4A7mIFbonBXeRuOdrL2Tp3bTODy8gSZFW9P5+GjneF
azj7SB/5WG02EZbEL7FIiiVJSXBnbqgd5VdFKCHShKRg2YYPgvOGzjnIAG7b
9w2sPADPLstvtt75JQ/gr2ZHj7+dAaxlw0ffk+0+/OuJof2LvGgKu+pBj+bY
eB/H97s50F3996fiIM6oBr99RciuRmQXVDdnh/fcnx05dCxbUt3egmyZkfWD
ftgolpE1bDx/SK40lJTIcwTUniqhbEKmOEoGIx3hT+qqcme2Pz447zDOLAEu
vjfNUR0LQ/MdX3C0drSKmNz34E+HJcmMSSo4h0nhjTt+T2YfcL8hhsVfznc1
fz54U+pwV7HTETRz3MZs6cSbsOPt3nK4BZoKQXPBnx92+pxtPap4tIUGHanK
FSIR46Ql8Zt6AkoeD9dKwIwvZN7gf/CTUNcAsS6EOvMVJHfe+6nsyANvD34N
IABYoMsYoiQPxRdkA3+YOr/A/s5ftGsoqokQpys8ZjMewJRuHboTLWdLfS/j
sUPjAfgc62MSnruKmXa0YOiCubB3DiXYvfnZJjiYzYiUSBETBtFJfdlTWHDm
Y4oFHFgeaP5Fdt9DzwXTv//Bd2V3HHh3dtPeL7pyO81D/+GnOEAMeWGcm4qd
oHwVNO8vZQlLrfzrWpQPhOXtvjOcaD6crR24Q1MWVda/x2Q4p3/jqhYo/eM8
A80a1vITCwnyqRo4B/BMwAKA6/c2TeY9rkXFzYffnQ2f+GR257HvYpwPp6+/
5aWo7VhfQqpef+vviqpHq76PTXbXXj1Vl7Sq/TGvbKjbM6q23PBQtZHdd+jB
7J49R7Pl1Z2BD2BdX/DfCyXus+O4HCoNta5zwRfvzq61rjN3UngJh22YVfFZ
ETsRMmTQ6sOPvBG1DL/h/70P/nevojgmr93+GfT6Pelynl1fOrdk3ftZ3eXn
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
Y2r/xBBlqqGtU5jxObrTOxgoZ+cwau11GQSlY2FayIyCSsBcZVHn4eTzdHlO
rKXj4sxpzR7T82LSX87F84wJKt7f5M/c3TqOPr9vpOpnfV1UUjWdir6Ln4Ud
FvAZ48sl1mpjqrbd9ksk1TMRnmDq8ghnlgBfnPpJd9U7YCRy35ZQCg4GMdW6
/E7D25eNlDJRg0OBqucJSWuvPa9fnWf25CDo+jTvqXPqoqFNM6hf1ZL16aGq
yRLCMckK9kfpevW5cp7MO4Ot8qyfDuLA7pQcei3NeZKD3G+pqe4pa3RNFsIa
0qmW7FF4Sp/HTySEbgU4mlHoL+mUtzKM3IwGvye2Hoa//56+hLd64sr//kVq
R93RmAZvV8OfuSeewjHxN44UDe9TLJ77M3M9se8YQDmhs/ElOotsJS6+FZXL
zLWcBndhQ/kQ3UDG7LPh0mrLphFnt/8Rm306HkO9irU0/fsr+vJlEQYEANwn
RDWFLq4cjKyjlKuQCeCkr1wF7q0Ci/2iN/brEvLA1cSDUDBckauIIrBlU4q/
9mH6mm6gxFyy8i2YtvraaNSLVq4q6AhxSG6p6FnV8l+OV5GbjzjpLn1y31dd
tB59rK6u9JGoLBnEpefLjUecnXQ+xZewptJwLU+gsvUpqTHta+YSYkD9HS7R
UILlLjGiZAzbcKum6+1ywsiAdNNX9HWqWrPnXFyjzs6n4dSLpRINU2qSBXHC
i0eHU1EC+JjSBRxfS6JZfCky/6yT+Bh/Wh/Jl71arur//93+b/dj/wf/cZS0
\
\>"]], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[
              0.752273686868687, 0.9140037575757576, 0.9976678080808081], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDiDSLr3B9Wtdijin/Bof4L
mvoPONR/wKH+BQ71LwioR3f/Cxzuf4FGo6t/gcP96Oo/4FD/BYf6LwTUEw5/
AIGYTQ4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{40.30284167155226, 80.64054741254209}, {
                 7.227224757601817, 33.59166544092611}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.010000000000000009`]& ,
             TagBoxNote->"0.010000000000000009"],
            StyleBox[
            "0.010000000000000009`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.010000000000000009`, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOKR2zrdTnpPtEEVZ8KhnglN
/Qcc6j/gUP8Ch/oXBNSju/8FDvfDxP/YY1f/xx67+9HVf8Ch/gsO9V8IqCcc
/gDh3EMe
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.81110488391906, 
                 105.91814316585118`}, {-18.6229303979528, 
                 3.1020814737815527`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.000769315822031*^-17]& ,
             TagBoxNote->"6.000769315822031*^-17"],
            StyleBox[
            "6.000769315822031`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.000769315822031*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQjxyG2dbie9J9qgin/Bof4L
mnoGHOoZcKj/Y49dPUIcu3p09yPEsat/gUP9CxzuR1ePEMcePujqmQioJxz+
ANOCQxo=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.98644249447268, 130.3281526614971}, {
                 24.036104642416824`, 53.0315783315111}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.000769315822031*^-17]& ,
             TagBoxNote->"6.000769315822031*^-17"],
            StyleBox[
            "6.000769315822031`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.000769315822031*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCPF17g+rRNa9t0cVh8szoIuj
qmdwQJWHAxzq/9hjV48Qx64e3f0Icezq4fIM6OLY3Y+uHiGOPXzQ1TMRUE84
/AH7TTzb
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{115.1801057391984, 
                 155.6218102362974}, {-38.57588898517176, 
                 18.837351334499566`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.99]& ,
             TagBoxNote->"0.99"],
            StyleBox["0.99`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.99, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.8527069333454385`*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"00d3eb25-445b-4e04-86ea-e4e02e6a07f8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"QuEST`Option`PlotComponent\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"PlotComponent", "=", "0"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`Option`PlotComponent\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"QuEST`Option`PlotComponent\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "QuEST`Option`PlotComponent", 
    "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, QuEST`Option`PlotComponent, {
      QuEST`Option`PlotComponent -> 0}], "UpValues" -> None, "DownValues" -> 
    None, "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "QuEST`Option`PlotComponent"], False]]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067731408834`*^9, 3.8527068363888116`*^9, 
   3.852706933391108*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"d2ffa308-3050-464b-8d6b-c16f2462572e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAtDFYfQXNBpdPSF9MIAuDuO/
wKEeXRxdPbr70cXR1b/AoZ6QPnT3o6v/gkM9ujgu/6OrR7gDAFeUNtY=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{42.27475701875874, 
                 76.7554495130302}, {-25.015645923168833`, 
                 26.029503730147447`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOLsMSLGassm2qCKM+FQz4Sm
/gMO9R9wqH+BQ/0LAurR3f8Ch/th4n/ssav/Y4/d/ejqP+BQ/wWH+i8E1BMO
fwCFuDXC
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{47.657739110119806`, 77.189223476412}, {
                 14.046743229259874`, 18.955044390807764`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhx9hgRY7VlE21Qxb/gUP8F
TT0DDvUMONT/sceuHiGOXT26+xHi2NW/wKH+BQ73o6tHiGMPH3T1TATUEw5/
AHdeNb4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{104.04951940650916`, 139.7578026876094}, {
                 19.922143951672226`, 25.79501423924365}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHGP2K7Wc+XGlqjicHkGdHFU
9QwOqPJwgEP9H3vs6hHi2NWjux8hjl09XJ4BXRy7+9HVI8Sxhw+6eiYC6gmH
PwAT/jUo
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{100.60842178300183`, 131.31667492395852`}, {
                 13.896767585867522`, 18.782380796597856`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.749399456654644*^-33]& ,
             TagBoxNote->"3.749399456654644*^-33"],
            StyleBox[
            "3.749399456654644`*^-33", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.749399456654644*^-33, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 166.5096923714481},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.42769327351158737`,
    ViewPoint->{-0.0964618831599389, -3.3766096114943935`, 
     0.19799655719462575`},
    ViewVertical->{0.0016709083716452077`, 0.0584894787744177, 
     0.9982866266448281}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDi/8HguT2q+Bcc6r+gqf+A
Q/0HHOpf4FD/goB6dPe/wOH+F2g0uvoXONyPrv4DDvVfcKj/QkA94fAHAJvw
bE8=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{47.53234456809165, 
                 85.15589084054231}, {-26.81956195018553, 
                 25.539158137198612`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.7499999999999999]& ,
             TagBoxNote->"0.7499999999999999"],
            StyleBox[
            "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOJsMSLGassabVDFmXCoZ0JT
/wGH+g841L/Aof4FAfXo7n+Bw/0w8T/22NX/scfufnT1H3Co/4JD/RcC6gmH
PwARkDUp
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{42.45222782932605, 74.6243698726068}, {
                 14.66878941658571, 19.536089082733127`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhxthgRY7VljTao4l9wqP+C
pp4Bh3oGHOr/2GNXjxDHrh7d/Qhx7Opf4FD/Aof70dUjxLGHD7p6JgLqCYc/
AAM2NSU=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{106.33619366717446`, 146.24940687677295`}, {
                 18.51753297845383, 24.121380493580105`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.26669366666666666`, 0.5504620000000001, 0.926485], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEAB6OIX7FHF4fIM2MVh6hnQxOEA
h/o/aPbAALo4unp096OLo6uHyzNgF0d3P7p6dHH08EFXjy6Orp5w+AMA0Jog
Ig==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{93.631962205523, 127.74781832043722`}, {
                 0.9114022216620299, 18.488079743197808`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.25]& ,
             TagBoxNote->"0.25"],
            StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 167.63029644366475`},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.4276932735115875,
    ViewPoint->{-0.6936868383064823, -3.3093671728764695`, 
     0.12995185819354002`},
    ViewVertical->{0.007878816147321641, 0.03758741564526582, 
     0.9992622831075066}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDijGD6gT2q+Bcc6r+gqf+A
Q/0HHOpf4FD/goB6dPe/wOH+F2g0uvoXONyPrv4DDvVfcKj/QkA94fAHAPFt
Nk8=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{44.11400485481054, 
                 78.50855096010554}, {-27.94512304410985, 
                 23.741843412208112`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.5000000000000001]& ,
             TagBoxNote->"0.5000000000000001"],
            StyleBox[
            "0.5000000000000001`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.5000000000000001, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHFGMPXAHlUcLs+ALo6qnsEB
VR4OcKj/g2YPDCDEsatHdz9CHLt6uDwDujh296OrR4hjDx909Qhx7OoJhz8A
RNEguw==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{98.95242588880281, 
                 130.85357478693297`}, {-25.103674139108108`, 
                 19.024685941571605`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.5000000000000001]& ,
             TagBoxNote->"0.5000000000000001"],
            StyleBox[
            "0.5000000000000001`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.5000000000000001, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 167.63029644366577`},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.42769327351158737`,
    ViewPoint->{-0.2477360361548529, -3.374363304230812, 0.04794942596934971},
    ViewVertical->{0.0010375540201108238`, 0.01413231706601899, 
     0.9998995955074694}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.26669366666666666`, 0.5504620000000001, 0.926485], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAtDFL9ijin/Bof4LmvoPONSj
i8PUv8ChHl0cXT26+9HF0dW/wKH+BQ73o6tHF0cPH3T16OLo6gmHPwB9RTW2

                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{37.978121907369946`, 
                 79.87943081203932}, {-3.92771777716888, 33.30926765194263}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.25]& ,
             TagBoxNote->"0.25"],
            StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOJsMSLGassabVDFmXCoZ0JT
/wGH+g841L/Aof4FAfXo7n+Bw/0w8T/22NX/scfufnT1H3Co/4JD/RcC6gmH
PwARkDUp
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{68.98302662600926, 
                 105.34872946181328`}, {-19.286150934521515`, 
                 2.5884535624576586`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhxthgRY7VljTao4l9wqP+C
pp4Bh3oGHOr/2GNXjxDHrh7d/Qhx7Opf4FD/Aof70dUjxLGHD7p6JgLqCYc/
AAM2NSU=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.30378818417677, 129.94386216176702`}, {
                 23.69640619463548, 52.896611004052495`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCPH/YPDcHlUcLs+ALo6qnsEB
VR4OcKj/Y49dPUIcu3p09yPEsauHyzOgi2N3P7p6hDj28EFXz0RAPeHwBwDv
RVa7
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{114.69610169461781`, 
                 155.42934444436784`}, {-39.3904308733256, 
                 18.443058222196683`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.7499999999999999]& ,
             TagBoxNote->"0.7499999999999999"],
            StyleBox[
            "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDiHrFdrefKjS1Rxb/gUP8F
Tf0HHOo/4FD/Aof6FwTUo7v/BQ73w8Rf4FD/Aof70dV/wKH+Cw71XwioJxz+
AMCaSrw=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{40.29050830754602, 80.60368790584975}, {
                 7.529139363047378, 33.577989424418206`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.749399456654644*^-33]& ,
             TagBoxNote->"3.749399456654644*^-33"],
            StyleBox[
            "3.749399456654644`*^-33", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.749399456654644*^-33, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOLsMSLGassm2qCKM+FQz4Sm
/gMO9R9wqH+BQ/0LAurR3f8Ch/th4n/ssav/Y4/d/ejqP+BQ/wWH+i8E1BMO
fwCFuDXC
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.77100254471237, 
                 105.8905674853039}, {-18.655048974515154`, 
                 3.0772073987419617`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhx9hgRY7VlE21Qxb/gUP8F
TT0DDvUMONT/sceuHiGOXT26+xHi2NW/wKH+BQ73o6tHiGMPH3T1TATUEw5/
AHdeNb4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.95338277523614, 130.30954216444943`}, {
                 24.019653658164117`, 53.02504210682963}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEAB6OIf7FHF4fIM2MVh6hnQxOEA
h/o/aPbAALo4unp096OLo6uHyzNgF0d3P7p6dHH08EFXjy6Orp5w+AMAqukh
Qg==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{115.15666629469207`, 
                 155.61248946449845`}, {-38.61533578236124, 
                 18.818256428933132`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]},
         FontColor->GrayLevel[0.4]]}, {}, {}},
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Input",
 CellChangeTimes->{3.8527068285768003`*^9},
 CellLabel->
  "In[628]:=",ExpressionUUID->"0e4292c5-c641-49dc-b737-81f514ac8b0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAtDFYfQXNBpdPSF9MIAuDuO/
wKEeXRxdPbr70cXR1b/AoZ6QPnT3o6v/gkM9ujgu/6OrR7gDAFeUNtY=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{42.27475701875874, 
                 76.7554495130302}, {-25.015645923168833`, 
                 26.029503730147447`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOLsMSLGassm2qCKM+FQz4Sm
/gMO9R9wqH+BQ/0LAurR3f8Ch/th4n/ssav/Y4/d/ejqP+BQ/wWH+i8E1BMO
fwCFuDXC
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{47.657739110119806`, 77.189223476412}, {
                 14.046743229259874`, 18.955044390807764`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhx9hgRY7VlE21Qxb/gUP8F
TT0DDvUMONT/sceuHiGOXT26+xHi2NW/wKH+BQ73o6tHiGMPH3T1TATUEw5/
AHdeNb4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{104.04951940650916`, 139.7578026876094}, {
                 19.922143951672226`, 25.79501423924365}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHGP2K7Wc+XGlqjicHkGdHFU
9QwOqPJwgEP9H3vs6hHi2NWjux8hjl09XJ4BXRy7+9HVI8Sxhw+6eiYC6gmH
PwAT/jUo
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{100.60842178300183`, 131.31667492395852`}, {
                 13.896767585867522`, 18.782380796597856`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.749399456654644*^-33]& ,
             TagBoxNote->"3.749399456654644*^-33"],
            StyleBox[
            "3.749399456654644`*^-33", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.749399456654644*^-33, {"Graphics3DLabel"}], "Tooltip"]& ]},
         StripOnInput->False,
         FontColor->GrayLevel[0.4]]}, {}, {}},
      StripOnInput->False,
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 166.5096923714481},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.42769327351158737`,
    ViewPoint->{-0.0964618831599389, -3.3766096114943935`, 
     0.19799655719462575`},
    ViewVertical->{0.0016709083716452077`, 0.0584894787744177, 
     0.9982866266448281}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDi/8HguT2q+Bcc6r+gqf+A
Q/0HHOpf4FD/goB6dPe/wOH+F2g0uvoXONyPrv4DDvVfcKj/QkA94fAHAJvw
bE8=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{47.53234456809165, 
                 85.15589084054231}, {-26.81956195018553, 
                 25.539158137198612`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.7499999999999999]& ,
             TagBoxNote->"0.7499999999999999"],
            StyleBox[
            "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOJsMSLGassabVDFmXCoZ0JT
/wGH+g841L/Aof4FAfXo7n+Bw/0w8T/22NX/scfufnT1H3Co/4JD/RcC6gmH
PwARkDUp
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{42.45222782932605, 74.6243698726068}, {
                 14.66878941658571, 19.536089082733127`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhxthgRY7VljTao4l9wqP+C
pp4Bh3oGHOr/2GNXjxDHrh7d/Qhx7Opf4FD/Aof70dUjxLGHD7p6JgLqCYc/
AAM2NSU=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{106.33619366717446`, 146.24940687677295`}, {
                 18.51753297845383, 24.121380493580105`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.26669366666666666`, 0.5504620000000001, 0.926485], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEAB6OIX7FHF4fIM2MVh6hnQxOEA
h/o/aPbAALo4unp096OLo6uHyzNgF0d3P7p6dHH08EFXjy6Orp5w+AMA0Jog
Ig==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{93.631962205523, 127.74781832043722`}, {
                 0.9114022216620299, 18.488079743197808`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.25]& ,
             TagBoxNote->"0.25"],
            StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ]},
         StripOnInput->False,
         FontColor->GrayLevel[0.4]]}, {}, {}},
      StripOnInput->False,
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 167.63029644366475`},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.4276932735115875,
    ViewPoint->{-0.6936868383064823, -3.3093671728764695`, 
     0.12995185819354002`},
    ViewVertical->{0.007878816147321641, 0.03758741564526582, 
     0.9992622831075066}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDijGD6gT2q+Bcc6r+gqf+A
Q/0HHOpf4FD/goB6dPe/wOH+F2g0uvoXONyPrv4DDvVfcKj/QkA94fAHAPFt
Nk8=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{44.11400485481054, 
                 78.50855096010554}, {-27.94512304410985, 
                 23.741843412208112`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.5000000000000001]& ,
             TagBoxNote->"0.5000000000000001"],
            StyleBox[
            "0.5000000000000001`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.5000000000000001, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCHFGMPXAHlUcLs+ALo6qnsEB
VR4OcKj/g2YPDCDEsatHdz9CHLt6uDwDujh296OrR4hjDx909Qhx7OoJhz8A
RNEguw==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{98.95242588880281, 
                 130.85357478693297`}, {-25.103674139108108`, 
                 19.024685941571605`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.5000000000000001]& ,
             TagBoxNote->"0.5000000000000001"],
            StyleBox[
            "0.5000000000000001`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.5000000000000001, {"Graphics3DLabel"}], "Tooltip"]& ]},
         StripOnInput->False,
         FontColor->GrayLevel[0.4]]}, {}, {}},
      StripOnInput->False,
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    ImageSize->{180., 167.63029644366577`},
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.42769327351158737`,
    ViewPoint->{-0.2477360361548529, -3.374363304230812, 0.04794942596934971},
    ViewVertical->{0.0010375540201108238`, 0.01413231706601899, 
     0.9998995955074694}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.26669366666666666`, 0.5504620000000001, 0.926485], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAtDFL9ijin/Bof4LmvoPONSj
i8PUv8ChHl0cXT26+9HF0dW/wKH+BQ73o6tHF0cPH3T16OLo6gmHPwB9RTW2

                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{37.978121907369946`, 
                 79.87943081203932}, {-3.92771777716888, 33.30926765194263}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.25]& ,
             TagBoxNote->"0.25"],
            StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOJsMSLGassabVDFmXCoZ0JT
/wGH+g841L/Aof4FAfXo7n+Bw/0w8T/22NX/scfufnT1H3Co/4JD/RcC6gmH
PwARkDUp
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{68.98302662600926, 
                 105.34872946181328`}, {-19.286150934521515`, 
                 2.5884535624576586`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhxthgRY7VljTao4l9wqP+C
pp4Bh3oGHOr/2GNXjxDHrh7d/Qhx7Opf4FD/Aof70dUjxLGHD7p6JgLqCYc/
AAM2NSU=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.30378818417677, 129.94386216176702`}, {
                 23.69640619463548, 52.896611004052495`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.0616169978683824`*^-17]& ,
             TagBoxNote->"3.0616169978683824*^-17"],
            StyleBox[
            "3.0616169978683824`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.0616169978683824`*^-17, {"Graphics3DLabel"}], 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEABCPH/YPDcHlUcLs+ALo6qnsEB
VR4OcKj/Y49dPUIcu3p09yPEsauHyzOgi2N3P7p6hDj28EFXz0RAPeHwBwDv
RVa7
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{114.69610169461781`, 
                 155.42934444436784`}, {-39.3904308733256, 
                 18.443058222196683`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 0.7499999999999999]& ,
             TagBoxNote->"0.7499999999999999"],
            StyleBox[
            "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]},
         StripOnInput->False,
         FontColor->GrayLevel[0.4]]}, {}, {}},
      StripOnInput->False,
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[
    {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[{
     GrayLevel[0], Opacity[0.1]}], 
     StyleBox[{{}, 
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
        StyleBox[{
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.772061, 0.92462, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPYT+YM+AAhDiHrFdrefKjS1Rxb/gUP8F
Tf0HHOo/4FD/Aof6FwTUo7v/BQ73w8Rf4FD/Aof70dV/wKH+Cw71XwioJxz+
AMCaSrw=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{40.29050830754602, 80.60368790584975}, {
                 7.529139363047378, 33.577989424418206`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 3.749399456654644*^-33]& ,
             TagBoxNote->"3.749399456654644*^-33"],
            StyleBox[
            "3.749399456654644`*^-33", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[3.749399456654644*^-33, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIeCLPZThwIACEOLsMSLGassm2qCKM+FQz4Sm
/gMO9R9wqH+BQ/0LAurR3f8Ch/th4n/ssav/Y4/d/ejqP+BQ/wWH+i8E1BMO
fwCFuDXC
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{69.77100254471237, 
                 105.8905674853039}, {-18.655048974515154`, 
                 3.0772073987419617`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.7720609999999998, 0.9246199999999999, 0.998703], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAUJ/sGdAAQhx9hgRY7VlE21Qxb/gUP8F
TT0DDvUMONT/sceuHiGOXT26+xHi2NW/wKH+BQ73o6tHiGMPH3T1TATUEw5/
AHdeNb4=
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{88.95338277523614, 130.30954216444943`}, {
                 24.019653658164117`, 53.02504210682963}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 6.123233995736766*^-17]& ,
             TagBoxNote->"6.123233995736766*^-17"],
            StyleBox[
            "6.123233995736766`*^-17", {"Graphics3DLabel"}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[6.123233995736766*^-17, {"Graphics3DLabel"}], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            TagBox[
             {RGBColor[0.16791, 0., 0.301671], 
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                 BSplineSurface3DBox[CompressedData["
1:eJxTTMoPSmVmYGDgBGImIAaxIYDJAcpwYEAB6OIf7FHF4fIM2MVh6hnQxOEA
h/o/aPbAALo4unp096OLo6uHyzNgF0d3P7p6dHH08EFXjy6Orp5w+AMAqukh
Qg==
                  "], 
                  SplineWeights -> {{1, 1}, {2, 2}, {1, 1}, {2, 2}, {1, 1}, {
                   2, 2}, {1, 1}, {2, 2}, {1, 1}}, 
                  SplineKnots -> {{0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4}, {0, 0,
                     1, 1}}, SplineDegree -> {2, 1}, 
                  SplineClosed -> {True, False}, 
                  Method -> {"SurfaceCaps" -> True}]},
                
                ImageSizeCache->{{115.15666629469207`, 
                 155.61248946449845`}, {-38.61533578236124, 
                 18.818256428933132`}}],
               "DelayedMouseEffectStyle"]},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]},
         StripOnInput->False,
         FontColor->GrayLevel[0.4]]}, {}, {}},
      StripOnInput->False,
      FontColor->GrayLevel[0.4]]},
    Axes->{True, True, True},
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    FaceGridsStyle->Automatic,
    Lighting->"Neutral",
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{0.5, 2.5}, {0.5, 2.5}, {All, All}},
    PlotRangePadding->{{0, 0}, {0, 0}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8527040793706465`*^9, 3.8527040950313663`*^9}, {
   3.852704329358268*^9, 3.8527043426167064`*^9}, 3.8527044255226145`*^9, {
   3.852704736827984*^9, 3.8527047757681265`*^9}, 3.852704883724495*^9, 
   3.8527049399393005`*^9, {3.8527055274384775`*^9, 3.8527055654152174`*^9}, 
   3.852705951233014*^9, {3.852706074037055*^9, 3.8527060874148207`*^9}, {
   3.852706122770444*^9, 3.852706138847788*^9}, 3.8527062308628263`*^9, {
   3.852706271325712*^9, 3.852706317704979*^9}, 3.852706416952803*^9, 
   3.852706509772808*^9, 3.852706549460605*^9, 3.8527066442600164`*^9, 
   3.8527067070522327`*^9, 3.8527067737324343`*^9, 3.8527068287646513`*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"a56323cd-ac1a-463c-b1ff-bf6d39dc6042"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8527066649929123`*^9, 
  3.8527066654682446`*^9}},ExpressionUUID->"022add0b-041c-4746-b852-\
9c363a8fca87"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.852701611036688*^9, 
  3.8527016145623035`*^9}},ExpressionUUID->"a6ca8331-979c-4995-a8b2-\
35e24090bd41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8527016073431263`*^9},
 CellLabel->
  "Out[749]=",ExpressionUUID->"dc69eb9a-fba9-4a06-b76d-c2f583bdc4ba"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8527012089317293`*^9},
 NumberMarks->False,ExpressionUUID->"4b0e6338-cf7a-4d77-81d1-3b88a67114d6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.852704102550419*^9, 
  3.852704105950241*^9}},ExpressionUUID->"dfbe0ef4-7b3c-4fff-b5ad-\
7d920662c3c4"]
},
WindowSize->{951.5999999999999, 467.4},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"44b80ae7-38fc-4e21-b5cb-c47dddc4a693"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d"->{
  Cell[33563, 803, 39222, 844, 1602, "Print",ExpressionUUID->"8f8ac196-55c1-4ee0-aa37-b80e3dec7de1",
   CellTags->"Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d", 221791, 4937}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 459, 10, 86, "Input",ExpressionUUID->"2d90409d-cec0-485e-a330-29551883c542"],
Cell[CellGroupData[{
Cell[1042, 34, 203, 4, 28, "Input",ExpressionUUID->"60babb56-7ae1-43f5-834c-a61236a116f5"],
Cell[1248, 40, 32312, 761, 576, "Output",ExpressionUUID->"6bb281d7-4283-44a5-9c27-0db3de0d86f6"],
Cell[33563, 803, 39222, 844, 1602, "Print",ExpressionUUID->"8f8ac196-55c1-4ee0-aa37-b80e3dec7de1",
 CellTags->"Info-c3e132f7-a37f-403e-9d3c-ad6e2cad100d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72822, 1652, 6746, 151, 668, "Input",ExpressionUUID->"0257d2cf-3e07-4646-8465-9dbaa99c30e2"],
Cell[79571, 1805, 809, 12, 32, "Output",ExpressionUUID->"5a89f266-41e3-418e-be7a-00808ab6c881"],
Cell[80383, 1819, 822, 13, 32, "Output",ExpressionUUID->"7857bffd-d512-4602-acdb-e8fd88354922"],
Cell[81208, 1834, 1332, 30, 47, "Output",ExpressionUUID->"cf999717-3ce2-41e1-b247-242b361cf544"],
Cell[82543, 1866, 1368, 26, 32, "Output",ExpressionUUID->"f76edb6d-38b0-4d31-a67f-1ffdb53904b0"],
Cell[83914, 1894, 769, 15, 28, "Message",ExpressionUUID->"c64357af-c6f0-4e59-adea-33fe49b4c467"],
Cell[84686, 1911, 771, 15, 28, "Message",ExpressionUUID->"9f42abf6-f0d0-47a4-bd76-f4314f830728"],
Cell[85460, 1928, 771, 15, 28, "Message",ExpressionUUID->"2339dda1-72f7-41a4-824f-d769f643e0da"],
Cell[86234, 1945, 807, 15, 28, "Message",ExpressionUUID->"d4fc92ee-8191-429c-820b-2c4620ee9c08"],
Cell[87044, 1962, 771, 15, 28, "Message",ExpressionUUID->"2fcceb8e-3aaf-4583-99b8-1a88d260be95"],
Cell[87818, 1979, 771, 15, 28, "Message",ExpressionUUID->"92a6f2e5-10b8-4fdf-a21b-09b2de230778"],
Cell[88592, 1996, 771, 15, 28, "Message",ExpressionUUID->"b71e3b1f-2310-461c-b96d-570e2553a2df"],
Cell[89366, 2013, 807, 15, 28, "Message",ExpressionUUID->"d325b5a5-edd7-4416-b806-c0b4bd09dac3"],
Cell[90176, 2030, 53056, 1060, 208, "Output",ExpressionUUID->"00d3eb25-445b-4e04-86ea-e4e02e6a07f8"],
Cell[143235, 3092, 10175, 252, 185, "Output",ExpressionUUID->"d2ffa308-3050-464b-8d6b-c16f2462572e"]
}, Open  ]],
Cell[153425, 3347, 32873, 758, 379, InheritFromParent,ExpressionUUID->"0e4292c5-c641-49dc-b737-81f514ac8b0e"],
Cell[186301, 4107, 33781, 776, 406, "Output",ExpressionUUID->"a56323cd-ac1a-463c-b1ff-bf6d39dc6042"],
Cell[220085, 4885, 156, 3, 28, InheritFromParent,ExpressionUUID->"022add0b-041c-4746-b852-9c363a8fca87"],
Cell[CellGroupData[{
Cell[220266, 4892, 154, 3, 28, "Input",ExpressionUUID->"a6ca8331-979c-4995-a8b2-35e24090bd41"],
Cell[220423, 4897, 654, 17, 32, "Output",ExpressionUUID->"dc69eb9a-fba9-4a06-b76d-c2f583bdc4ba"]
}, Open  ]],
Cell[221092, 4917, 146, 2, 28, "Input",ExpressionUUID->"4b0e6338-cf7a-4d77-81d1-3b88a67114d6"],
Cell[221241, 4921, 152, 3, 28, InheritFromParent,ExpressionUUID->"dfbe0ef4-7b3c-4fff-b5ad-7d920662c3c4"]
}
]
*)

