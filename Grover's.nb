(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    445293,       9149]
NotebookOptionsPosition[    436651,       9019]
NotebookOutlinePosition[    437780,       9049]
CellTagsIndexPosition[    437612,       9043]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initialisation", " ", "-", " ", 
    RowBox[{"Run", " ", "first"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetEnvironment", "[", 
    RowBox[{"\"\<OMP_NUM_THREADS\>\"", "\[Rule]", "\"\<8\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Replace", " ", "the", " ", "following", " ", "with", " ", "the", " ", 
     "appropriate", " ", "pathways", " ", "for", " ", "your", " ", "device"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Import", "[", 
       "\"\</Users/questuser/Documents/QuESTlink/Link/QuESTlink.m\>\"", "]"}],
       " ", 
      RowBox[{"(*", 
       RowBox[{"QuESTlink", " ", "load"}], "*)"}], "\n", 
      RowBox[{
      "CreateLocalQuESTEnv", "[", 
       "\"\</Users/questuser/Documents/Kathryn/quest_link\>\"", "]"}]}], ";", 
     " ", 
     RowBox[{"(*", 
      RowBox[{"Creating", " ", "QuEST", " ", "environment"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
     "Import", "[", 
      "\"\</Users/questuser/Documents/Kathryn/RydbergInstaSWAPGerardCZ.wl\>\"\
", "]"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Configuration", " ", "File"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{
      "Import", "[", 
       "\"\</Users/questuser/Documents/Kathryn/SU4Gates9Qubits.csv\>\"", 
       "]"}]}], ";"}], " ", 
    RowBox[{"(*", 
     RowBox[{"Imported", " ", "gates", " ", "from", " ", "Qiskit"}], "*)"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\KitKa\\\\QuESTlink\\\\Link\\\\QuESTlink.m\>\"", "]"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"QuESTlink", " ", "load"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "CreateLocalQuESTEnv", "[", 
     "\"\<C:\\\\Users\\\\KitKa\\\\QuESTlink\\\\quest_link.exe\>\"", "]"}], 
    ";", 
    RowBox[{"(*", 
     RowBox[{"Creating", " ", "QuEST", " ", "environment"}], "*)"}], 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\KitKa\\\\QuESTlink\\\\Rydberg Custom Gates Custom \
SWAP Windows Vers.wl\>\"", "]"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Configuration", " ", "File"}], "*)"}], 
    RowBox[{"data", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<C:\\\\Users\\\\KitKa\\\\OneDrive\\\\Documents\\\\Wolfram \
Mathematica\\\\SU4Gates9Qubits.csv\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"userconfig", "=", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NQubits", "\[Rule]", " ", "9"}], ",", "\[IndentingNewLine]", 
       RowBox[{"QubitLocations", "->", 
        RowBox[{"Association", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "->", "#2"}], "&"}], "@@@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "8"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], 
            "}"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"blockade", " ", "radius", " ", "in", " ", "\[Mu]m"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"BlockadeRadius", "\[Rule]", "10"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"inter", "-", 
         RowBox[{"atomic", " ", "separation", " ", "in", " ", 
          RowBox[{"\[Mu]m", ".", " ", "This"}], " ", "will", " ", "be", " ", 
          "the", " ", "unit", " ", "of", " ", "the", " ", "lattice", " ", 
          "given", " ", "in", " ", "qubitLocations"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"UnitLattice", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"T1", "=", 
         RowBox[{
          RowBox[{"\[Tau]vac", "/", "nqubits"}], " ", "in", " ", "\[Mu]s"}]}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"VacuumLifeTime", "\[Rule]", 
        RowBox[{"4", "*", 
         SuperscriptBox["10", "6"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "the", " ", "\[Gamma]", " ", "noise", " ", "on", " ", "theq", " ", 
         "initialization"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"LeakProbInit", "\[Rule]", "0.007"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"duration", " ", "on", " ", "the", " ", "initialization"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"DurInit", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "measurement", " ", "induces", " ", "atom", " ", "loss", " ", 
         "afterward"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"FidMeas", "\[Rule]", " ", "100"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DurMeas", "\[Rule]", " ", 
        RowBox[{"2", "*", 
         SuperscriptBox["10", "4"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "the", " ", "increasing", " ", "chance", " ", "of", " ", "atom", " ",
           "loss", " ", "due", " ", "to", " ", "measurement"}], ",", " ", 
         RowBox[{"in", " ", "percent"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AtomLossMeas", "\[Rule]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "mostly", " ", "used", " ", "in", " ", "the", " ", "single", " ", 
          "qubit", " ", "noise"}], ",", " ", 
         RowBox[{"unit", " ", 
          RowBox[{"\[Mu]s", ".", " ", 
           RowBox[{"It", "'"}]}], "s", " ", "presumed", " ", "that", " ", 
          SuperscriptBox[
           SubscriptBox["T", "2"], "*"], " ", "has", " ", "been", " ", 
          "echoed", " ", "out", " ", "to", " ", 
          SubscriptBox["T", "2"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"T2", "\[Rule]", 
        RowBox[{"1.49", "*", 
         SuperscriptBox["10", "6"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "leak", " ", "probability", " ", "of", " ", "implementing", " ", 
          "multi"}], "-", 
         RowBox[{"qubit", " ", "gates"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"LeakProbCZ", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"01", "\[Rule]", " ", "0.001"}], ",", 
          RowBox[{"11", "\[Rule]", "0.001"}]}], " ", "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Rabi", " ", "frequency"}], ",", " ", "MHz"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalOmega]", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"fidelity", " ", "of", " ", "swap", " ", "operation"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"FidSWAP", "\[Rule]", "99.7"}]}], "\[IndentingNewLine]", 
      "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RydDev", "=", 
     RowBox[{"CreateRydbergDevice", "[", "userconfig", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"RydDev", "[", "InitLocations", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Defining", " ", 
     RowBox[{"QuEST", "'"}], "s", " ", "Rydberg", " ", "Blockade", " ", 
     "Check", " ", "in", " ", "a", " ", "permanent", " ", "function", " ", 
     "such", " ", "that", " ", "it", " ", "can", " ", "be", " ", "used", " ", 
     "without", " ", "constantly", " ", "editing", " ", "the", " ", "code"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qubitLocs", "=", 
     RowBox[{"userconfig", "[", "QubitLocations", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distloc", "[", 
      RowBox[{"q1_", ",", "q2_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"qubitLocs", "[", "q1", "]"}], "-", 
         RowBox[{"qubitLocs", "[", "q2", "]"}]}], ",", "2"}], "]"}], "*", 
      RowBox[{"userconfig", "[", "UnitLattice", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"blockadeCheck", "[", "q_List", "]"}], ":=", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"distloc", "@@", "#"}], "<=", " ", 
           RowBox[{"userconfig", "[", "BlockadeRadius", "]"}]}], ")"}], "&"}],
         "/@", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "q", "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8555677125498886`*^9, 3.8555677499780407`*^9}, {
   3.8555679844766912`*^9, 3.8555680056259885`*^9}, {3.855571969562276*^9, 
   3.85557199774685*^9}, {3.855573061436061*^9, 3.8555730617178135`*^9}, 
   3.855573115677148*^9, {3.8555747577452054`*^9, 3.8555748148938026`*^9}, 
   3.8555758033875275`*^9, 3.85567229896581*^9, {3.855678892700905*^9, 
   3.8556789568136244`*^9}, {3.855678992261593*^9, 3.8556789945280323`*^9}, {
   3.855679135111498*^9, 3.8556791481497145`*^9}, {3.8556791951856174`*^9, 
   3.8556792035594745`*^9}, {3.855679308878611*^9, 3.8556793098718176`*^9}, {
   3.855732847912708*^9, 3.855732854266576*^9}, {3.8557330411168594`*^9, 
   3.85573304197637*^9}, {3.8557345539253173`*^9, 3.855734576138501*^9}, {
   3.8557347899234085`*^9, 3.85573479016605*^9}, {3.855734875954691*^9, 
   3.8557350242181473`*^9}, {3.8557351379407516`*^9, 
   3.8557351977523384`*^9}, {3.8557352409476986`*^9, 3.855735257052588*^9}, {
   3.855735287112214*^9, 3.855735317371846*^9}, {3.85573536664421*^9, 
   3.8557353978409414`*^9}, {3.855735568875251*^9, 3.8557356035565696`*^9}, {
   3.8557356757052755`*^9, 3.8557357566597433`*^9}, {3.855735789949299*^9, 
   3.8557357954405956`*^9}, {3.855735850259159*^9, 3.855735886984538*^9}, {
   3.8557359674652276`*^9, 3.8557359973419437`*^9}, {3.8557360291184654`*^9, 
   3.8557361637401457`*^9}, {3.8557362087383304`*^9, 3.855736512875628*^9}, {
   3.8557365532405276`*^9, 3.855736605312958*^9}, {3.8557366357000074`*^9, 
   3.8557367203036585`*^9}, {3.8557367536650076`*^9, 
   3.8557367576543226`*^9}, {3.8557368006994624`*^9, 3.855736878315889*^9}, {
   3.8557377563073235`*^9, 3.855737790423786*^9}, {3.855737854873083*^9, 
   3.8557378553814125`*^9}, {3.855737886633793*^9, 3.8557378984409323`*^9}, {
   3.8557380021460414`*^9, 3.8557380184517374`*^9}, 3.8557496013281484`*^9, {
   3.855751505827986*^9, 3.855751553517994*^9}, {3.855761757160639*^9, 
   3.8557617968249474`*^9}, {3.8557618278217106`*^9, 
   3.8557619592574186`*^9}, {3.8557641250666633`*^9, 3.855764141092433*^9}, {
   3.8558462094983315`*^9, 3.855846213915947*^9}, {3.8558463782003155`*^9, 
   3.855846382401284*^9}, {3.8558499380653253`*^9, 3.8558499678099084`*^9}, {
   3.8560437764017935`*^9, 3.856043785954774*^9}, 3.856106798508226*^9, 
   3.8561083357155952`*^9, {3.856179610989068*^9, 3.8561796409550915`*^9}, {
   3.856179763443574*^9, 3.856179763766099*^9}, {3.8561800239714303`*^9, 
   3.856180044545492*^9}, {3.856246350711205*^9, 3.8562463652012386`*^9}, {
   3.8562474144272156`*^9, 3.856247446394012*^9}, {3.8562754332616167`*^9, 
   3.85627543354335*^9}, 3.85652885006476*^9, {3.856528901359391*^9, 
   3.8565289487029953`*^9}, {3.856691508900372*^9, 3.8566915092871866`*^9}, {
   3.8568701447416124`*^9, 3.8568701541347437`*^9}, {3.869764093006608*^9, 
   3.869764209329553*^9}, {3.8697642538813725`*^9, 3.8697642926796865`*^9}, {
   3.8697648364312677`*^9, 3.869764862927064*^9}, {3.869765818977166*^9, 
   3.8697658641583443`*^9}, {3.8702497656977158`*^9, 3.870249767276349*^9}, {
   3.870254437522337*^9, 3.870254444632955*^9}, {3.8702544788512125`*^9, 
   3.8702545074246364`*^9}, {3.870255007272294*^9, 3.870255086977544*^9}, {
   3.870255667870722*^9, 3.870255671104046*^9}, {3.870256202913023*^9, 
   3.8702562721328716`*^9}, {3.870257169774789*^9, 3.870257186262807*^9}, {
   3.870339503757119*^9, 3.870339547582723*^9}, {3.8703430271156983`*^9, 
   3.870343046874714*^9}, {3.870343590468602*^9, 3.870343601702702*^9}, {
   3.8703440751221924`*^9, 3.870344108807068*^9}, {3.8703446354070234`*^9, 
   3.8703446437315464`*^9}, {3.8703447289541807`*^9, 3.870344739592332*^9}, {
   3.870355789084371*^9, 3.8703557898037987`*^9}, {3.8703573555279446`*^9, 
   3.8703573587240095`*^9}, {3.870525566411146*^9, 3.870525569315765*^9}, {
   3.8706154376327305`*^9, 3.8706154748857956`*^9}, {3.8706157110501685`*^9, 
   3.870615720817946*^9}, {3.8706163511254005`*^9, 3.8706164024006476`*^9}, {
   3.8706209790685043`*^9, 3.8706209792895164`*^9}, {3.8706876346578116`*^9, 
   3.870687656738711*^9}, {3.8706880796461787`*^9, 3.8706881142593775`*^9}, {
   3.870689824060957*^9, 3.8706898380173273`*^9}, {3.8706903428066425`*^9, 
   3.8706903538499007`*^9}, {3.8706904077801113`*^9, 
   3.8706904089396296`*^9}, {3.8706905503742437`*^9, 3.870690550752933*^9}, {
   3.8706908328175173`*^9, 3.8706908346325045`*^9}, {3.8706921045158625`*^9, 
   3.8706921070121117`*^9}, {3.8706925680377674`*^9, 3.870692574398798*^9}, {
   3.870692956407189*^9, 3.8706929582149954`*^9}, {3.8706931883174067`*^9, 
   3.8706932092662983`*^9}, {3.8706935941298485`*^9, 3.870693609097371*^9}, {
   3.8706952743427715`*^9, 3.870695310737409*^9}, {3.8706955374705315`*^9, 
   3.870695576797698*^9}, {3.870696285917361*^9, 3.8706963060772*^9}, {
   3.8706971349602118`*^9, 3.8706971405252*^9}, {3.870699164134134*^9, 
   3.8706991792715583`*^9}, {3.8706997414286385`*^9, 
   3.8706997571388745`*^9}, {3.8707619553686805`*^9, 3.870762007240861*^9}, {
   3.870762581942297*^9, 3.8707625874564447`*^9}, {3.8707638620041246`*^9, 
   3.870763885131689*^9}, {3.8707643142525077`*^9, 3.8707643267842894`*^9}, {
   3.870768361047923*^9, 3.870768367474672*^9}, {3.870772132111415*^9, 
   3.870772166001464*^9}, {3.8707723642024136`*^9, 3.870772373498863*^9}, {
   3.870772870828947*^9, 3.87077289726868*^9}, {3.8707761103842816`*^9, 
   3.8707761605002174`*^9}, {3.870777849172165*^9, 3.870777859785619*^9}, {
   3.8707789738332453`*^9, 3.870778988268073*^9}, {3.8707810898427544`*^9, 
   3.8707811058270903`*^9}, {3.8707811584591894`*^9, 3.870781193515012*^9}, {
   3.870781436846074*^9, 3.8707814501794877`*^9}, {3.8707820917937994`*^9, 
   3.8707821016687984`*^9}, {3.8707830647313023`*^9, 3.870783136127562*^9}, {
   3.8707834055045557`*^9, 3.8707834153376694`*^9}, {3.870783940372338*^9, 
   3.870783951133872*^9}, {3.8708668706689963`*^9, 3.87086687756304*^9}, {
   3.8708700132722564`*^9, 3.8708700250310087`*^9}, {3.870880005596017*^9, 
   3.8708800148335114`*^9}, {3.8709433039944487`*^9, 3.870943310267974*^9}, {
   3.8709458496855516`*^9, 3.8709458566446123`*^9}, {3.870952950714529*^9, 
   3.8709530007262316`*^9}, {3.8709538465624275`*^9, 3.870953847691166*^9}, {
   3.8709555082060184`*^9, 3.8709555346459637`*^9}, {3.8709566077806897`*^9, 
   3.870956610360072*^9}, {3.8709581767567024`*^9, 3.870958178500885*^9}, {
   3.870962872622297*^9, 3.8709628787155848`*^9}, {3.870963612075901*^9, 
   3.8709636199286366`*^9}, {3.870964444090536*^9, 3.8709644447984433`*^9}, {
   3.8709661252785497`*^9, 3.8709661310718374`*^9}, {3.8709670124128656`*^9, 
   3.8709670860163436`*^9}, {3.870968814148964*^9, 3.8709688432703743`*^9}, {
   3.871026430154524*^9, 3.8710264307157946`*^9}, {3.8710288243903704`*^9, 
   3.87102882980945*^9}, {3.8711182319687552`*^9, 3.871118248867213*^9}, {
   3.8711183662918353`*^9, 3.8711183898489857`*^9}, {3.871125137524788*^9, 
   3.871125144557757*^9}, {3.8711259063108516`*^9, 3.8711259125402355`*^9}, {
   3.871371158953022*^9, 3.8713711974120164`*^9}, {3.8713712539614515`*^9, 
   3.8713712631679792`*^9}, {3.871372904751591*^9, 3.871372917393471*^9}, {
   3.8713742450460577`*^9, 3.8713742537079277`*^9}, {3.872922390782578*^9, 
   3.8729224979425697`*^9}, {3.8729226801202135`*^9, 
   3.8729227465826006`*^9}, {3.8729228436780577`*^9, 3.872922843918697*^9}, {
   3.8729267335870056`*^9, 3.8729267387646823`*^9}, {3.8737910423264427`*^9, 
   3.873791050180379*^9}, {3.873791081876588*^9, 3.8737911059669*^9}, {
   3.873791488500761*^9, 3.8737914930643396`*^9}, {3.8737915365127068`*^9, 
   3.8737915383362217`*^9}, {3.873794902753787*^9, 3.873794963899135*^9}, {
   3.873794993952442*^9, 3.873795016836255*^9}, 3.873795049587044*^9, {
   3.873795110389585*^9, 3.873795115853443*^9}, {3.876598895066617*^9, 
   3.876598936091878*^9}, {3.8765989780656643`*^9, 3.876598980559504*^9}, {
   3.876840930706741*^9, 3.8768409648360066`*^9}, {3.8773226712863293`*^9, 
   3.8773226940881367`*^9}, {3.8786624860179996`*^9, 3.878662520339877*^9}, {
   3.878801701270069*^9, 3.878801701492175*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"30d941c4-c74d-4019-8d8c-c4d11a9d026a"],

Cell[BoxData[
 Graphics3DBox[{{SphereBox[{0, 0, 0}, 0.1], SphereBox[{0, 1, 0}, 0.1], 
    SphereBox[{1, 0, 0}, 0.1], SphereBox[{1, 1, 0}, 0.1], 
    SphereBox[{0, 2, 0}, 0.1], SphereBox[{1, 2, 0}, 0.1], 
    SphereBox[{2, 0, 0}, 0.1], SphereBox[{2, 1, 0}, 0.1], 
    SphereBox[{2, 2, 0}, 0.1]}, {Text3DBox["0", {0, 0, 0}], 
    Text3DBox["1", {0, 1, 0}], Text3DBox["2", {1, 0, 0}], 
    Text3DBox["3", {1, 1, 0}], Text3DBox["4", {0, 2, 0}], 
    Text3DBox["5", {1, 2, 0}], Text3DBox["6", {2, 0, 0}], 
    Text3DBox["7", {2, 1, 0}], Text3DBox["8", {2, 2, 0}]}},
  ImageSize->500]], "Output",
 CellChangeTimes->{{3.869764201891713*^9, 3.8697642099490824`*^9}, 
   3.869764353200732*^9, 3.869764867445258*^9, {3.8697658404431267`*^9, 
   3.869765866145874*^9}, 3.870254512034601*^9, 3.870254723128738*^9, {
   3.8702550689446774`*^9, 3.8702550876289577`*^9}, 3.8702556966937003`*^9, {
   3.8702562349321804`*^9, 3.870256274693828*^9}, 3.8702572012655272`*^9, 
   3.8703370338963113`*^9, 3.8703395522397585`*^9, 3.870343170471235*^9, 
   3.8703436052194924`*^9, 3.8703441110734024`*^9, 3.8703446504249105`*^9, 
   3.8703447422415485`*^9, 3.8703541863537207`*^9, {3.8703557786876287`*^9, 
   3.870355791337949*^9}, 3.870357366280344*^9, 3.870525575376318*^9, 
   3.870525780785*^9, 3.8705267797263927`*^9, 3.8705269758016605`*^9, 
   3.870615482639387*^9, 3.870615916394661*^9, 3.870616404504269*^9, 
   3.870617658995984*^9, 3.8706186803003936`*^9, 3.870622095520028*^9, {
   3.870622807373558*^9, 3.870622834119488*^9}, 3.8706876649170494`*^9, 
   3.8706881206528835`*^9, 3.8706898391307297`*^9, 3.8706903551603165`*^9, 
   3.8706904098461103`*^9, 3.8706905533307285`*^9, 3.870690835615718*^9, 
   3.8706919373215613`*^9, 3.8706921169596004`*^9, 3.870692578977914*^9, 
   3.8706929636700115`*^9, 3.870693215380574*^9, 3.8706936225969872`*^9, {
   3.870695303137802*^9, 3.8706953118951435`*^9}, {3.8706955666378326`*^9, 
   3.8706955773973675`*^9}, 3.870696307759901*^9, 3.8706971458987923`*^9, 
   3.8706991802015533`*^9, 3.8706997595907664`*^9, 3.8707625991741047`*^9, {
   3.870762950055732*^9, 3.870762957871727*^9}, 3.8707632994583654`*^9, 
   3.870763896557705*^9, 3.870764330426019*^9, 3.8707721219670353`*^9, 
   3.8707721674118567`*^9, 3.8707723810449104`*^9, 3.870772897975599*^9, 
   3.870776166531052*^9, 3.8707763255413933`*^9, 3.870776359055863*^9, 
   3.870776699343213*^9, 3.870777122390447*^9, 3.8707775124174395`*^9, 
   3.8707775845549793`*^9, 3.8707778668061733`*^9, 3.8707789917082467`*^9, 
   3.8707812080612135`*^9, 3.8707814511744204`*^9, 3.8707821053764877`*^9, 
   3.870783171608604*^9, 3.8707834215420094`*^9, 3.8707839534419346`*^9, 
   3.8708661420897655`*^9, 3.8708668797913237`*^9, 3.8708700293591485`*^9, 
   3.870880018971373*^9, 3.870936986029925*^9, 3.8709435420672626`*^9, 
   3.870945858348213*^9, 3.870954078332282*^9, 3.870954487363804*^9, 
   3.8709546013859906`*^9, 3.870955537515504*^9, 3.870956611952507*^9, 
   3.8709581804847207`*^9, 3.870961928413619*^9, {3.87096285251027*^9, 
   3.870962879857122*^9}, 3.8709636263213615`*^9, 3.870964445847844*^9, 
   3.8709644945349445`*^9, 3.870965114800194*^9, 3.8709652795634985`*^9, 
   3.870966133572295*^9, 3.870968844378199*^9, 3.8710264320459137`*^9, 
   3.871028833498926*^9, {3.8711183766369195`*^9, 3.871118391133934*^9}, {
   3.871122195532465*^9, 3.8711222095158825`*^9}, 3.871124465307122*^9, 
   3.87112514736948*^9, 3.8711259181042356`*^9, 3.871371176016751*^9, 
   3.8713712660517063`*^9, 3.871372920768943*^9, 3.871374264999995*^9, 
   3.8729227034136624`*^9, 3.8729228004533997`*^9, {3.873791097721634*^9, 
   3.8737911080006857`*^9}, {3.873795098613048*^9, 3.8737951204212227`*^9}, 
   3.873797168604388*^9, 3.873801208958522*^9, 3.8738890715631742`*^9, 
   3.873897348270155*^9, 3.876599139365656*^9, {3.877322659329177*^9, 
   3.8773226957633543`*^9}, 3.8773234260468884`*^9, 3.877323694702872*^9, 
   3.878320901404422*^9, 3.87849055486712*^9, 3.878657090485984*^9, {
   3.8786574910770817`*^9, 3.878657506330295*^9}, 3.878662525720924*^9, 
   3.878662598748042*^9, 3.8786659120930033`*^9, 3.8786772010013075`*^9, 
   3.8788016631600046`*^9, 3.8788017038208337`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b59b7e2b-067a-4e52-b49d-2bb76b1ce358"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fraction", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"a", "/", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KetList", "[", "NQ_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ToExpression", "@", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"IntegerString", "[", 
         RowBox[{"i", ",", "2", ",", "NQ"}], "]"}], ",", "\"\<\>\""}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", "^", "NQ"}], "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Fully", " ", "Translate", " ", "Qiskit", " ", "output", " ", "into", " ",
      "QuEST", " ", "format"}], ",", " ", 
    RowBox[{"SWAP", " ", "Procedure"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MeasErrors", "[", "QubitList_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"U", ",", 
       RowBox[{"QubitList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.9997", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.0003"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "QubitList", "]"}]}], "}"}]}], 
   "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.855569449280243*^9, 3.8555695006194353`*^9}, {
   3.855569546045657*^9, 3.8555696856544447`*^9}, {3.8555697309462786`*^9, 
   3.855569943313862*^9}, {3.8555699778642597`*^9, 3.8555699859701786`*^9}, {
   3.8555700895574255`*^9, 3.8555700914017015`*^9}, {3.8555707258669186`*^9, 
   3.855570792435306*^9}, {3.8555708662074103`*^9, 3.8555709148282566`*^9}, {
   3.855570947234868*^9, 3.8555711770275955`*^9}, {3.8555712091644335`*^9, 
   3.8555712418198767`*^9}, {3.8555712877765265`*^9, 
   3.8555713427034583`*^9}, {3.8555713890498533`*^9, 3.855571410223898*^9}, {
   3.855571800192235*^9, 3.855571836888734*^9}, {3.8555721093804407`*^9, 
   3.8555722099792523`*^9}, {3.8555723548654957`*^9, 
   3.8555726336493034`*^9}, {3.8555728925165086`*^9, 
   3.8555730409184504`*^9}, {3.855573159641159*^9, 3.8555731739870677`*^9}, {
   3.8555732775362124`*^9, 3.8555733041794095`*^9}, {3.8555733373743477`*^9, 
   3.8555733454786797`*^9}, {3.8555733776504154`*^9, 
   3.8555735106708937`*^9}, {3.855573547148548*^9, 3.8555737621933804`*^9}, {
   3.8555739297903247`*^9, 3.855573974494041*^9}, 3.855574067521492*^9, {
   3.855574103744507*^9, 3.855574203924735*^9}, {3.8555742482339597`*^9, 
   3.855574250347171*^9}, {3.855574286537739*^9, 3.8555743124114065`*^9}, {
   3.855574453421564*^9, 3.855574530705413*^9}, {3.8555745734956875`*^9, 
   3.855574742190248*^9}, {3.8555748364188232`*^9, 3.8555748527630787`*^9}, {
   3.855574992995102*^9, 3.8555749951312046`*^9}, {3.855575037371522*^9, 
   3.8555750632804685`*^9}, {3.8555751709937305`*^9, 3.85557518734297*^9}, {
   3.855575219563407*^9, 3.855575319680392*^9}, {3.8555758303032613`*^9, 
   3.8555758359360456`*^9}, {3.855575886709408*^9, 3.8555758988886003`*^9}, {
   3.8555767367677984`*^9, 3.8555767635112686`*^9}, {3.855576819345598*^9, 
   3.8555770482633023`*^9}, {3.855598284983184*^9, 3.8555984642473564`*^9}, {
   3.8555985170226097`*^9, 3.855598761987514*^9}, {3.855598792093711*^9, 
   3.8555989912748084`*^9}, {3.855599049876738*^9, 3.8555990946568747`*^9}, {
   3.855599237055704*^9, 3.8555994064808745`*^9}, {3.855599438096115*^9, 
   3.855599445369358*^9}, {3.8555994809807224`*^9, 3.8555994819937096`*^9}, {
   3.85559956983508*^9, 3.8555995816997986`*^9}, {3.855599659516608*^9, 
   3.8555997027955356`*^9}, {3.8555997383239155`*^9, 
   3.8555997414727907`*^9}, {3.855599786156188*^9, 3.8555998784610004`*^9}, {
   3.855599921348245*^9, 3.8555999533123207`*^9}, {3.8556000210699463`*^9, 
   3.855600030345811*^9}, {3.8556000754740906`*^9, 3.8556000770997148`*^9}, {
   3.855600196193287*^9, 3.8556002770628633`*^9}, {3.855600307552373*^9, 
   3.8556003217285647`*^9}, {3.855600356443034*^9, 3.855600382912166*^9}, {
   3.8556004135372353`*^9, 3.8556004844378834`*^9}, {3.855600529780834*^9, 
   3.8556005401719885`*^9}, {3.8556006443718634`*^9, 
   3.8556006972978334`*^9}, {3.8556007296603155`*^9, 
   3.8556007548679314`*^9}, {3.8556007926449485`*^9, 3.855600797367364*^9}, {
   3.855600863245316*^9, 3.855600879159737*^9}, {3.8556009541665955`*^9, 
   3.855600969940489*^9}, {3.85560105778295*^9, 3.8556011009651823`*^9}, {
   3.855601131513076*^9, 3.8556011577180023`*^9}, 3.855601302072591*^9, {
   3.8556014782872934`*^9, 3.8556015711179943`*^9}, {3.8556623388134594`*^9, 
   3.85566234141721*^9}, {3.8556623750485077`*^9, 3.855662375840476*^9}, {
   3.855662418727945*^9, 3.855662448767484*^9}, {3.8556633100537186`*^9, 
   3.855663482569352*^9}, {3.8556635539427576`*^9, 3.855664073824857*^9}, {
   3.855664134408388*^9, 3.855664213294774*^9}, {3.8556645115150375`*^9, 
   3.8556645908572907`*^9}, 3.8556649926008377`*^9, {3.855667728029828*^9, 
   3.85566773781531*^9}, {3.8556724088059654`*^9, 3.8556724607757115`*^9}, {
   3.8556725105137644`*^9, 3.8556726885418262`*^9}, {3.855672782352247*^9, 
   3.8556728486834555`*^9}, {3.8556728835789495`*^9, 3.855672890881378*^9}, {
   3.8556729221271725`*^9, 3.8556729545343585`*^9}, {3.855672994976226*^9, 
   3.8556730242416277`*^9}, {3.855673064161134*^9, 3.8556730939676647`*^9}, {
   3.8556774507302713`*^9, 3.8556774966533327`*^9}, {3.855678557969005*^9, 
   3.8556785658836503`*^9}, {3.855678737260953*^9, 3.855678781833343*^9}, {
   3.855679365926746*^9, 3.8556794886797943`*^9}, {3.8557346288853626`*^9, 
   3.855734654788542*^9}, {3.8557346896220565`*^9, 3.855734749042055*^9}, {
   3.855734807439622*^9, 3.8557348152190866`*^9}, {3.8557354283785095`*^9, 
   3.8557355406491165`*^9}, {3.855736180092074*^9, 3.8557361975629144`*^9}, {
   3.8557367716807966`*^9, 3.8557367762205315`*^9}, {3.8557379280141563`*^9, 
   3.855737929158292*^9}, 3.8557381586975694`*^9, {3.8557382032130156`*^9, 
   3.855738237097622*^9}, {3.8557382704103355`*^9, 3.855738387407127*^9}, {
   3.8557384690840845`*^9, 3.855738576442005*^9}, {3.855738616855714*^9, 
   3.85573868982193*^9}, {3.855738756679141*^9, 3.855738797151013*^9}, {
   3.8557388373804483`*^9, 3.8557388772883263`*^9}, {3.8557389631188307`*^9, 
   3.8557389766184993`*^9}, {3.8557390264031534`*^9, 3.855739082296462*^9}, {
   3.855739175541384*^9, 3.8557391807757225`*^9}, {3.8557393258274155`*^9, 
   3.8557394055013847`*^9}, {3.855739484613037*^9, 3.8557394874844074`*^9}, {
   3.855739522251233*^9, 3.8557396592910614`*^9}, {3.8557401485642924`*^9, 
   3.8557402412893543`*^9}, {3.855740333177065*^9, 3.8557404431733885`*^9}, {
   3.85574048313113*^9, 3.8557405717459784`*^9}, {3.8557406129426775`*^9, 
   3.85574062677604*^9}, {3.8557408413879285`*^9, 3.855740900039339*^9}, {
   3.8557409712965317`*^9, 3.8557409810702767`*^9}, {3.855741039262369*^9, 
   3.855741050393813*^9}, {3.855741188858411*^9, 3.855741338442976*^9}, {
   3.8557414339755754`*^9, 3.85574146393937*^9}, {3.8557415166443386`*^9, 
   3.8557415867056*^9}, {3.855741622354781*^9, 3.855741654352185*^9}, {
   3.8557418962475924`*^9, 3.855741935503415*^9}, {3.8557422318606*^9, 
   3.855742238224289*^9}, {3.855742282393857*^9, 3.8557423077639675`*^9}, {
   3.8557426769076805`*^9, 3.8557428033381653`*^9}, {3.855743192883521*^9, 
   3.8557432217372913`*^9}, 3.855743537307534*^9, {3.8557435794428215`*^9, 
   3.855743581402772*^9}, {3.8557436252617865`*^9, 3.855743635346414*^9}, {
   3.8557437194513516`*^9, 3.855743900881301*^9}, {3.855744001182184*^9, 
   3.8557441842314234`*^9}, {3.855744241578707*^9, 3.855744317564558*^9}, {
   3.855744358211688*^9, 3.85574437701149*^9}, {3.855744416824252*^9, 
   3.855744484151786*^9}, {3.855744564535299*^9, 3.8557446473662715`*^9}, {
   3.855744870220163*^9, 3.8557449335919647`*^9}, {3.855744986110628*^9, 
   3.855744996642339*^9}, {3.8557450323908386`*^9, 3.8557450880425353`*^9}, {
   3.855745136944617*^9, 3.855745168856236*^9}, {3.855745205371077*^9, 
   3.855745210274801*^9}, {3.8557452656995716`*^9, 3.8557452959312096`*^9}, {
   3.8557453339938383`*^9, 3.85574533466148*^9}, {3.8557453870552225`*^9, 
   3.8557453914982634`*^9}, {3.8557454460857897`*^9, 
   3.8557455948956065`*^9}, {3.8557457548311296`*^9, 3.855745756007351*^9}, {
   3.8557457899950466`*^9, 3.855745872007823*^9}, {3.855745923884678*^9, 
   3.855746077842479*^9}, {3.855746188480755*^9, 3.8557462449489527`*^9}, {
   3.8557463014772625`*^9, 3.8557463052897034`*^9}, {3.8557465046896276`*^9, 
   3.8557467092626*^9}, {3.8557467772625713`*^9, 3.855746852007533*^9}, {
   3.8557468908407183`*^9, 3.8557469492031507`*^9}, {3.8557472540444045`*^9, 
   3.8557474168089824`*^9}, {3.85574745175192*^9, 3.8557475001631575`*^9}, {
   3.8557475643002496`*^9, 3.8557476448266144`*^9}, {3.8557476756807623`*^9, 
   3.855747683498293*^9}, {3.8557477881645217`*^9, 3.855747845458394*^9}, {
   3.8557478788008738`*^9, 3.855747895445828*^9}, {3.855749620695983*^9, 
   3.8557496315080643`*^9}, {3.8557496731232266`*^9, 3.855749679794189*^9}, {
   3.8557497564883504`*^9, 3.855750028409618*^9}, {3.8557500649869304`*^9, 
   3.8557500683908825`*^9}, {3.8557501157810774`*^9, 3.855750156451907*^9}, {
   3.855750202713142*^9, 3.8557502030067554`*^9}, {3.855750273714654*^9, 
   3.855750284297918*^9}, {3.8557503543519864`*^9, 3.855750368448489*^9}, {
   3.8557504546929975`*^9, 3.8557504673690763`*^9}, 3.8557505104824953`*^9, {
   3.8557507320132637`*^9, 3.8557507812625847`*^9}, {3.855750818756451*^9, 
   3.8557509439507833`*^9}, {3.855751426685483*^9, 3.855751490057233*^9}, {
   3.855751618099966*^9, 3.855751625353426*^9}, {3.8557516876947546`*^9, 
   3.855751804155647*^9}, {3.855752110427389*^9, 3.8557521369778285`*^9}, {
   3.8557522000725183`*^9, 3.85575220036952*^9}, {3.8557522365261307`*^9, 
   3.855752278750168*^9}, {3.855752333379622*^9, 3.8557523718714614`*^9}, {
   3.8557525860564632`*^9, 3.8557526809621415`*^9}, {3.8557597287356105`*^9, 
   3.855759746563961*^9}, {3.8557603069273825`*^9, 3.85576031795918*^9}, {
   3.8557603782949357`*^9, 3.855760397933503*^9}, {3.8557612684348927`*^9, 
   3.8557612932228327`*^9}, {3.8557613243014283`*^9, 3.855761328379789*^9}, {
   3.8557613628181667`*^9, 3.85576137337687*^9}, {3.8557615261862187`*^9, 
   3.8557615285034666`*^9}, {3.8557616793207326`*^9, 
   3.8557616805618525`*^9}, {3.855762009819868*^9, 3.855762041987773*^9}, {
   3.855762087078537*^9, 3.8557620901768723`*^9}, {3.855762149091507*^9, 
   3.8557621555013695`*^9}, {3.8557621882772474`*^9, 
   3.8557621981978436`*^9}, {3.855762250822832*^9, 3.855762257905193*^9}, {
   3.8557622977213182`*^9, 3.855762306206712*^9}, {3.8557623583360567`*^9, 
   3.8557623698523073`*^9}, {3.8557626216355467`*^9, 
   3.8557626463953233`*^9}, {3.855763077300051*^9, 3.855763130243536*^9}, {
   3.8557634789474115`*^9, 3.8557634878727064`*^9}, {3.855763943079441*^9, 
   3.8557640117347794`*^9}, {3.8557641910648575`*^9, 
   3.8557641944356933`*^9}, {3.8557643665507216`*^9, 3.85576441377588*^9}, 
   3.855764482757019*^9, {3.8557645352137337`*^9, 3.8557645611249723`*^9}, {
   3.8557645913562756`*^9, 3.8557646004037094`*^9}, {3.8557646585620375`*^9, 
   3.855764684519351*^9}, {3.855845169153384*^9, 3.855845195628674*^9}, {
   3.8558452509103165`*^9, 3.855845264668239*^9}, {3.8558453085085726`*^9, 
   3.8558453106897717`*^9}, {3.855845400335904*^9, 3.8558454035075836`*^9}, {
   3.855845442845481*^9, 3.855845447300583*^9}, {3.8558454832289333`*^9, 
   3.8558454856615763`*^9}, {3.8558458242113433`*^9, 
   3.8558461995196133`*^9}, {3.8558462362636914`*^9, 
   3.8558462937178383`*^9}, {3.8558463963063154`*^9, 
   3.8558464001751833`*^9}, {3.855846461265565*^9, 3.8558464674344587`*^9}, {
   3.855846529308642*^9, 3.8558465446549406`*^9}, {3.8558466260890803`*^9, 
   3.855846711510339*^9}, {3.855846751378519*^9, 3.8558467787159305`*^9}, {
   3.8558468428909063`*^9, 3.855846850046728*^9}, {3.855849563270631*^9, 
   3.855849632316082*^9}, {3.855849760640685*^9, 3.855849772606003*^9}, {
   3.855849985235654*^9, 3.8558499854254217`*^9}, {3.855850021324521*^9, 
   3.855850045296239*^9}, 3.8558509631117144`*^9, {3.8558511390234346`*^9, 
   3.855851142471484*^9}, {3.8558511831389484`*^9, 3.8558511890527086`*^9}, 
   3.855851308484349*^9, {3.855851419483979*^9, 3.8558514388844776`*^9}, {
   3.8558514734915447`*^9, 3.8558515268724875`*^9}, 3.856013894495421*^9, {
   3.8560139282399406`*^9, 3.856013937091119*^9}, {3.8560139930608115`*^9, 
   3.856014071893697*^9}, {3.8560141064299*^9, 3.856014116677659*^9}, {
   3.8560141922736206`*^9, 3.8560142130496626`*^9}, {3.856014244395715*^9, 
   3.856014497678632*^9}, 3.8560145496872272`*^9, {3.8560146093917975`*^9, 
   3.8560146488717146`*^9}, {3.85601526396672*^9, 3.856015362977167*^9}, {
   3.8560154827045546`*^9, 3.8560155132286587`*^9}, {3.856015669168001*^9, 
   3.856015855831571*^9}, {3.856016155558303*^9, 3.8560162402817564`*^9}, {
   3.8560162837943354`*^9, 3.856016339162101*^9}, {3.8560164178886275`*^9, 
   3.8560164331887045`*^9}, {3.856016600881501*^9, 3.856016625443793*^9}, {
   3.856016675073402*^9, 3.8560167638202114`*^9}, {3.8560168321357455`*^9, 
   3.856016834088998*^9}, {3.856017299674633*^9, 3.856017327525226*^9}, {
   3.856017374738194*^9, 3.856017615931943*^9}, {3.8560176737122574`*^9, 
   3.8560178344345655`*^9}, {3.8560207649279737`*^9, 
   3.8560207771615057`*^9}, {3.8560210010691624`*^9, 
   3.8560211108949995`*^9}, {3.856021320872413*^9, 3.8560213511840982`*^9}, {
   3.856021409221692*^9, 3.8560215687795153`*^9}, {3.856021704649088*^9, 
   3.856021714518567*^9}, {3.8560230337035975`*^9, 3.8560231019510574`*^9}, {
   3.85602358223046*^9, 3.8560236195551305`*^9}, {3.8560236847258987`*^9, 
   3.8560237855929875`*^9}, {3.8560238495699973`*^9, 3.856023850110542*^9}, {
   3.8560239723250647`*^9, 3.856023976099826*^9}, {3.856024253349783*^9, 
   3.8560243307151346`*^9}, {3.856024520956643*^9, 3.856024596484047*^9}, {
   3.85602467186522*^9, 3.856024790440494*^9}, {3.8560249500701494`*^9, 
   3.8560250697844*^9}, {3.856025286869313*^9, 3.856025313676959*^9}, {
   3.856026442886656*^9, 3.856026445078144*^9}, {3.8560271071435614`*^9, 
   3.8560273625542827`*^9}, {3.8560274321077366`*^9, 
   3.8560275542601433`*^9}, {3.8560275976870813`*^9, 
   3.8560276074553027`*^9}, {3.856027675832548*^9, 3.856027699822071*^9}, {
   3.85602773916111*^9, 3.856027814487542*^9}, {3.8560281294278407`*^9, 
   3.85602832597587*^9}, {3.856028537695312*^9, 3.856028625373228*^9}, {
   3.856028676259614*^9, 3.856028678111314*^9}, {3.856028735870923*^9, 
   3.856028748319977*^9}, {3.856028782147477*^9, 3.8560288053592815`*^9}, {
   3.8560288753758383`*^9, 3.856028898836164*^9}, {3.8560291157310233`*^9, 
   3.8560291622023273`*^9}, {3.85602945814218*^9, 3.8560295425207057`*^9}, {
   3.8560296189009476`*^9, 3.8560296444881473`*^9}, 3.856029700783904*^9, {
   3.856029782035016*^9, 3.856029788184816*^9}, {3.856031313894505*^9, 
   3.856031331634429*^9}, {3.8560313638048477`*^9, 3.8560314455908213`*^9}, {
   3.856031492188833*^9, 3.8560314951089306`*^9}, {3.856031609320323*^9, 
   3.8560316164097366`*^9}, {3.856031707106037*^9, 3.856031715428689*^9}, {
   3.8560317471823015`*^9, 3.856031778481027*^9}, {3.8560318209554625`*^9, 
   3.8560318255890355`*^9}, 3.8560318715635357`*^9, 3.856031938373992*^9, {
   3.85603197008319*^9, 3.8560319999336824`*^9}, 3.8560320412235165`*^9, {
   3.85603210146208*^9, 3.856032134747423*^9}, {3.8560321845645647`*^9, 
   3.856032218378115*^9}, {3.8560343789245515`*^9, 3.8560344322328377`*^9}, {
   3.856034528500451*^9, 3.856034725325334*^9}, {3.8560349766869564`*^9, 
   3.856034992343079*^9}, {3.856035140402996*^9, 3.8560351416206207`*^9}, {
   3.856035182354653*^9, 3.8560352642953787`*^9}, {3.8560353610822864`*^9, 
   3.8560354071350374`*^9}, {3.8560355161280136`*^9, 
   3.8560355355204215`*^9}, {3.856035654886733*^9, 3.856035679900303*^9}, {
   3.856035834644143*^9, 3.8560358406840444`*^9}, {3.856035909504721*^9, 
   3.8560359097815914`*^9}, {3.856035981347487*^9, 3.8560360191263905`*^9}, {
   3.856036085723483*^9, 3.8560361827762136`*^9}, {3.8560362344360147`*^9, 
   3.8560362948234777`*^9}, {3.8560363487015953`*^9, 
   3.8560364546646833`*^9}, {3.856036568092003*^9, 3.856036602231162*^9}, 
   3.8560366529040937`*^9, {3.856036707467122*^9, 3.8560367140629673`*^9}, {
   3.856037256605177*^9, 3.856037291678767*^9}, {3.8560374928395443`*^9, 
   3.856037493043103*^9}, {3.856037527515498*^9, 3.8560375417380652`*^9}, {
   3.856037608736037*^9, 3.856037614705649*^9}, {3.8560376455920963`*^9, 
   3.856037736792851*^9}, {3.856037770491493*^9, 3.8560377793046055`*^9}, {
   3.8560378100628185`*^9, 3.856037818658125*^9}, {3.856037849820157*^9, 
   3.8560379414399757`*^9}, {3.856037997476342*^9, 3.8560380974531574`*^9}, {
   3.8560381408612456`*^9, 3.8560382114545374`*^9}, {3.856038252896674*^9, 
   3.856038253368276*^9}, {3.8560382839652414`*^9, 3.8560383733809485`*^9}, 
   3.8560385323715005`*^9, {3.8560386625002937`*^9, 3.8560387043270483`*^9}, {
   3.856038760995139*^9, 3.8560387789299097`*^9}, {3.8560388259202623`*^9, 
   3.856038903888253*^9}, {3.8560389346182327`*^9, 3.8560389653250594`*^9}, {
   3.8560390793804893`*^9, 3.856039195501319*^9}, {3.856039228924515*^9, 
   3.8560393290193467`*^9}, {3.856039447925002*^9, 3.856039455500797*^9}, {
   3.8560395332824426`*^9, 3.856039535452024*^9}, {3.8560397678423924`*^9, 
   3.8560397755624123`*^9}, {3.856039856529461*^9, 3.8560398810119095`*^9}, {
   3.8560399457763553`*^9, 3.856039973001889*^9}, {3.8560400264976797`*^9, 
   3.856040030066023*^9}, {3.8560400656252103`*^9, 3.856040065859236*^9}, {
   3.856040103396497*^9, 3.856040134221999*^9}, {3.856040170428861*^9, 
   3.856040177094947*^9}, {3.8560403155960183`*^9, 3.856040618414832*^9}, {
   3.8560406530173435`*^9, 3.856040666254797*^9}, {3.856040697051177*^9, 
   3.8560407017731524`*^9}, {3.8560407372909966`*^9, 3.856040786513367*^9}, {
   3.8560408227794533`*^9, 3.8560408374075284`*^9}, {3.8560408689980035`*^9, 
   3.856040869132812*^9}, {3.85604091790959*^9, 3.8560409283233337`*^9}, {
   3.856040984716408*^9, 3.8560409861163626`*^9}, {3.8560410179907193`*^9, 
   3.8560410554430685`*^9}, {3.856041094345886*^9, 3.856041140440683*^9}, {
   3.8560411740955324`*^9, 3.856041274901851*^9}, {3.856041476694766*^9, 
   3.8560414887028227`*^9}, {3.856041525499338*^9, 3.8560415289546037`*^9}, {
   3.8560415701192827`*^9, 3.8560416050723443`*^9}, 3.8560416366742263`*^9, {
   3.856041687890852*^9, 3.8560416983812275`*^9}, {3.8560417293928685`*^9, 
   3.8560417586461687`*^9}, {3.8560417901109953`*^9, 
   3.8560419777566485`*^9}, {3.856042093993224*^9, 3.856042119545595*^9}, {
   3.8560421579846473`*^9, 3.856042265697872*^9}, {3.8560425658223763`*^9, 
   3.8560425892828717`*^9}, {3.856042826897992*^9, 3.8560428419824085`*^9}, {
   3.8560431564968653`*^9, 3.856043202431524*^9}, {3.85604324134394*^9, 
   3.856043244095127*^9}, 3.856043295828144*^9, {3.8560433486830688`*^9, 
   3.8560433715786324`*^9}, 3.8560434017216816`*^9, {3.8560438000878687`*^9, 
   3.8560438010291014`*^9}, {3.856043853303875*^9, 3.856043895667914*^9}, 
   3.856044665024163*^9, {3.856076566434619*^9, 3.8560765692736187`*^9}, {
   3.8560766301427813`*^9, 3.856076630696355*^9}, {3.856076703896269*^9, 
   3.856076711976742*^9}, {3.856076760199266*^9, 3.856076914830224*^9}, {
   3.856076960473687*^9, 3.8560770461332965`*^9}, {3.8560770862642226`*^9, 
   3.856077239329383*^9}, 3.8560773174882803`*^9, {3.8560773899748526`*^9, 
   3.8560774421651025`*^9}, {3.85607748336766*^9, 3.8560774905553036`*^9}, {
   3.856077542401929*^9, 3.856077661943771*^9}, {3.8560781148035145`*^9, 
   3.8560781409925904`*^9}, {3.856078195941326*^9, 3.856078230166175*^9}, {
   3.8560782756781373`*^9, 3.8560783545792274`*^9}, {3.8560976708929963`*^9, 
   3.85609778418999*^9}, {3.856097817473792*^9, 3.856097820069295*^9}, {
   3.85609788066792*^9, 3.8560978827979355`*^9}, {3.8560979219207087`*^9, 
   3.856097955659108*^9}, {3.8560979962723207`*^9, 3.856098040171834*^9}, 
   3.85609807259328*^9, {3.85609813997946*^9, 3.8560982032979655`*^9}, 
   3.8560985396181483`*^9, {3.8560986163740644`*^9, 3.856098646131298*^9}, {
   3.856098679152917*^9, 3.8560986797687874`*^9}, {3.85609894178399*^9, 
   3.856098965535231*^9}, {3.856099024529527*^9, 3.856099065175611*^9}, {
   3.8560990994653006`*^9, 3.856099104118834*^9}, {3.856102548214246*^9, 
   3.8561025536357946`*^9}, {3.8561026215763083`*^9, 3.8561026371420603`*^9}, 
   3.8561026740550847`*^9, {3.8561054854127855`*^9, 3.8561055023222384`*^9}, {
   3.856105803498821*^9, 3.856105921961475*^9}, {3.856105958059228*^9, 
   3.8561060365249577`*^9}, {3.8561061257528896`*^9, 3.856106324062416*^9}, {
   3.8561063604518175`*^9, 3.8561063909362593`*^9}, {3.856106444227889*^9, 
   3.856106444778817*^9}, {3.8561067423380513`*^9, 3.8561067461196938`*^9}, {
   3.85610685935316*^9, 3.8561070295049734`*^9}, {3.856107060686552*^9, 
   3.856107061249378*^9}, {3.856107136952758*^9, 3.8561071935942965`*^9}, {
   3.856107237146597*^9, 3.856107238127699*^9}, {3.8561074475340433`*^9, 
   3.8561074796031055`*^9}, {3.8561075375388155`*^9, 3.856107594568447*^9}, {
   3.8561076304179783`*^9, 3.856107693416644*^9}, 3.856107751272869*^9, {
   3.8561078275539207`*^9, 3.856107837790324*^9}, {3.8561079051301694`*^9, 
   3.856108026875865*^9}, {3.8561081246032314`*^9, 3.8561081283892775`*^9}, {
   3.8561082429191656`*^9, 3.8561082434281535`*^9}, {3.8561084345034266`*^9, 
   3.8561084357201977`*^9}, {3.85610846882596*^9, 3.8561085032232304`*^9}, {
   3.8561085367533145`*^9, 3.8561085373394146`*^9}, {3.8561086109009314`*^9, 
   3.856108611480094*^9}, {3.8561087075034695`*^9, 3.856108708851205*^9}, {
   3.856108804397293*^9, 3.8561088092901945`*^9}, {3.8561088459527063`*^9, 
   3.856108861597948*^9}, {3.8561093974667225`*^9, 3.8561094587483625`*^9}, {
   3.8561095102087903`*^9, 3.856109516103527*^9}, {3.8562475809927497`*^9, 
   3.856247583319747*^9}, {3.8562737886056585`*^9, 3.8562737890004888`*^9}, {
   3.8562738492401276`*^9, 3.856273888611801*^9}, {3.856273922568969*^9, 
   3.8562741424914083`*^9}, {3.856274226816697*^9, 3.856274229792968*^9}, {
   3.8562743072721405`*^9, 3.8562743194658794`*^9}, {3.8562743521769304`*^9, 
   3.856274613752519*^9}, {3.856274859001932*^9, 3.8562748676972218`*^9}, {
   3.8562749110059137`*^9, 3.8562751241913786`*^9}, {3.8562751591720266`*^9, 
   3.856275227826645*^9}, {3.856275264399729*^9, 3.8562753899264326`*^9}, {
   3.856275495930557*^9, 3.856275496517125*^9}, {3.8562756153229294`*^9, 
   3.856275634705659*^9}, {3.856275666067842*^9, 3.8562756775602484`*^9}, {
   3.856275722131226*^9, 3.8562757265689445`*^9}, {3.85627575755275*^9, 
   3.856275758962401*^9}, {3.8562758993060484`*^9, 3.856276127012329*^9}, {
   3.8562762148242955`*^9, 3.856276438503148*^9}, {3.8562765155318146`*^9, 
   3.856276533308592*^9}, {3.8562767506087146`*^9, 3.856276809914201*^9}, {
   3.856277287266241*^9, 3.8562773754236193`*^9}, {3.856277414780894*^9, 
   3.856277418574065*^9}, 3.8562775131760225`*^9, {3.8562775645081015`*^9, 
   3.856277590232807*^9}, {3.856277672451417*^9, 3.856277730495928*^9}, {
   3.856277766271282*^9, 3.856277780576347*^9}, {3.8562778694413257`*^9, 
   3.856277873507604*^9}, {3.8562779237212467`*^9, 3.8562779298961754`*^9}, 
   3.856278176803012*^9, {3.856278719076212*^9, 3.856278743157564*^9}, {
   3.856278856771084*^9, 3.856278857405304*^9}, {3.8562790010473676`*^9, 
   3.856279115501252*^9}, {3.856279795612445*^9, 3.85627985345732*^9}, {
   3.8562799059320183`*^9, 3.8562799551199627`*^9}, {3.8562799948373833`*^9, 
   3.8562800900068836`*^9}, {3.856280172856544*^9, 3.856280207677231*^9}, {
   3.8562802450477066`*^9, 3.856280358630164*^9}, 3.8562804146474743`*^9, {
   3.8562804553145804`*^9, 3.8562804596232443`*^9}, {3.8562804910717516`*^9, 
   3.856280702909562*^9}, {3.8562807491205683`*^9, 3.85628081249778*^9}, 
   3.856280897358183*^9, 3.856280943311322*^9, {3.856280975752886*^9, 
   3.8562809789130993`*^9}, {3.856281029911313*^9, 3.856281036844019*^9}, {
   3.8562810934963303`*^9, 3.856281116236787*^9}, {3.8562811895709734`*^9, 
   3.8562811934929724`*^9}, 3.8562812883631554`*^9, {3.8562814415264163`*^9, 
   3.8562814420907335`*^9}, {3.8562815135209284`*^9, 3.856281514052975*^9}, {
   3.856281675810191*^9, 3.8562816768455114`*^9}, {3.856281807633171*^9, 
   3.8562818078436675`*^9}, {3.8562818464907*^9, 3.856281913948683*^9}, {
   3.8565289997063704`*^9, 3.8565290075090857`*^9}, {3.8565290761924896`*^9, 
   3.856529084747546*^9}, {3.8565292973510604`*^9, 3.8565293307727804`*^9}, {
   3.856529524520999*^9, 3.8565295415322094`*^9}, {3.85652960505908*^9, 
   3.8565296064256964`*^9}, {3.8565296827739353`*^9, 
   3.8565297120075917`*^9}, {3.856529903225164*^9, 3.8565299068869348`*^9}, {
   3.856532407403243*^9, 3.856532498746724*^9}, {3.856550245095764*^9, 
   3.8565502471655426`*^9}, {3.8566912293528485`*^9, 3.856691235769058*^9}, {
   3.8567245425626464`*^9, 3.8567245511691484`*^9}, {3.8567732739124074`*^9, 
   3.8567733206743917`*^9}, {3.8697642199384212`*^9, 3.869764220188667*^9}, {
   3.869764885959271*^9, 3.869764889540139*^9}, {3.8697657989355726`*^9, 
   3.8697658093748927`*^9}, {3.8697666199047823`*^9, 3.869766655800068*^9}, 
   3.869766692803034*^9, {3.870254529097003*^9, 3.8702545293462625`*^9}, {
   3.8702549967748003`*^9, 3.8702549969538484`*^9}, {3.870256361050639*^9, 
   3.870256361413994*^9}, {3.8703382842512255`*^9, 3.870338298464528*^9}, {
   3.8703383388420534`*^9, 3.8703383876242485`*^9}, {3.8703384416791053`*^9, 
   3.870338493348386*^9}, {3.870338538154093*^9, 3.870338677562423*^9}, {
   3.8703395767941923`*^9, 3.870339577270629*^9}, {3.870340092080018*^9, 
   3.8703400926080885`*^9}, {3.8703401419631677`*^9, 3.870340156311364*^9}, {
   3.870340314873691*^9, 3.8703403656361237`*^9}, {3.870340422591461*^9, 
   3.870340454400365*^9}, {3.8703404926324368`*^9, 3.870340512454545*^9}, {
   3.870340583587798*^9, 3.87034059735128*^9}, {3.8703414182855387`*^9, 
   3.870341432848039*^9}, {3.870341513918401*^9, 3.8703416151543245`*^9}, {
   3.870341786160385*^9, 3.8703418849798455`*^9}, {3.870341959883676*^9, 
   3.8703419680868864`*^9}, {3.870342041836316*^9, 3.870342048125518*^9}, {
   3.8703422139006286`*^9, 3.8703422494943094`*^9}, {3.87034262916004*^9, 
   3.870342662745471*^9}, {3.8703431188400264`*^9, 3.8703431305344906`*^9}, {
   3.8703433555356607`*^9, 3.87034344103158*^9}, {3.8703436827393217`*^9, 
   3.8703437057917643`*^9}, {3.870344066381273*^9, 3.870344066522297*^9}, {
   3.870525615647974*^9, 3.8705256163495617`*^9}, {3.870526991007702*^9, 
   3.8705270130166306`*^9}, {3.8706154916346097`*^9, 
   3.8706154961608152`*^9}, {3.870616419535432*^9, 3.8706164199155226`*^9}, 
   3.870622843133999*^9, {3.870623183855291*^9, 3.870623224831984*^9}, {
   3.8706233192584376`*^9, 3.8706234242931085`*^9}, {3.8706234834162436`*^9, 
   3.870623491225482*^9}, {3.8706244079982076`*^9, 3.8706244158887005`*^9}, {
   3.8706258009996667`*^9, 3.870625827033012*^9}, {3.870686663534668*^9, 
   3.8706866803967323`*^9}, {3.8706876874612055`*^9, 3.870687687961903*^9}, {
   3.870688130820361*^9, 3.8706881313676863`*^9}, {3.870688314260572*^9, 
   3.870688315319701*^9}, {3.870688652901184*^9, 3.870688653043297*^9}, {
   3.8706899243004627`*^9, 3.8706899436247005`*^9}, {3.8706900448081317`*^9, 
   3.870690090752267*^9}, {3.87069016173599*^9, 3.8706902267674713`*^9}, {
   3.8706903247403507`*^9, 3.870690329177286*^9}, {3.870690376274083*^9, 
   3.87069039463669*^9}, {3.870690629946537*^9, 3.87069064736471*^9}, {
   3.8706906927732906`*^9, 3.870690720139867*^9}, {3.8706909476132374`*^9, 
   3.8706909608884573`*^9}, {3.8706912908027735`*^9, 3.870691351617464*^9}, {
   3.870691389548391*^9, 3.870691403167451*^9}, {3.8706915104681287`*^9, 
   3.8706915988702235`*^9}, {3.8706916867262535`*^9, 3.870691696434349*^9}, {
   3.8706919574915056`*^9, 3.870691981269575*^9}, {3.8706921679949837`*^9, 
   3.870692168186102*^9}, {3.870692750341878*^9, 3.8706927557576895`*^9}, {
   3.870693225692669*^9, 3.870693226022213*^9}, {3.8706936307720594`*^9, 
   3.8706936311274548`*^9}, {3.870695326841172*^9, 3.870695327261882*^9}, {
   3.870695596057418*^9, 3.8706955964073815`*^9}, {3.870696323010607*^9, 
   3.8706963235673313`*^9}, {3.870699196719535*^9, 3.870699197016618*^9}, {
   3.8706997717434697`*^9, 3.87069977198238*^9}, {3.8707639142140684`*^9, 
   3.870763914663484*^9}, {3.870764345960526*^9, 3.870764346347926*^9}, {
   3.870772186464443*^9, 3.8707721868062773`*^9}, {3.870772400240675*^9, 
   3.870772400698034*^9}, {3.87077292493847*^9, 3.8707729254955907`*^9}, {
   3.8707761870143185`*^9, 3.8707761871984406`*^9}, {3.8707778877296085`*^9, 
   3.8707778880331635`*^9}, {3.8707790034120345`*^9, 3.870779003818453*^9}, {
   3.8707812531616144`*^9, 3.870781253336539*^9}, {3.8707814588399773`*^9, 
   3.870781459053787*^9}, {3.870782116282759*^9, 3.8707821166689625`*^9}, {
   3.870783185630129*^9, 3.870783186042803*^9}, {3.870783434690692*^9, 
   3.870783435132308*^9}, {3.8707839732623806`*^9, 3.8707839736204605`*^9}, {
   3.870866343336934*^9, 3.8708663438104553`*^9}, {3.870867557001255*^9, 
   3.8708675573097467`*^9}, 3.8708708583595448`*^9, 3.870878807018343*^9, {
   3.870878847261443*^9, 3.870878853780528*^9}, {3.8708794316626787`*^9, 
   3.870879435926674*^9}, {3.870879515791352*^9, 3.8708795558344264`*^9}, {
   3.870879599639597*^9, 3.870879602091279*^9}, {3.870879632721717*^9, 
   3.8708796938895016`*^9}, {3.8708804467492757`*^9, 
   3.8708804474567947`*^9}, {3.870881056827588*^9, 3.8708810862280207`*^9}, {
   3.870937010159091*^9, 3.870937037540131*^9}, {3.8709371049474726`*^9, 
   3.870937114397751*^9}, {3.8709373688994427`*^9, 3.870937371757448*^9}, {
   3.8709375357508726`*^9, 3.870937553970931*^9}, {3.870937590313766*^9, 
   3.8709376045444784`*^9}, 3.870937695398123*^9, {3.8709377348378363`*^9, 
   3.8709377976088877`*^9}, 3.870940686537721*^9, {3.8709407206438007`*^9, 
   3.8709407489536695`*^9}, 3.87094096801995*^9, {3.8709410320392556`*^9, 
   3.8709410538411007`*^9}, {3.8709411046542225`*^9, 
   3.8709411388375344`*^9}, {3.8709416236799064`*^9, 3.870941642130024*^9}, 
   3.870941687792176*^9, {3.8709420200452967`*^9, 3.8709420278409653`*^9}, 
   3.870942089119421*^9, {3.8709423286259546`*^9, 3.870942386451895*^9}, {
   3.8709425515141015`*^9, 3.8709425551659117`*^9}, {3.8709428466100693`*^9, 
   3.87094284759559*^9}, {3.8709432640587893`*^9, 3.8709432647832775`*^9}, {
   3.870944095193144*^9, 3.8709440956753225`*^9}, {3.87094819332437*^9, 
   3.8709484173684435`*^9}, {3.870948473803781*^9, 3.870948545254259*^9}, {
   3.870948589480519*^9, 3.870948589933922*^9}, {3.870948623789947*^9, 
   3.870948658575102*^9}, {3.8709490557532988`*^9, 3.8709490563573074`*^9}, {
   3.8709491823138084`*^9, 3.8709492003369036`*^9}, {3.870949259910282*^9, 
   3.8709492862378664`*^9}, {3.87095291846498*^9, 3.8709529249499435`*^9}, 
   3.8709530219415016`*^9, {3.8709564393168497`*^9, 3.8709564541150417`*^9}, {
   3.870956536851446*^9, 3.8709565382713947`*^9}, {3.8709627874156876`*^9, 
   3.870962793736958*^9}, {3.870966903156596*^9, 3.870966920416003*^9}, {
   3.870966992131434*^9, 3.8709670036605873`*^9}, {3.870967963394926*^9, 
   3.8709679645199385`*^9}, {3.8710235644444876`*^9, 
   3.8710235652653284`*^9}, {3.8710238582322044`*^9, 
   3.8710239158724604`*^9}, {3.871024449923065*^9, 3.87102446241537*^9}, 
   3.871025454441139*^9, {3.8710288563774176`*^9, 3.871028900038675*^9}, {
   3.8711179591656632`*^9, 3.871117961683807*^9}, {3.8711179953796663`*^9, 
   3.871118029132465*^9}, {3.8711180825856476`*^9, 3.8711180892522635`*^9}, {
   3.8711181813131647`*^9, 3.8711182159567485`*^9}, {3.8711182632525253`*^9, 
   3.871118334844533*^9}, {3.8711184084588437`*^9, 3.8711184394406667`*^9}, {
   3.8711184841908026`*^9, 3.8711185383275414`*^9}, {3.871121655639067*^9, 
   3.8711217849299583`*^9}, {3.8711218197297792`*^9, 3.871121879667089*^9}, {
   3.87112200198755*^9, 3.8711221627418194`*^9}, 3.8711243782222695`*^9, {
   3.8711244098704896`*^9, 3.87112445712117*^9}, 3.8711245548119307`*^9, {
   3.8711259363299313`*^9, 3.8711259622562294`*^9}, {3.871371209231949*^9, 
   3.871371234049937*^9}, {3.8713737174431205`*^9, 3.871373724119588*^9}, {
   3.8729228994663224`*^9, 3.872923041683997*^9}, {3.8729231090398054`*^9, 
   3.8729231127045913`*^9}, {3.8729262005742016`*^9, 
   3.8729262134694605`*^9}, {3.87292624440825*^9, 3.872926348726226*^9}, {
   3.872926781031951*^9, 3.8729267907415524`*^9}, {3.8737911336012344`*^9, 
   3.8737911396358314`*^9}, {3.8737914009179883`*^9, 3.873791470729456*^9}, {
   3.8737915703008976`*^9, 3.873791581049255*^9}, {3.8737918582848845`*^9, 
   3.8737922026484194`*^9}, {3.8737922415580444`*^9, 
   3.8737922421777387`*^9}, {3.873792608531313*^9, 3.8737926167149143`*^9}, {
   3.873794639666293*^9, 3.873794745032353*^9}, {3.87379519232943*^9, 
   3.873795217095971*^9}, {3.873795280097139*^9, 3.873795284565523*^9}, 
   3.8737958971592617`*^9, {3.87379594670138*^9, 3.873795950856474*^9}, 
   3.873797119871455*^9, {3.8737982593742943`*^9, 3.873798261100769*^9}, {
   3.873798477215317*^9, 3.8737985433162107`*^9}, 3.8737987354737673`*^9, {
   3.873799133758959*^9, 3.873799180938953*^9}, {3.873800282207884*^9, 
   3.873800298838253*^9}, {3.873800329064756*^9, 3.873800384937614*^9}, {
   3.873800415856455*^9, 3.8738004352700367`*^9}, {3.873800490274889*^9, 
   3.873800619136601*^9}, {3.873800697461774*^9, 3.8738007951604233`*^9}, {
   3.873800827728471*^9, 3.8738008532182093`*^9}, {3.8738009180111322`*^9, 
   3.87380093157469*^9}, {3.873801161503636*^9, 3.873801162579771*^9}, {
   3.876588535905281*^9, 3.8765885516988883`*^9}, {3.8765886005796285`*^9, 
   3.8765886120512333`*^9}, {3.876590855673044*^9, 3.8765908707407084`*^9}, {
   3.8765909969676447`*^9, 3.8765910122054944`*^9}, 3.876592779119972*^9, {
   3.876592837404833*^9, 3.876592841945377*^9}, {3.8765929078589244`*^9, 
   3.876593021980545*^9}, {3.8765930555481205`*^9, 3.8765930591288905`*^9}, {
   3.8765934251776314`*^9, 3.876593425912753*^9}, {3.876596668312005*^9, 
   3.8765966688285956`*^9}, {3.8765967014076767`*^9, 
   3.8765967379979763`*^9}, {3.876599213427829*^9, 3.876599222478979*^9}, {
   3.8768409754603643`*^9, 3.87684098238835*^9}, {3.8773225555524874`*^9, 
   3.877322607876339*^9}, {3.877322713316276*^9, 3.8773228627510843`*^9}, {
   3.8773229019429665`*^9, 3.877322903318138*^9}, {3.877322950969366*^9, 
   3.8773229527988234`*^9}, {3.877323096012311*^9, 3.8773231131720953`*^9}, {
   3.8773232362332892`*^9, 3.8773232410010924`*^9}, {3.8773233684968605`*^9, 
   3.877323371014454*^9}, 3.877323646811383*^9, {3.8773236775871277`*^9, 
   3.8773236836888666`*^9}, {3.877323812790163*^9, 3.877323813029902*^9}, 
   3.878540563480486*^9},
 NumberMarks->False,
 FontSize->14,
 CellLabel->"In[75]:=",ExpressionUUID->"0d30743d-14ee-4695-80b8-af268c115cbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KetList", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.878540567280043*^9, 3.8785405751243052`*^9}, {
  3.8786574599023247`*^9, 3.878657461549981*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"35051b51-b2e5-478a-8d90-8b7c16016bcc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878540575940612*^9, 3.878540601423431*^9}, {
   3.878657465172723*^9, 3.878657476475599*^9}, 3.8786575085464115`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"89161ad3-67d3-4765-abf6-284e516b7a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Toff", "=", 
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"0", ",", "1", ",", "2"}]], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "0"}], "}"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", 
  RowBox[{"{", "Toff", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"CCZ", "=", 
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"0", ",", "1", ",", "2"}]], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CCZCirc", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["X", "1"], ",", 
    SubscriptBox["X", "2"], ",", 
    SubscriptBox["H", "0"], ",", 
    SubscriptBox["X", "0"], ",", "Toff", ",", 
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["H", "0"], ",", 
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["X", "1"], ",", 
    SubscriptBox["X", "2"]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ToffCirc", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["X", "1"], ",", 
    SubscriptBox["X", "2"], ",", 
    SubscriptBox["H", "0"], ",", 
    SubscriptBox["X", "0"], ",", "CCZ", ",", 
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["H", "0"], ",", 
    SubscriptBox["X", "0"], ",", 
    SubscriptBox["X", "1"], ",", 
    SubscriptBox["X", "2"]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CCZClifCirc", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["H", "0"], ",", "Toff", ",", 
     SubscriptBox["H", "0"]}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"X", ",", "1"}], "]"}], ",", 
     RowBox[{"Subscript", "[", 
      RowBox[{"X", ",", "2"}], "]"}], ",", 
     SubscriptBox["X", "0"], ",", "CCZ", ",", 
     SubscriptBox["X", "0"], ",", 
     RowBox[{"Subscript", "[", 
      RowBox[{"X", ",", "1"}], "]"}], ",", 
     RowBox[{"Subscript", "[", 
      RowBox[{"X", ",", "2"}], "]"}]}], "}"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "ToffCirc", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", 
   RowBox[{"{", "Toff", "}"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", "ToffCirc", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "CCZCirc", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", 
   RowBox[{"{", "CCZ", "}"}], "]"}], " ", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", "CCZCirc", "]"}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalcCircuitMatrix", "[", "CCZClifCirc", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8783209374846554`*^9, 3.87832109975189*^9}, {
   3.8783211896210384`*^9, 3.8783212855337253`*^9}, {3.8783213548903685`*^9, 
   3.878321355120882*^9}, {3.8783213957933345`*^9, 3.8783213972863073`*^9}, {
   3.878321484257476*^9, 3.878321531617816*^9}, {3.8783215827474985`*^9, 
   3.8783216562707596`*^9}, {3.8783217407462687`*^9, 
   3.8783218219764376`*^9}, {3.878322948263234*^9, 3.878323002637178*^9}, {
   3.878490391894583*^9, 3.8784903943777275`*^9}, {3.8784904359092226`*^9, 
   3.878490502650337*^9}, {3.8784905638743343`*^9, 3.878490610381716*^9}, 
   3.8786626197939377`*^9, {3.8787659563257723`*^9, 3.878765960073551*^9}, {
   3.878766002193553*^9, 3.878766013805497*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"ad1449fc-449b-4390-8285-0f21de5f392d"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["U", 
   RowBox[{"0", ",", "1", ",", "2"}]], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "0"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.878766015874734*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"fff63fcd-e05a-4bea-aa07-b7b571f454f9"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
    LineBox[{{0, 2.5}, {1, 2.5}}]}, {RectangleBox[{0.1, 0.1}, {0.9, 2.9}], 
    InsetBox["\<\"U\"\>", {0.5, 1.5}]}},
  ImageSize->60,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660158879137`*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"4cd62502-42e4-42f5-bb8d-9d94c17a3439"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["U", 
   RowBox[{"0", ",", "1", ",", "2"}]], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
      ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.878766015901285*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"67bd2077-6da6-4f51-9a5c-472a09364a66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["X", "1"], ",", 
   SubscriptBox["X", "2"], ",", 
   SubscriptBox["H", "0"], ",", 
   SubscriptBox["X", "0"], ",", 
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"0", ",", "1", ",", "2"}]], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
        "0"}], "}"}]}], "}"}], "]"}], ",", 
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["H", "0"], ",", 
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["X", "1"], ",", 
   SubscriptBox["X", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159122496`*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"f273ee4a-7f5a-4221-90f5-e382782db13f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["X", "1"], ",", 
   SubscriptBox["X", "2"], ",", 
   SubscriptBox["H", "0"], ",", 
   SubscriptBox["X", "0"], ",", 
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"0", ",", "1", ",", "2"}]], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
        ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["H", "0"], ",", 
   SubscriptBox["X", "0"], ",", 
   SubscriptBox["X", "1"], ",", 
   SubscriptBox["X", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.878766015921219*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"1afa7554-1ad3-4530-9e89-d4970cadf198"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["H", "0"], ",", 
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"0", ",", "1", ",", "2"}]], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
        "0"}], "}"}]}], "}"}], "]"}], ",", 
   SubscriptBox["H", "0"]}], "}"}]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159323936`*^9},
 CellLabel->
  "Out[414]=",ExpressionUUID->"2372ca68-6c28-4e62-8887-f043dd4136ba"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}]}}, {{CircleBox[{0.5, 0.5}, 0.25], 
     LineBox[{{0.5, 0.25}, {0.5, 0.75}}]}, {CircleBox[{0.5, 1.5}, 0.25], 
     LineBox[{{0.5, 1.25}, {0.5, 1.75}}]}, {CircleBox[{0.5, 2.5}, 0.25], 
     LineBox[{{0.5, 2.25}, {0.5, 2.75}}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"H\"\>", {1.5, 0.5}]}, {CircleBox[{2.5, 0.5}, 0.25], 
     LineBox[{{2.5, 0.25}, {2.5, 0.75}}]}, {
     RectangleBox[{3.1, 0.1}, {3.9, 2.9}], 
     InsetBox["\<\"U\"\>", {3.5, 1.5}]}, {CircleBox[{4.5, 0.5}, 0.25], 
     LineBox[{{4.5, 0.25}, {4.5, 0.75}}]}, {CircleBox[{4.5, 1.5}, 0.25], 
     LineBox[{{4.5, 1.25}, {4.5, 1.75}}]}, {CircleBox[{4.5, 2.5}, 0.25], 
     LineBox[{{4.5, 2.25}, {4.5, 2.75}}]}, {
     RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
     InsetBox["\<\"H\"\>", {5.5, 0.5}]}, {CircleBox[{6.5, 0.5}, 0.25], 
     LineBox[{{6.5, 0.25}, {6.5, 0.75}}]}}},
  ImageSize->240,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159413586`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"ac7f17b9-dd4a-4e72-b4f7-ba21b4eea5ca"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.878766015952321*^9},
 CellLabel->
  "Out[416]//MatrixForm=",ExpressionUUID->"ca4da408-58e2-411e-b16b-\
025433f71fc0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159633913`*^9},
 CellLabel->
  "Out[417]//MatrixForm=",ExpressionUUID->"46e028ab-73ed-4f5c-8e2a-\
1b540b2526f0"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}]}}, {{CircleBox[{0.5, 0.5}, 0.25], 
     LineBox[{{0.5, 0.25}, {0.5, 0.75}}]}, {CircleBox[{0.5, 1.5}, 0.25], 
     LineBox[{{0.5, 1.25}, {0.5, 1.75}}]}, {CircleBox[{0.5, 2.5}, 0.25], 
     LineBox[{{0.5, 2.25}, {0.5, 2.75}}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"H\"\>", {1.5, 0.5}]}, {CircleBox[{2.5, 0.5}, 0.25], 
     LineBox[{{2.5, 0.25}, {2.5, 0.75}}]}, {
     RectangleBox[{3.1, 0.1}, {3.9, 2.9}], 
     InsetBox["\<\"U\"\>", {3.5, 1.5}]}, {CircleBox[{4.5, 0.5}, 0.25], 
     LineBox[{{4.5, 0.25}, {4.5, 0.75}}]}, {CircleBox[{4.5, 1.5}, 0.25], 
     LineBox[{{4.5, 1.25}, {4.5, 1.75}}]}, {CircleBox[{4.5, 2.5}, 0.25], 
     LineBox[{{4.5, 2.25}, {4.5, 2.75}}]}, {
     RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
     InsetBox["\<\"H\"\>", {5.5, 0.5}]}, {CircleBox[{6.5, 0.5}, 0.25], 
     LineBox[{{6.5, 0.25}, {6.5, 0.75}}]}}},
  ImageSize->240,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159734836`*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"e979d043-cd9d-4848-a8c1-3f8c178615c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.878766015988594*^9},
 CellLabel->
  "Out[419]//MatrixForm=",ExpressionUUID->"e38be4e9-1030-4e3c-bd1b-\
df2bd22efd38"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660159975653`*^9},
 CellLabel->
  "Out[420]//MatrixForm=",ExpressionUUID->"b9e324b1-565b-401c-b4f1-\
a9fad2623579"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8787659609445095`*^9, 3.8787660160055385`*^9},
 CellLabel->
  "Out[421]//MatrixForm=",ExpressionUUID->"02638927-aff4-49da-b481-\
bb8ee1f36e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
      "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
      "0"}], "}"}]}], "}"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8783213214499516`*^9, 3.878321323501624*^9}, {
  3.8783213864055386`*^9, 3.878321386619749*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"ceee181f-e69a-44dd-bd68-a5ea1ead1261"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8783213239655943`*^9, 3.8783213873225365`*^9, 
  3.8783215740737147`*^9},
 CellLabel->
  "Out[60]//MatrixForm=",ExpressionUUID->"b35ffb0a-3566-4e69-99f3-\
c58fb32003ef"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitCirc", "[", "NQ_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    SubscriptBox["Init", "b"], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", 
      RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroverIteration3Q", "[", "SearchSeed_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"XIndices", "=", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"Reverse", "[", "SearchSeed", "]"}], ",", "1"}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Xs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"XTrans", "[", 
         RowBox[{
          RowBox[{"XIndices", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], "-", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "XIndices", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"Xs", ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "2"}]], ",", "Xs", ",", 
        RowBox[{"HTrans", "[", "0", "]"}], ",", 
        RowBox[{"HTrans", "[", "1", "]"}], ",", 
        RowBox[{"HTrans", "[", "2", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "2"}]], ",", 
        RowBox[{"HTrans", "[", "0", "]"}], ",", 
        RowBox[{"HTrans", "[", "1", "]"}], ",", 
        RowBox[{"HTrans", "[", "2", "]"}]}], "}"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"DrawCircuit", "[", 
    RowBox[{"GroverIteration3Q", "[", 
     RowBox[{
      RowBox[{"KetList", "[", "3", "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KetList", "[", "3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroversAlg3Q", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SearchSeeds", "=", 
       RowBox[{"KetList", "[", "3", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"CreateDensityQureg", "[", "3", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"InitZeroState", "[", "\[Rho]", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"InitialisationCirc", "=", 
       RowBox[{"ExtractCircuit", "[", 
        RowBox[{"GetCircuitSchedule", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"InitCirc", "[", "3", "]"}], ",", 
            RowBox[{"HTrans", "[", "0", "]"}], ",", 
            RowBox[{"HTrans", "[", "1", "]"}], ",", 
            RowBox[{"HTrans", "[", "2", "]"}]}], "]"}], ",", "RydDev", ",", 
          RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{"\[Rho]", ",", "InitialisationCirc"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Gr", "=", 
       RowBox[{"ExtractCircuit", "[", 
        RowBox[{"GetCircuitSchedule", "[", 
         RowBox[{
          RowBox[{"GroverIteration3Q", "[", 
           RowBox[{"SearchSeeds", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "RydDev", ",", 
          RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Gr", ",", "Gr"}], "]"}]}], "]"}], ";", 
      RowBox[{"CalcProbOfAllOutcomes", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8784867491621513`*^9, 3.878486778421402*^9}, {
   3.878487237476755*^9, 3.878487273738432*^9}, {3.8784874958578377`*^9, 
   3.878487522631648*^9}, {3.878540776419177*^9, 3.8785408128856897`*^9}, {
   3.878540880850532*^9, 3.8785410959447126`*^9}, {3.8785412213238864`*^9, 
   3.878541225618232*^9}, {3.8785412632198873`*^9, 3.878541265444349*^9}, {
   3.8786578008679824`*^9, 3.8786579259138875`*^9}, {3.878658108272809*^9, 
   3.878658118486436*^9}, {3.878658672534642*^9, 3.878658696450555*^9}, 
   3.878658735295431*^9, {3.87865883618451*^9, 3.8786588419410343`*^9}, {
   3.878658936957449*^9, 3.8786589636734877`*^9}, {3.878659000349505*^9, 
   3.87865905991876*^9}, {3.878659193414361*^9, 3.878659263642619*^9}, {
   3.8786594926406984`*^9, 3.8786596131572328`*^9}, {3.878660173383725*^9, 
   3.8786602967306995`*^9}, {3.87866061135655*^9, 3.8786606448771152`*^9}, {
   3.878660881050871*^9, 3.8786609631860695`*^9}, {3.8786610303401957`*^9, 
   3.8786610322488985`*^9}, {3.878661063448104*^9, 3.8786610845336275`*^9}, {
   3.878661241791995*^9, 3.8786612977789297`*^9}, {3.8786615259476233`*^9, 
   3.878661600133518*^9}, {3.8786616303987865`*^9, 3.878661664035948*^9}, {
   3.878661714243407*^9, 3.878661771330512*^9}, {3.8786618768625765`*^9, 
   3.8786618967047443`*^9}, {3.8786619551124535`*^9, 
   3.8786619861842623`*^9}, {3.87866204081015*^9, 3.8786621416242323`*^9}, {
   3.878662647694777*^9, 3.878662657762985*^9}, {3.878662926619793*^9, 
   3.8786629979487267`*^9}, {3.878663178936228*^9, 3.8786631808792424`*^9}, {
   3.87866328473847*^9, 3.878663297360691*^9}, {3.8786633369460287`*^9, 
   3.878663340612359*^9}, {3.8786636289806924`*^9, 3.878663653854459*^9}, {
   3.8786645136625814`*^9, 3.8786645883528085`*^9}, {3.8786646191474085`*^9, 
   3.8786646256049147`*^9}, {3.878664658119158*^9, 3.878664687981881*^9}, {
   3.87866576854239*^9, 3.8786658078906255`*^9}, {3.8786658649021845`*^9, 
   3.8786658651155005`*^9}, {3.8786659939987144`*^9, 3.87866602253354*^9}, {
   3.8786660556198072`*^9, 3.8786661107684946`*^9}, {3.8786661594047413`*^9, 
   3.878666193951582*^9}, 3.87866636017666*^9, {3.878667720736118*^9, 
   3.878667738341588*^9}, {3.8786677932689705`*^9, 3.8786678067937126`*^9}, {
   3.8786680411512375`*^9, 3.8786680448229723`*^9}, {3.8786680912947702`*^9, 
   3.8786680918878536`*^9}, {3.8786682749851527`*^9, 
   3.8786682751602917`*^9}, {3.878676386797077*^9, 3.8786763871799192`*^9}, {
   3.878676434844825*^9, 3.878676446589263*^9}, {3.87867650581961*^9, 
   3.878676509626191*^9}, {3.8786765891314015`*^9, 3.878676621628475*^9}, {
   3.878676676146059*^9, 3.8786768087747903`*^9}, {3.8786771353469124`*^9, 
   3.8786771609997535`*^9}, {3.8786787098719873`*^9, 3.878678870465783*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"2f7f4364-700f-436f-afc3-6acf4e15e78b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XTrans", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["Rx", "i"], "[", "Pi", "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HTrans", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "i"], "[", 
      RowBox[{"Pi", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "i"], "[", "Pi", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToffSandBread", "[", 
   RowBox[{"t_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Ry", "t"], "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "t"], "[", 
     RowBox[{"-", "Pi"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "c1"], "[", "Pi", "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "c2"], "[", "Pi", "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.8785416618417387`*^9, 3.8785416820565968`*^9}, {
  3.8785417260276318`*^9, 3.8785418092918587`*^9}, {3.878541879544157*^9, 
  3.8785419083318977`*^9}, {3.8785760117085123`*^9, 3.8785760705212164`*^9}, {
  3.8786628841367974`*^9, 3.8786629175334063`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"3d6dccd8-ffae-4258-bf42-4488acfe0b5a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878540770923664*^9, 
  3.8785407715344267`*^9}},ExpressionUUID->"69a013b9-8ed0-449b-99fb-\
3d05bfdc57d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Toff", "[", 
   RowBox[{"t_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"t", ",", "c1", ",", "c2"}]], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "0"}], "}"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CCZGate", "[", 
   RowBox[{"t_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   SubscriptBox["U", 
    RowBox[{"t", ",", "c1", ",", "c2"}]], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.878717772462925*^9, 3.8787178685037494`*^9}, {
  3.878736031035204*^9, 3.8787360630915256`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"9ab30105-6659-4395-9236-1055473f3c0c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878736039102144*^9, 
  3.878736040369215*^9}},ExpressionUUID->"407aec86-a308-44e2-8124-\
1b60fe60dd7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToffRyd", "[", 
   RowBox[{"t_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["X", "t"], ",", 
     SubscriptBox["X", "c1"], ",", 
     SubscriptBox["X", "c2"], ",", 
     SubscriptBox["H", "t"], ",", 
     SubscriptBox["X", "t"], ",", 
     RowBox[{"CCZGate", "[", 
      RowBox[{"t", ",", "c1", ",", "c2"}], "]"}], ",", 
     SubscriptBox["X", "t"], ",", 
     SubscriptBox["H", "t"], ",", 
     SubscriptBox["X", "t"], ",", 
     SubscriptBox["X", "c1"], ",", 
     SubscriptBox["X", "c2"]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8787346810491295`*^9, 3.8787346961781797`*^9}, 
   3.878735590373595*^9, {3.8787359241731935`*^9, 3.8787359779889336`*^9}, {
   3.878736080471175*^9, 3.87873608197425*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"6f6eb437-22a1-48bc-b9c3-4f4a85589a45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"C4ZMat", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             SuperscriptBox["2", "5"], "-", "1"}]}], "}"}]}], "]"}]}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"C4XMat", "=", 
     RowBox[{"CalcCircuitMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"], ",", 
        SubscriptBox["X", "3"], ",", 
        SubscriptBox["X", "4"], ",", 
        SubscriptBox["X", "0"], ",", 
        SubscriptBox["H", "0"], ",", 
        SubscriptBox["X", "0"], ",", 
        RowBox[{
         SubscriptBox["U", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}]], "[", 
         "C4ZMat", "]"}], ",", 
        SubscriptBox["X", "0"], ",", 
        SubscriptBox["H", "0"], ",", 
        SubscriptBox["X", "0"], ",", 
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"], ",", 
        SubscriptBox["X", "3"], ",", 
        SubscriptBox["X", "4"]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"C4XCirc", "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"], ",", 
       SubscriptBox["X", "3"], ",", 
       SubscriptBox["X", "4"], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["H", "0"], ",", 
       SubscriptBox["X", "0"], ",", 
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}]], "[", 
        "C4ZMat", "]"}], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["H", "0"], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"], ",", 
       SubscriptBox["X", "3"], ",", 
       SubscriptBox["X", "4"]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"C4ZCirc", "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"], ",", 
       SubscriptBox["X", "3"], ",", 
       SubscriptBox["X", "4"], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["H", "0"], ",", 
       SubscriptBox["X", "0"], ",", 
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}]], "[", 
        "C4XMat", "]"}], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["H", "0"], ",", 
       SubscriptBox["X", "0"], ",", 
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"], ",", 
       SubscriptBox["X", "3"], ",", 
       SubscriptBox["X", "4"]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"C4XCircToff", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Toff", "[", 
        RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
       RowBox[{"Toff", "[", 
        RowBox[{"6", ",", "7", ",", "2"}], "]"}]}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"C4XCircCCZ", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToffRyd", "[", 
         RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DrawCircuit", "[", "C4XCircCCZ", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "C5ZMat", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8787175355423183`*^9, 3.878717601301085*^9}, {
   3.8787176435875583`*^9, 3.8787177315646505`*^9}, {3.8787178041248026`*^9, 
   3.8787178450274005`*^9}, {3.878717938334093*^9, 3.8787180502123165`*^9}, {
   3.87871827517774*^9, 3.87871837492931*^9}, {3.878718423137068*^9, 
   3.8787184565997725`*^9}, {3.8787185240538473`*^9, 3.878718551624941*^9}, {
   3.8787224227219296`*^9, 3.878722423350113*^9}, {3.8787345216801414`*^9, 
   3.8787345357119246`*^9}, {3.8787347483771296`*^9, 
   3.8787348079697185`*^9}, {3.878734852313716*^9, 3.878734967627264*^9}, {
   3.8787360954089766`*^9, 3.8787361981743774`*^9}, 3.8788031833949695`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"98e3321d-f2d2-419c-b83b-01164360b3db"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}], LineBox[{{0, 3.5}, {1, 3.5}}], 
     LineBox[{{0, 4.5}, {1, 4.5}}], LineBox[{{0, 5.5}, {1, 5.5}}], 
     LineBox[{{0, 6.5}, {1, 6.5}}], LineBox[{{0, 7.5}, {1, 7.5}}], 
     LineBox[{{0, 8.5}, {1, 8.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
     LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}], 
     LineBox[{{1, 3.5}, {2, 3.5}}], LineBox[{{1, 4.5}, {2, 4.5}}], 
     LineBox[{{1, 5.5}, {2, 5.5}}], LineBox[{{1, 6.5}, {2, 6.5}}], 
     LineBox[{{1, 7.5}, {2, 7.5}}], LineBox[{{1, 8.5}, {2, 8.5}}]}, {
     LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
     LineBox[{{2, 2.5}, {3, 2.5}}], LineBox[{{2, 3.5}, {3, 3.5}}], 
     LineBox[{{2, 4.5}, {3, 4.5}}], LineBox[{{2, 5.5}, {3, 5.5}}], 
     LineBox[{{2, 6.5}, {3, 6.5}}], LineBox[{{2, 7.5}, {3, 7.5}}], 
     LineBox[{{2, 8.5}, {3, 8.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
     LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}], 
     LineBox[{{3, 3.5}, {4, 3.5}}], LineBox[{{3, 4.5}, {4, 4.5}}], 
     LineBox[{{3, 5.5}, {4, 5.5}}], LineBox[{{3, 6.5}, {4, 6.5}}], 
     LineBox[{{3, 7.5}, {4, 7.5}}], LineBox[{{3, 8.5}, {4, 8.5}}]}, {
     LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
     LineBox[{{4, 2.5}, {5, 2.5}}], LineBox[{{4, 3.5}, {5, 3.5}}], 
     LineBox[{{4, 4.5}, {5, 4.5}}], LineBox[{{4, 5.5}, {5, 5.5}}], 
     LineBox[{{4, 6.5}, {5, 6.5}}], LineBox[{{4, 7.5}, {5, 7.5}}], 
     LineBox[{{4, 8.5}, {5, 8.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
     LineBox[{{5, 1.5}, {6, 1.5}}], LineBox[{{5, 2.5}, {6, 2.5}}], 
     LineBox[{{5, 3.5}, {6, 3.5}}], LineBox[{{5, 4.5}, {6, 4.5}}], 
     LineBox[{{5, 5.5}, {6, 5.5}}], LineBox[{{5, 6.5}, {6, 6.5}}], 
     LineBox[{{5, 7.5}, {6, 7.5}}], LineBox[{{5, 8.5}, {6, 8.5}}]}, {
     LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{6, 1.5}, {7, 1.5}}], 
     LineBox[{{6, 2.5}, {7, 2.5}}], LineBox[{{6, 3.5}, {7, 3.5}}], 
     LineBox[{{6, 4.5}, {7, 4.5}}], LineBox[{{6, 5.5}, {7, 5.5}}], 
     LineBox[{{6, 6.5}, {7, 6.5}}], LineBox[{{6, 7.5}, {7, 7.5}}], 
     LineBox[{{6, 8.5}, {7, 8.5}}]}, {LineBox[{{7, 0.5}, {8, 0.5}}], 
     LineBox[{{7, 1.5}, {8, 1.5}}], LineBox[{{7, 2.5}, {8, 2.5}}], 
     LineBox[{{7, 3.5}, {8, 3.5}}], LineBox[{{7, 4.5}, {8, 4.5}}], 
     LineBox[{{7, 5.5}, {8, 5.5}}], LineBox[{{7, 6.5}, {8, 6.5}}], 
     LineBox[{{7, 7.5}, {8, 7.5}}], LineBox[{{7, 8.5}, {8, 8.5}}]}, {
     LineBox[{{8, 0.5}, {9, 0.5}}], LineBox[{{8, 1.5}, {9, 1.5}}], 
     LineBox[{{8, 2.5}, {9, 2.5}}], LineBox[{{8, 3.5}, {9, 3.5}}], 
     LineBox[{{8, 4.5}, {9, 4.5}}], LineBox[{{8, 5.5}, {9, 5.5}}], 
     LineBox[{{8, 6.5}, {9, 6.5}}], LineBox[{{8, 7.5}, {9, 7.5}}], 
     LineBox[{{8, 8.5}, {9, 8.5}}]}, {LineBox[{{9, 0.5}, {10, 0.5}}], 
     LineBox[{{9, 1.5}, {10, 1.5}}], LineBox[{{9, 2.5}, {10, 2.5}}], 
     LineBox[{{9, 3.5}, {10, 3.5}}], LineBox[{{9, 4.5}, {10, 4.5}}], 
     LineBox[{{9, 5.5}, {10, 5.5}}], LineBox[{{9, 6.5}, {10, 6.5}}], 
     LineBox[{{9, 7.5}, {10, 7.5}}], LineBox[{{9, 8.5}, {10, 8.5}}]}, {
     LineBox[{{10, 0.5}, {11, 0.5}}], LineBox[{{10, 1.5}, {11, 1.5}}], 
     LineBox[{{10, 2.5}, {11, 2.5}}], LineBox[{{10, 3.5}, {11, 3.5}}], 
     LineBox[{{10, 4.5}, {11, 4.5}}], LineBox[{{10, 5.5}, {11, 5.5}}], 
     LineBox[{{10, 6.5}, {11, 6.5}}], LineBox[{{10, 7.5}, {11, 7.5}}], 
     LineBox[{{10, 8.5}, {11, 8.5}}]}, {LineBox[{{11, 0.5}, {12, 0.5}}], 
     LineBox[{{11, 1.5}, {12, 1.5}}], LineBox[{{11, 2.5}, {12, 2.5}}], 
     LineBox[{{11, 3.5}, {12, 3.5}}], LineBox[{{11, 4.5}, {12, 4.5}}], 
     LineBox[{{11, 5.5}, {12, 5.5}}], LineBox[{{11, 6.5}, {12, 6.5}}], 
     LineBox[{{11, 7.5}, {12, 7.5}}], LineBox[{{11, 8.5}, {12, 8.5}}]}, {
     LineBox[{{12, 0.5}, {13, 0.5}}], LineBox[{{12, 1.5}, {13, 1.5}}], 
     LineBox[{{12, 2.5}, {13, 2.5}}], LineBox[{{12, 3.5}, {13, 3.5}}], 
     LineBox[{{12, 4.5}, {13, 4.5}}], LineBox[{{12, 5.5}, {13, 5.5}}], 
     LineBox[{{12, 6.5}, {13, 6.5}}], LineBox[{{12, 7.5}, {13, 7.5}}], 
     LineBox[{{12, 8.5}, {13, 8.5}}]}, {LineBox[{{13, 0.5}, {14, 0.5}}], 
     LineBox[{{13, 1.5}, {14, 1.5}}], LineBox[{{13, 2.5}, {14, 2.5}}], 
     LineBox[{{13, 3.5}, {14, 3.5}}], LineBox[{{13, 4.5}, {14, 4.5}}], 
     LineBox[{{13, 5.5}, {14, 5.5}}], LineBox[{{13, 6.5}, {14, 6.5}}], 
     LineBox[{{13, 7.5}, {14, 7.5}}], LineBox[{{13, 8.5}, {14, 8.5}}]}, {
     LineBox[{{14, 0.5}, {15, 0.5}}], LineBox[{{14, 1.5}, {15, 1.5}}], 
     LineBox[{{14, 2.5}, {15, 2.5}}], LineBox[{{14, 3.5}, {15, 3.5}}], 
     LineBox[{{14, 4.5}, {15, 4.5}}], LineBox[{{14, 5.5}, {15, 5.5}}], 
     LineBox[{{14, 6.5}, {15, 6.5}}], LineBox[{{14, 7.5}, {15, 7.5}}], 
     LineBox[{{14, 8.5}, {15, 8.5}}]}, {LineBox[{{15, 0.5}, {16, 0.5}}], 
     LineBox[{{15, 1.5}, {16, 1.5}}], LineBox[{{15, 2.5}, {16, 2.5}}], 
     LineBox[{{15, 3.5}, {16, 3.5}}], LineBox[{{15, 4.5}, {16, 4.5}}], 
     LineBox[{{15, 5.5}, {16, 5.5}}], LineBox[{{15, 6.5}, {16, 6.5}}], 
     LineBox[{{15, 7.5}, {16, 7.5}}], LineBox[{{15, 8.5}, {16, 8.5}}]}, {
     LineBox[{{16, 0.5}, {17, 0.5}}], LineBox[{{16, 1.5}, {17, 1.5}}], 
     LineBox[{{16, 2.5}, {17, 2.5}}], LineBox[{{16, 3.5}, {17, 3.5}}], 
     LineBox[{{16, 4.5}, {17, 4.5}}], LineBox[{{16, 5.5}, {17, 5.5}}], 
     LineBox[{{16, 6.5}, {17, 6.5}}], LineBox[{{16, 7.5}, {17, 7.5}}], 
     LineBox[{{16, 8.5}, {17, 8.5}}]}, {LineBox[{{17, 0.5}, {18, 0.5}}], 
     LineBox[{{17, 1.5}, {18, 1.5}}], LineBox[{{17, 2.5}, {18, 2.5}}], 
     LineBox[{{17, 3.5}, {18, 3.5}}], LineBox[{{17, 4.5}, {18, 4.5}}], 
     LineBox[{{17, 5.5}, {18, 5.5}}], LineBox[{{17, 6.5}, {18, 6.5}}], 
     LineBox[{{17, 7.5}, {18, 7.5}}], LineBox[{{17, 8.5}, {18, 8.5}}]}, {
     LineBox[{{18, 0.5}, {19, 0.5}}], LineBox[{{18, 1.5}, {19, 1.5}}], 
     LineBox[{{18, 2.5}, {19, 2.5}}], LineBox[{{18, 3.5}, {19, 3.5}}], 
     LineBox[{{18, 4.5}, {19, 4.5}}], LineBox[{{18, 5.5}, {19, 5.5}}], 
     LineBox[{{18, 6.5}, {19, 6.5}}], LineBox[{{18, 7.5}, {19, 7.5}}], 
     LineBox[{{18, 8.5}, {19, 8.5}}]}, {LineBox[{{19, 0.5}, {20, 0.5}}], 
     LineBox[{{19, 1.5}, {20, 1.5}}], LineBox[{{19, 2.5}, {20, 2.5}}], 
     LineBox[{{19, 3.5}, {20, 3.5}}], LineBox[{{19, 4.5}, {20, 4.5}}], 
     LineBox[{{19, 5.5}, {20, 5.5}}], LineBox[{{19, 6.5}, {20, 6.5}}], 
     LineBox[{{19, 7.5}, {20, 7.5}}], LineBox[{{19, 8.5}, {20, 8.5}}]}, {
     LineBox[{{20, 0.5}, {21, 0.5}}], LineBox[{{20, 1.5}, {21, 1.5}}], 
     LineBox[{{20, 2.5}, {21, 2.5}}], LineBox[{{20, 3.5}, {21, 3.5}}], 
     LineBox[{{20, 4.5}, {21, 4.5}}], LineBox[{{20, 5.5}, {21, 5.5}}], 
     LineBox[{{20, 6.5}, {21, 6.5}}], LineBox[{{20, 7.5}, {21, 7.5}}], 
     LineBox[{{20, 8.5}, {21, 8.5}}]}, {LineBox[{{21, 0.5}, {22, 0.5}}], 
     LineBox[{{21, 1.5}, {22, 1.5}}], LineBox[{{21, 2.5}, {22, 2.5}}], 
     LineBox[{{21, 3.5}, {22, 3.5}}], LineBox[{{21, 4.5}, {22, 4.5}}], 
     LineBox[{{21, 5.5}, {22, 5.5}}], LineBox[{{21, 6.5}, {22, 6.5}}], 
     LineBox[{{21, 7.5}, {22, 7.5}}], LineBox[{{21, 8.5}, {22, 8.5}}]}, {
     LineBox[{{22, 0.5}, {23, 0.5}}], LineBox[{{22, 1.5}, {23, 1.5}}], 
     LineBox[{{22, 2.5}, {23, 2.5}}], LineBox[{{22, 3.5}, {23, 3.5}}], 
     LineBox[{{22, 4.5}, {23, 4.5}}], LineBox[{{22, 5.5}, {23, 5.5}}], 
     LineBox[{{22, 6.5}, {23, 6.5}}], LineBox[{{22, 7.5}, {23, 7.5}}], 
     LineBox[{{22, 8.5}, {23, 8.5}}]}, {LineBox[{{23, 0.5}, {24, 0.5}}], 
     LineBox[{{23, 1.5}, {24, 1.5}}], LineBox[{{23, 2.5}, {24, 2.5}}], 
     LineBox[{{23, 3.5}, {24, 3.5}}], LineBox[{{23, 4.5}, {24, 4.5}}], 
     LineBox[{{23, 5.5}, {24, 5.5}}], LineBox[{{23, 6.5}, {24, 6.5}}], 
     LineBox[{{23, 7.5}, {24, 7.5}}], LineBox[{{23, 8.5}, {24, 8.5}}]}, {
     LineBox[{{24, 0.5}, {25, 0.5}}], LineBox[{{24, 1.5}, {25, 1.5}}], 
     LineBox[{{24, 2.5}, {25, 2.5}}], LineBox[{{24, 3.5}, {25, 3.5}}], 
     LineBox[{{24, 4.5}, {25, 4.5}}], LineBox[{{24, 5.5}, {25, 5.5}}], 
     LineBox[{{24, 6.5}, {25, 6.5}}], LineBox[{{24, 7.5}, {25, 7.5}}], 
     LineBox[{{24, 8.5}, {25, 8.5}}]}, {LineBox[{{25, 0.5}, {26, 0.5}}], 
     LineBox[{{25, 1.5}, {26, 1.5}}], LineBox[{{25, 2.5}, {26, 2.5}}], 
     LineBox[{{25, 3.5}, {26, 3.5}}], LineBox[{{25, 4.5}, {26, 4.5}}], 
     LineBox[{{25, 5.5}, {26, 5.5}}], LineBox[{{25, 6.5}, {26, 6.5}}], 
     LineBox[{{25, 7.5}, {26, 7.5}}], LineBox[{{25, 8.5}, {26, 8.5}}]}, {
     LineBox[{{26, 0.5}, {27, 0.5}}], LineBox[{{26, 1.5}, {27, 1.5}}], 
     LineBox[{{26, 2.5}, {27, 2.5}}], LineBox[{{26, 3.5}, {27, 3.5}}], 
     LineBox[{{26, 4.5}, {27, 4.5}}], LineBox[{{26, 5.5}, {27, 5.5}}], 
     LineBox[{{26, 6.5}, {27, 6.5}}], LineBox[{{26, 7.5}, {27, 7.5}}], 
     LineBox[{{26, 8.5}, {27, 8.5}}]}, {LineBox[{{27, 0.5}, {28, 0.5}}], 
     LineBox[{{27, 1.5}, {28, 1.5}}], LineBox[{{27, 2.5}, {28, 2.5}}], 
     LineBox[{{27, 3.5}, {28, 3.5}}], LineBox[{{27, 4.5}, {28, 4.5}}], 
     LineBox[{{27, 5.5}, {28, 5.5}}], LineBox[{{27, 6.5}, {28, 6.5}}], 
     LineBox[{{27, 7.5}, {28, 7.5}}], LineBox[{{27, 8.5}, {28, 8.5}}]}, {
     LineBox[{{28, 0.5}, {29, 0.5}}], LineBox[{{28, 1.5}, {29, 1.5}}], 
     LineBox[{{28, 2.5}, {29, 2.5}}], LineBox[{{28, 3.5}, {29, 3.5}}], 
     LineBox[{{28, 4.5}, {29, 4.5}}], LineBox[{{28, 5.5}, {29, 5.5}}], 
     LineBox[{{28, 6.5}, {29, 6.5}}], LineBox[{{28, 7.5}, {29, 7.5}}], 
     LineBox[{{28, 8.5}, {29, 8.5}}]}, {LineBox[{{29, 0.5}, {30, 0.5}}], 
     LineBox[{{29, 1.5}, {30, 1.5}}], LineBox[{{29, 2.5}, {30, 2.5}}], 
     LineBox[{{29, 3.5}, {30, 3.5}}], LineBox[{{29, 4.5}, {30, 4.5}}], 
     LineBox[{{29, 5.5}, {30, 5.5}}], LineBox[{{29, 6.5}, {30, 6.5}}], 
     LineBox[{{29, 7.5}, {30, 7.5}}], LineBox[{{29, 8.5}, {30, 8.5}}]}, {
     LineBox[{{30, 0.5}, {31, 0.5}}], LineBox[{{30, 1.5}, {31, 1.5}}], 
     LineBox[{{30, 2.5}, {31, 2.5}}], LineBox[{{30, 3.5}, {31, 3.5}}], 
     LineBox[{{30, 4.5}, {31, 4.5}}], LineBox[{{30, 5.5}, {31, 5.5}}], 
     LineBox[{{30, 6.5}, {31, 6.5}}], LineBox[{{30, 7.5}, {31, 7.5}}], 
     LineBox[{{30, 8.5}, {31, 8.5}}]}, {LineBox[{{31, 0.5}, {32, 0.5}}], 
     LineBox[{{31, 1.5}, {32, 1.5}}], LineBox[{{31, 2.5}, {32, 2.5}}], 
     LineBox[{{31, 3.5}, {32, 3.5}}], LineBox[{{31, 4.5}, {32, 4.5}}], 
     LineBox[{{31, 5.5}, {32, 5.5}}], LineBox[{{31, 6.5}, {32, 6.5}}], 
     LineBox[{{31, 7.5}, {32, 7.5}}], LineBox[{{31, 8.5}, {32, 8.5}}]}, {
     LineBox[{{32, 0.5}, {33, 0.5}}], LineBox[{{32, 1.5}, {33, 1.5}}], 
     LineBox[{{32, 2.5}, {33, 2.5}}], LineBox[{{32, 3.5}, {33, 3.5}}], 
     LineBox[{{32, 4.5}, {33, 4.5}}], LineBox[{{32, 5.5}, {33, 5.5}}], 
     LineBox[{{32, 6.5}, {33, 6.5}}], LineBox[{{32, 7.5}, {33, 7.5}}], 
     LineBox[{{32, 8.5}, {33, 8.5}}]}, {LineBox[{{33, 0.5}, {34, 0.5}}], 
     LineBox[{{33, 1.5}, {34, 1.5}}], LineBox[{{33, 2.5}, {34, 2.5}}], 
     LineBox[{{33, 3.5}, {34, 3.5}}], LineBox[{{33, 4.5}, {34, 4.5}}], 
     LineBox[{{33, 5.5}, {34, 5.5}}], LineBox[{{33, 6.5}, {34, 6.5}}], 
     LineBox[{{33, 7.5}, {34, 7.5}}], LineBox[{{33, 8.5}, {34, 8.5}}]}, {
     LineBox[{{34, 0.5}, {35, 0.5}}], LineBox[{{34, 1.5}, {35, 1.5}}], 
     LineBox[{{34, 2.5}, {35, 2.5}}], LineBox[{{34, 3.5}, {35, 3.5}}], 
     LineBox[{{34, 4.5}, {35, 4.5}}], LineBox[{{34, 5.5}, {35, 5.5}}], 
     LineBox[{{34, 6.5}, {35, 6.5}}], LineBox[{{34, 7.5}, {35, 7.5}}], 
     LineBox[{{34, 8.5}, {35, 8.5}}]}, {LineBox[{{35, 0.5}, {36, 0.5}}], 
     LineBox[{{35, 1.5}, {36, 1.5}}], LineBox[{{35, 2.5}, {36, 2.5}}], 
     LineBox[{{35, 3.5}, {36, 3.5}}], LineBox[{{35, 4.5}, {36, 4.5}}], 
     LineBox[{{35, 5.5}, {36, 5.5}}], LineBox[{{35, 6.5}, {36, 6.5}}], 
     LineBox[{{35, 7.5}, {36, 7.5}}], LineBox[{{35, 8.5}, {36, 8.5}}]}, {
     LineBox[{{36, 0.5}, {37, 0.5}}], LineBox[{{36, 1.5}, {37, 1.5}}], 
     LineBox[{{36, 2.5}, {37, 2.5}}], LineBox[{{36, 3.5}, {37, 3.5}}], 
     LineBox[{{36, 4.5}, {37, 4.5}}], LineBox[{{36, 5.5}, {37, 5.5}}], 
     LineBox[{{36, 6.5}, {37, 6.5}}], LineBox[{{36, 7.5}, {37, 7.5}}], 
     LineBox[{{36, 8.5}, {37, 8.5}}]}, {LineBox[{{37, 0.5}, {38, 0.5}}], 
     LineBox[{{37, 1.5}, {38, 1.5}}], LineBox[{{37, 2.5}, {38, 2.5}}], 
     LineBox[{{37, 3.5}, {38, 3.5}}], LineBox[{{37, 4.5}, {38, 4.5}}], 
     LineBox[{{37, 5.5}, {38, 5.5}}], LineBox[{{37, 6.5}, {38, 6.5}}], 
     LineBox[{{37, 7.5}, {38, 7.5}}], LineBox[{{37, 8.5}, {38, 8.5}}]}, {
     LineBox[{{38, 0.5}, {39, 0.5}}], LineBox[{{38, 1.5}, {39, 1.5}}], 
     LineBox[{{38, 2.5}, {39, 2.5}}], LineBox[{{38, 3.5}, {39, 3.5}}], 
     LineBox[{{38, 4.5}, {39, 4.5}}], LineBox[{{38, 5.5}, {39, 5.5}}], 
     LineBox[{{38, 6.5}, {39, 6.5}}], LineBox[{{38, 7.5}, {39, 7.5}}], 
     LineBox[{{38, 8.5}, {39, 8.5}}]}, {LineBox[{{39, 0.5}, {40, 0.5}}], 
     LineBox[{{39, 1.5}, {40, 1.5}}], LineBox[{{39, 2.5}, {40, 2.5}}], 
     LineBox[{{39, 3.5}, {40, 3.5}}], LineBox[{{39, 4.5}, {40, 4.5}}], 
     LineBox[{{39, 5.5}, {40, 5.5}}], LineBox[{{39, 6.5}, {40, 6.5}}], 
     LineBox[{{39, 7.5}, {40, 7.5}}], LineBox[{{39, 8.5}, {40, 8.5}}]}, {
     LineBox[{{40, 0.5}, {41, 0.5}}], LineBox[{{40, 1.5}, {41, 1.5}}], 
     LineBox[{{40, 2.5}, {41, 2.5}}], LineBox[{{40, 3.5}, {41, 3.5}}], 
     LineBox[{{40, 4.5}, {41, 4.5}}], LineBox[{{40, 5.5}, {41, 5.5}}], 
     LineBox[{{40, 6.5}, {41, 6.5}}], LineBox[{{40, 7.5}, {41, 7.5}}], 
     LineBox[{{40, 8.5}, {41, 8.5}}]}, {LineBox[{{41, 0.5}, {42, 0.5}}], 
     LineBox[{{41, 1.5}, {42, 1.5}}], LineBox[{{41, 2.5}, {42, 2.5}}], 
     LineBox[{{41, 3.5}, {42, 3.5}}], LineBox[{{41, 4.5}, {42, 4.5}}], 
     LineBox[{{41, 5.5}, {42, 5.5}}], LineBox[{{41, 6.5}, {42, 6.5}}], 
     LineBox[{{41, 7.5}, {42, 7.5}}], LineBox[{{41, 8.5}, {42, 8.5}}]}, {
     LineBox[{{42, 0.5}, {43, 0.5}}], LineBox[{{42, 1.5}, {43, 1.5}}], 
     LineBox[{{42, 2.5}, {43, 2.5}}], LineBox[{{42, 3.5}, {43, 3.5}}], 
     LineBox[{{42, 4.5}, {43, 4.5}}], LineBox[{{42, 5.5}, {43, 5.5}}], 
     LineBox[{{42, 6.5}, {43, 6.5}}], LineBox[{{42, 7.5}, {43, 7.5}}], 
     LineBox[{{42, 8.5}, {43, 8.5}}]}, {LineBox[{{43, 0.5}, {44, 0.5}}], 
     LineBox[{{43, 1.5}, {44, 1.5}}], LineBox[{{43, 2.5}, {44, 2.5}}], 
     LineBox[{{43, 3.5}, {44, 3.5}}], LineBox[{{43, 4.5}, {44, 4.5}}], 
     LineBox[{{43, 5.5}, {44, 5.5}}], LineBox[{{43, 6.5}, {44, 6.5}}], 
     LineBox[{{43, 7.5}, {44, 7.5}}], LineBox[{{43, 8.5}, {44, 8.5}}]}, {
     LineBox[{{44, 0.5}, {45, 0.5}}], LineBox[{{44, 1.5}, {45, 1.5}}], 
     LineBox[{{44, 2.5}, {45, 2.5}}], LineBox[{{44, 3.5}, {45, 3.5}}], 
     LineBox[{{44, 4.5}, {45, 4.5}}], LineBox[{{44, 5.5}, {45, 5.5}}], 
     LineBox[{{44, 6.5}, {45, 6.5}}], LineBox[{{44, 7.5}, {45, 7.5}}], 
     LineBox[{{44, 8.5}, {45, 8.5}}]}, {LineBox[{{45, 0.5}, {46, 0.5}}], 
     LineBox[{{45, 1.5}, {46, 1.5}}], LineBox[{{45, 2.5}, {46, 2.5}}], 
     LineBox[{{45, 3.5}, {46, 3.5}}], LineBox[{{45, 4.5}, {46, 4.5}}], 
     LineBox[{{45, 5.5}, {46, 5.5}}], LineBox[{{45, 6.5}, {46, 6.5}}], 
     LineBox[{{45, 7.5}, {46, 7.5}}], LineBox[{{45, 8.5}, {46, 8.5}}]}, {
     LineBox[{{46, 0.5}, {47, 0.5}}], LineBox[{{46, 1.5}, {47, 1.5}}], 
     LineBox[{{46, 2.5}, {47, 2.5}}], LineBox[{{46, 3.5}, {47, 3.5}}], 
     LineBox[{{46, 4.5}, {47, 4.5}}], LineBox[{{46, 5.5}, {47, 5.5}}], 
     LineBox[{{46, 6.5}, {47, 6.5}}], LineBox[{{46, 7.5}, {47, 7.5}}], 
     LineBox[{{46, 8.5}, {47, 8.5}}]}, {LineBox[{{47, 0.5}, {48, 0.5}}], 
     LineBox[{{47, 1.5}, {48, 1.5}}], LineBox[{{47, 2.5}, {48, 2.5}}], 
     LineBox[{{47, 3.5}, {48, 3.5}}], LineBox[{{47, 4.5}, {48, 4.5}}], 
     LineBox[{{47, 5.5}, {48, 5.5}}], LineBox[{{47, 6.5}, {48, 6.5}}], 
     LineBox[{{47, 7.5}, {48, 7.5}}], LineBox[{{47, 8.5}, {48, 8.5}}]}, {
     LineBox[{{48, 0.5}, {49, 0.5}}], LineBox[{{48, 1.5}, {49, 1.5}}], 
     LineBox[{{48, 2.5}, {49, 2.5}}], LineBox[{{48, 3.5}, {49, 3.5}}], 
     LineBox[{{48, 4.5}, {49, 4.5}}], LineBox[{{48, 5.5}, {49, 5.5}}], 
     LineBox[{{48, 6.5}, {49, 6.5}}], LineBox[{{48, 7.5}, {49, 7.5}}], 
     LineBox[{{48, 8.5}, {49, 8.5}}]}, {LineBox[{{49, 0.5}, {50, 0.5}}], 
     LineBox[{{49, 1.5}, {50, 1.5}}], LineBox[{{49, 2.5}, {50, 2.5}}], 
     LineBox[{{49, 3.5}, {50, 3.5}}], LineBox[{{49, 4.5}, {50, 4.5}}], 
     LineBox[{{49, 5.5}, {50, 5.5}}], LineBox[{{49, 6.5}, {50, 6.5}}], 
     LineBox[{{49, 7.5}, {50, 7.5}}], LineBox[{{49, 8.5}, {50, 8.5}}]}, {
     LineBox[{{50, 0.5}, {51, 0.5}}], LineBox[{{50, 1.5}, {51, 1.5}}], 
     LineBox[{{50, 2.5}, {51, 2.5}}], LineBox[{{50, 3.5}, {51, 3.5}}], 
     LineBox[{{50, 4.5}, {51, 4.5}}], LineBox[{{50, 5.5}, {51, 5.5}}], 
     LineBox[{{50, 6.5}, {51, 6.5}}], LineBox[{{50, 7.5}, {51, 7.5}}], 
     LineBox[{{50, 8.5}, {51, 8.5}}]}, {LineBox[{{51, 0.5}, {52, 0.5}}], 
     LineBox[{{51, 1.5}, {52, 1.5}}], LineBox[{{51, 2.5}, {52, 2.5}}], 
     LineBox[{{51, 3.5}, {52, 3.5}}], LineBox[{{51, 4.5}, {52, 4.5}}], 
     LineBox[{{51, 5.5}, {52, 5.5}}], LineBox[{{51, 6.5}, {52, 6.5}}], 
     LineBox[{{51, 7.5}, {52, 7.5}}], LineBox[{{51, 8.5}, {52, 8.5}}]}, {
     LineBox[{{52, 0.5}, {53, 0.5}}], LineBox[{{52, 1.5}, {53, 1.5}}], 
     LineBox[{{52, 2.5}, {53, 2.5}}], LineBox[{{52, 3.5}, {53, 3.5}}], 
     LineBox[{{52, 4.5}, {53, 4.5}}], LineBox[{{52, 5.5}, {53, 5.5}}], 
     LineBox[{{52, 6.5}, {53, 6.5}}], LineBox[{{52, 7.5}, {53, 7.5}}], 
     LineBox[{{52, 8.5}, {53, 8.5}}]}, {LineBox[{{53, 0.5}, {54, 0.5}}], 
     LineBox[{{53, 1.5}, {54, 1.5}}], LineBox[{{53, 2.5}, {54, 2.5}}], 
     LineBox[{{53, 3.5}, {54, 3.5}}], LineBox[{{53, 4.5}, {54, 4.5}}], 
     LineBox[{{53, 5.5}, {54, 5.5}}], LineBox[{{53, 6.5}, {54, 6.5}}], 
     LineBox[{{53, 7.5}, {54, 7.5}}], LineBox[{{53, 8.5}, {54, 8.5}}]}, {
     LineBox[{{54, 0.5}, {55, 0.5}}], LineBox[{{54, 1.5}, {55, 1.5}}], 
     LineBox[{{54, 2.5}, {55, 2.5}}], LineBox[{{54, 3.5}, {55, 3.5}}], 
     LineBox[{{54, 4.5}, {55, 4.5}}], LineBox[{{54, 5.5}, {55, 5.5}}], 
     LineBox[{{54, 6.5}, {55, 6.5}}], LineBox[{{54, 7.5}, {55, 7.5}}], 
     LineBox[{{54, 8.5}, {55, 8.5}}]}, {LineBox[{{55, 0.5}, {56, 0.5}}], 
     LineBox[{{55, 1.5}, {56, 1.5}}], LineBox[{{55, 2.5}, {56, 2.5}}], 
     LineBox[{{55, 3.5}, {56, 3.5}}], LineBox[{{55, 4.5}, {56, 4.5}}], 
     LineBox[{{55, 5.5}, {56, 5.5}}], LineBox[{{55, 6.5}, {56, 6.5}}], 
     LineBox[{{55, 7.5}, {56, 7.5}}], LineBox[{{55, 8.5}, {56, 8.5}}]}, {
     LineBox[{{56, 0.5}, {57, 0.5}}], LineBox[{{56, 1.5}, {57, 1.5}}], 
     LineBox[{{56, 2.5}, {57, 2.5}}], LineBox[{{56, 3.5}, {57, 3.5}}], 
     LineBox[{{56, 4.5}, {57, 4.5}}], LineBox[{{56, 5.5}, {57, 5.5}}], 
     LineBox[{{56, 6.5}, {57, 6.5}}], LineBox[{{56, 7.5}, {57, 7.5}}], 
     LineBox[{{56, 8.5}, {57, 8.5}}]}, {LineBox[{{57, 0.5}, {58, 0.5}}], 
     LineBox[{{57, 1.5}, {58, 1.5}}], LineBox[{{57, 2.5}, {58, 2.5}}], 
     LineBox[{{57, 3.5}, {58, 3.5}}], LineBox[{{57, 4.5}, {58, 4.5}}], 
     LineBox[{{57, 5.5}, {58, 5.5}}], LineBox[{{57, 6.5}, {58, 6.5}}], 
     LineBox[{{57, 7.5}, {58, 7.5}}], LineBox[{{57, 8.5}, {58, 8.5}}]}, {
     LineBox[{{58, 0.5}, {59, 0.5}}], LineBox[{{58, 1.5}, {59, 1.5}}], 
     LineBox[{{58, 2.5}, {59, 2.5}}], LineBox[{{58, 3.5}, {59, 3.5}}], 
     LineBox[{{58, 4.5}, {59, 4.5}}], LineBox[{{58, 5.5}, {59, 5.5}}], 
     LineBox[{{58, 6.5}, {59, 6.5}}], LineBox[{{58, 7.5}, {59, 7.5}}], 
     LineBox[{{58, 8.5}, {59, 8.5}}]}, {LineBox[{{59, 0.5}, {60, 0.5}}], 
     LineBox[{{59, 1.5}, {60, 1.5}}], LineBox[{{59, 2.5}, {60, 2.5}}], 
     LineBox[{{59, 3.5}, {60, 3.5}}], LineBox[{{59, 4.5}, {60, 4.5}}], 
     LineBox[{{59, 5.5}, {60, 5.5}}], LineBox[{{59, 6.5}, {60, 6.5}}], 
     LineBox[{{59, 7.5}, {60, 7.5}}], LineBox[{{59, 8.5}, {60, 8.5}}]}, {
     LineBox[{{60, 0.5}, {61, 0.5}}], LineBox[{{60, 1.5}, {61, 1.5}}], 
     LineBox[{{60, 2.5}, {61, 2.5}}], LineBox[{{60, 3.5}, {61, 3.5}}], 
     LineBox[{{60, 4.5}, {61, 4.5}}], LineBox[{{60, 5.5}, {61, 5.5}}], 
     LineBox[{{60, 6.5}, {61, 6.5}}], LineBox[{{60, 7.5}, {61, 7.5}}], 
     LineBox[{{60, 8.5}, {61, 8.5}}]}, {LineBox[{{61, 0.5}, {62, 0.5}}], 
     LineBox[{{61, 1.5}, {62, 1.5}}], LineBox[{{61, 2.5}, {62, 2.5}}], 
     LineBox[{{61, 3.5}, {62, 3.5}}], LineBox[{{61, 4.5}, {62, 4.5}}], 
     LineBox[{{61, 5.5}, {62, 5.5}}], LineBox[{{61, 6.5}, {62, 6.5}}], 
     LineBox[{{61, 7.5}, {62, 7.5}}], LineBox[{{61, 8.5}, {62, 8.5}}]}}, {{
     CircleBox[{0.5, 0.5}, 0.25], LineBox[{{0.5, 0.25}, {0.5, 0.75}}]}, {
     CircleBox[{0.5, 6.5}, 0.25], LineBox[{{0.5, 6.25}, {0.5, 6.75}}]}, {
     CircleBox[{0.5, 1.5}, 0.25], LineBox[{{0.5, 1.25}, {0.5, 1.75}}]}, {
     CircleBox[{0.5, 7.5}, 0.25], LineBox[{{0.5, 7.25}, {0.5, 7.75}}]}, {
     CircleBox[{0.5, 2.5}, 0.25], LineBox[{{0.5, 2.25}, {0.5, 2.75}}]}, {
     CircleBox[{0.5, 8.5}, 0.25], LineBox[{{0.5, 8.25}, {0.5, 8.75}}]}, {
     CircleBox[{0.5, 3.5}, 0.25], LineBox[{{0.5, 3.25}, {0.5, 3.75}}]}, {
     CircleBox[{0.5, 4.5}, 0.25], LineBox[{{0.5, 4.25}, {0.5, 4.75}}]}, {
     CircleBox[{0.5, 5.5}, 0.25], LineBox[{{0.5, 5.25}, {0.5, 5.75}}]}, {
     RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
     InsetBox["\<\"H\"\>", {1.5, 0.5}]}, {CircleBox[{2.5, 0.5}, 0.25], 
     LineBox[{{2.5, 0.25}, {2.5, 0.75}}]}, {
     LineBox[{{3.5, 0.5}, {3.5, 6.5}}], {RectangleBox[{3.1, 0.1}, {3.9, 0.9}],
       InsetBox["\<\"U\"\>", {3.5, 0.5}]}, {
      RectangleBox[{3.1, 6.1}, {3.9, 6.9}], 
      InsetBox["\<\"U\"\>", {3.5, 6.5}]}, {
      RectangleBox[{3.1, 1.1}, {3.9, 1.9}], 
      InsetBox["\<\"U\"\>", {3.5, 1.5}]}}, {CircleBox[{4.5, 0.5}, 0.25], 
     LineBox[{{4.5, 0.25}, {4.5, 0.75}}]}, {CircleBox[{4.5, 6.5}, 0.25], 
     LineBox[{{4.5, 6.25}, {4.5, 6.75}}]}, {CircleBox[{4.5, 1.5}, 0.25], 
     LineBox[{{4.5, 1.25}, {4.5, 1.75}}]}, {
     RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
     InsetBox["\<\"H\"\>", {5.5, 0.5}]}, {CircleBox[{5.5, 6.5}, 0.25], 
     LineBox[{{5.5, 6.25}, {5.5, 6.75}}]}, {CircleBox[{5.5, 1.5}, 0.25], 
     LineBox[{{5.5, 1.25}, {5.5, 1.75}}]}, {CircleBox[{6.5, 0.5}, 0.25], 
     LineBox[{{6.5, 0.25}, {6.5, 0.75}}]}, {
     RectangleBox[{6.1, 6.1}, {6.9, 6.9}], 
     InsetBox["\<\"H\"\>", {6.5, 6.5}]}, {CircleBox[{7.5, 6.5}, 0.25], 
     LineBox[{{7.5, 6.25}, {7.5, 6.75}}]}, {CircleBox[{7.5, 0.5}, 0.25], 
     LineBox[{{7.5, 0.25}, {7.5, 0.75}}]}, {
     LineBox[{{8.5, 2.5}, {8.5, 7.5}}], {RectangleBox[{8.1, 6.1}, {8.9, 6.9}],
       InsetBox["\<\"U\"\>", {8.5, 6.5}]}, {
      RectangleBox[{8.1, 7.1}, {8.9, 7.9}], 
      InsetBox["\<\"U\"\>", {8.5, 7.5}]}, {
      RectangleBox[{8.1, 2.1}, {8.9, 2.9}], 
      InsetBox["\<\"U\"\>", {8.5, 2.5}]}}, {
     RectangleBox[{8.1, 0.1}, {8.9, 0.9}], 
     InsetBox["\<\"H\"\>", {8.5, 0.5}]}, {CircleBox[{9.5, 6.5}, 0.25], 
     LineBox[{{9.5, 6.25}, {9.5, 6.75}}]}, {CircleBox[{9.5, 7.5}, 0.25], 
     LineBox[{{9.5, 7.25}, {9.5, 7.75}}]}, {CircleBox[{9.5, 2.5}, 0.25], 
     LineBox[{{9.5, 2.25}, {9.5, 2.75}}]}, {CircleBox[{9.5, 0.5}, 0.25], 
     LineBox[{{9.5, 0.25}, {9.5, 0.75}}]}, {
     RectangleBox[{10.1, 6.1}, {10.9, 6.9}], 
     InsetBox["\<\"H\"\>", {10.5, 6.5}]}, {CircleBox[{10.5, 7.5}, 0.25], 
     LineBox[{{10.5, 7.25}, {10.5, 7.75}}]}, {CircleBox[{10.5, 2.5}, 0.25], 
     LineBox[{{10.5, 2.25}, {10.5, 2.75}}]}, {CircleBox[{11.5, 6.5}, 0.25], 
     LineBox[{{11.5, 6.25}, {11.5, 6.75}}]}, {
     RectangleBox[{11.1, 7.1}, {11.9, 7.9}], 
     InsetBox["\<\"H\"\>", {11.5, 7.5}]}, {CircleBox[{12.5, 7.5}, 0.25], 
     LineBox[{{12.5, 7.25}, {12.5, 7.75}}]}, {CircleBox[{12.5, 6.5}, 0.25], 
     LineBox[{{12.5, 6.25}, {12.5, 6.75}}]}, {
     LineBox[{{13.5, 3.5}, {13.5, 8.5}}], {
      RectangleBox[{13.1, 7.1}, {13.9, 7.9}], 
      InsetBox["\<\"U\"\>", {13.5, 7.5}]}, {
      RectangleBox[{13.1, 8.1}, {13.9, 8.9}], 
      InsetBox["\<\"U\"\>", {13.5, 8.5}]}, {
      RectangleBox[{13.1, 3.1}, {13.9, 3.9}], 
      InsetBox["\<\"U\"\>", {13.5, 3.5}]}}, {
     RectangleBox[{14.1, 6.1}, {14.9, 6.9}], 
     InsetBox["\<\"H\"\>", {14.5, 6.5}]}, {CircleBox[{14.5, 7.5}, 0.25], 
     LineBox[{{14.5, 7.25}, {14.5, 7.75}}]}, {CircleBox[{14.5, 8.5}, 0.25], 
     LineBox[{{14.5, 8.25}, {14.5, 8.75}}]}, {CircleBox[{14.5, 3.5}, 0.25], 
     LineBox[{{14.5, 3.25}, {14.5, 3.75}}]}, {CircleBox[{15.5, 6.5}, 0.25], 
     LineBox[{{15.5, 6.25}, {15.5, 6.75}}]}, {
     RectangleBox[{15.1, 7.1}, {15.9, 7.9}], 
     InsetBox["\<\"H\"\>", {15.5, 7.5}]}, {CircleBox[{15.5, 8.5}, 0.25], 
     LineBox[{{15.5, 8.25}, {15.5, 8.75}}]}, {CircleBox[{15.5, 3.5}, 0.25], 
     LineBox[{{15.5, 3.25}, {15.5, 3.75}}]}, {CircleBox[{16.5, 7.5}, 0.25], 
     LineBox[{{16.5, 7.25}, {16.5, 7.75}}]}, {
     RectangleBox[{16.1, 8.1}, {16.9, 8.9}], 
     InsetBox["\<\"H\"\>", {16.5, 8.5}]}, {CircleBox[{17.5, 8.5}, 0.25], 
     LineBox[{{17.5, 8.25}, {17.5, 8.75}}]}, {CircleBox[{17.5, 7.5}, 0.25], 
     LineBox[{{17.5, 7.25}, {17.5, 7.75}}]}, {
     LineBox[{{18.5, 4.5}, {18.5, 8.5}}], {
      RectangleBox[{18.1, 8.1}, {18.9, 8.9}], 
      InsetBox["\<\"U\"\>", {18.5, 8.5}]}, {
      RectangleBox[{18.1, 4.1}, {18.9, 4.9}], 
      InsetBox["\<\"U\"\>", {18.5, 4.5}]}, {
      RectangleBox[{18.1, 5.1}, {18.9, 5.9}], 
      InsetBox["\<\"U\"\>", {18.5, 5.5}]}}, {
     RectangleBox[{19.1, 7.1}, {19.9, 7.9}], 
     InsetBox["\<\"H\"\>", {19.5, 7.5}]}, {CircleBox[{19.5, 8.5}, 0.25], 
     LineBox[{{19.5, 8.25}, {19.5, 8.75}}]}, {CircleBox[{19.5, 4.5}, 0.25], 
     LineBox[{{19.5, 4.25}, {19.5, 4.75}}]}, {CircleBox[{19.5, 5.5}, 0.25], 
     LineBox[{{19.5, 5.25}, {19.5, 5.75}}]}, {CircleBox[{20.5, 7.5}, 0.25], 
     LineBox[{{20.5, 7.25}, {20.5, 7.75}}]}, {
     RectangleBox[{20.1, 8.1}, {20.9, 8.9}], 
     InsetBox["\<\"H\"\>", {20.5, 8.5}]}, {CircleBox[{20.5, 4.5}, 0.25], 
     LineBox[{{20.5, 4.25}, {20.5, 4.75}}]}, {CircleBox[{20.5, 5.5}, 0.25], 
     LineBox[{{20.5, 5.25}, {20.5, 5.75}}]}, {CircleBox[{21.5, 8.5}, 0.25], 
     LineBox[{{21.5, 8.25}, {21.5, 8.75}}]}, {CircleBox[{22.5, 8.5}, 0.25], 
     LineBox[{{22.5, 8.25}, {22.5, 8.75}}]}, {
     LineBox[{{23.5, 3.5}, {23.5, 8.5}}], {
      RectangleBox[{23.1, 7.1}, {23.9, 7.9}], 
      InsetBox["\<\"U\"\>", {23.5, 7.5}]}, {
      RectangleBox[{23.1, 8.1}, {23.9, 8.9}], 
      InsetBox["\<\"U\"\>", {23.5, 8.5}]}, {
      RectangleBox[{23.1, 3.1}, {23.9, 3.9}], 
      InsetBox["\<\"U\"\>", {23.5, 3.5}]}}, {CircleBox[{24.5, 7.5}, 0.25], 
     LineBox[{{24.5, 7.25}, {24.5, 7.75}}]}, {CircleBox[{24.5, 8.5}, 0.25], 
     LineBox[{{24.5, 8.25}, {24.5, 8.75}}]}, {CircleBox[{24.5, 3.5}, 0.25], 
     LineBox[{{24.5, 3.25}, {24.5, 3.75}}]}, {
     RectangleBox[{25.1, 7.1}, {25.9, 7.9}], 
     InsetBox["\<\"H\"\>", {25.5, 7.5}]}, {CircleBox[{25.5, 8.5}, 0.25], 
     LineBox[{{25.5, 8.25}, {25.5, 8.75}}]}, {CircleBox[{25.5, 3.5}, 0.25], 
     LineBox[{{25.5, 3.25}, {25.5, 3.75}}]}, {CircleBox[{26.5, 7.5}, 0.25], 
     LineBox[{{26.5, 7.25}, {26.5, 7.75}}]}, {CircleBox[{27.5, 7.5}, 0.25], 
     LineBox[{{27.5, 7.25}, {27.5, 7.75}}]}, {
     LineBox[{{28.5, 2.5}, {28.5, 7.5}}], {
      RectangleBox[{28.1, 6.1}, {28.9, 6.9}], 
      InsetBox["\<\"U\"\>", {28.5, 6.5}]}, {
      RectangleBox[{28.1, 7.1}, {28.9, 7.9}], 
      InsetBox["\<\"U\"\>", {28.5, 7.5}]}, {
      RectangleBox[{28.1, 2.1}, {28.9, 2.9}], 
      InsetBox["\<\"U\"\>", {28.5, 2.5}]}}, {CircleBox[{29.5, 6.5}, 0.25], 
     LineBox[{{29.5, 6.25}, {29.5, 6.75}}]}, {CircleBox[{29.5, 7.5}, 0.25], 
     LineBox[{{29.5, 7.25}, {29.5, 7.75}}]}, {CircleBox[{29.5, 2.5}, 0.25], 
     LineBox[{{29.5, 2.25}, {29.5, 2.75}}]}, {
     RectangleBox[{30.1, 6.1}, {30.9, 6.9}], 
     InsetBox["\<\"H\"\>", {30.5, 6.5}]}, {CircleBox[{30.5, 7.5}, 0.25], 
     LineBox[{{30.5, 7.25}, {30.5, 7.75}}]}, {CircleBox[{30.5, 2.5}, 0.25], 
     LineBox[{{30.5, 2.25}, {30.5, 2.75}}]}, {CircleBox[{31.5, 6.5}, 0.25], 
     LineBox[{{31.5, 6.25}, {31.5, 6.75}}]}, {CircleBox[{32.5, 6.5}, 0.25], 
     LineBox[{{32.5, 6.25}, {32.5, 6.75}}]}, {
     LineBox[{{33.5, 0.5}, {33.5, 6.5}}], {
      RectangleBox[{33.1, 0.1}, {33.9, 0.9}], 
      InsetBox["\<\"U\"\>", {33.5, 0.5}]}, {
      RectangleBox[{33.1, 6.1}, {33.9, 6.9}], 
      InsetBox["\<\"U\"\>", {33.5, 6.5}]}, {
      RectangleBox[{33.1, 1.1}, {33.9, 1.9}], 
      InsetBox["\<\"U\"\>", {33.5, 1.5}]}}, {CircleBox[{34.5, 0.5}, 0.25], 
     LineBox[{{34.5, 0.25}, {34.5, 0.75}}]}, {CircleBox[{34.5, 6.5}, 0.25], 
     LineBox[{{34.5, 6.25}, {34.5, 6.75}}]}, {CircleBox[{34.5, 1.5}, 0.25], 
     LineBox[{{34.5, 1.25}, {34.5, 1.75}}]}, {
     RectangleBox[{35.1, 0.1}, {35.9, 0.9}], 
     InsetBox["\<\"H\"\>", {35.5, 0.5}]}, {CircleBox[{35.5, 6.5}, 0.25], 
     LineBox[{{35.5, 6.25}, {35.5, 6.75}}]}, {CircleBox[{36.5, 0.5}, 0.25], 
     LineBox[{{36.5, 0.25}, {36.5, 0.75}}]}, {
     RectangleBox[{36.1, 6.1}, {36.9, 6.9}], 
     InsetBox["\<\"H\"\>", {36.5, 6.5}]}, {CircleBox[{37.5, 6.5}, 0.25], 
     LineBox[{{37.5, 6.25}, {37.5, 6.75}}]}, {
     LineBox[{{38.5, 2.5}, {38.5, 7.5}}], {
      RectangleBox[{38.1, 6.1}, {38.9, 6.9}], 
      InsetBox["\<\"U\"\>", {38.5, 6.5}]}, {
      RectangleBox[{38.1, 7.1}, {38.9, 7.9}], 
      InsetBox["\<\"U\"\>", {38.5, 7.5}]}, {
      RectangleBox[{38.1, 2.1}, {38.9, 2.9}], 
      InsetBox["\<\"U\"\>", {38.5, 2.5}]}}, {CircleBox[{39.5, 6.5}, 0.25], 
     LineBox[{{39.5, 6.25}, {39.5, 6.75}}]}, {CircleBox[{39.5, 7.5}, 0.25], 
     LineBox[{{39.5, 7.25}, {39.5, 7.75}}]}, {CircleBox[{39.5, 2.5}, 0.25], 
     LineBox[{{39.5, 2.25}, {39.5, 2.75}}]}, {
     RectangleBox[{40.1, 6.1}, {40.9, 6.9}], 
     InsetBox["\<\"H\"\>", {40.5, 6.5}]}, {CircleBox[{40.5, 7.5}, 0.25], 
     LineBox[{{40.5, 7.25}, {40.5, 7.75}}]}, {CircleBox[{40.5, 2.5}, 0.25], 
     LineBox[{{40.5, 2.25}, {40.5, 2.75}}]}, {CircleBox[{41.5, 6.5}, 0.25], 
     LineBox[{{41.5, 6.25}, {41.5, 6.75}}]}, {
     RectangleBox[{41.1, 7.1}, {41.9, 7.9}], 
     InsetBox["\<\"H\"\>", {41.5, 7.5}]}, {CircleBox[{42.5, 7.5}, 0.25], 
     LineBox[{{42.5, 7.25}, {42.5, 7.75}}]}, {CircleBox[{42.5, 6.5}, 0.25], 
     LineBox[{{42.5, 6.25}, {42.5, 6.75}}]}, {
     LineBox[{{43.5, 3.5}, {43.5, 8.5}}], {
      RectangleBox[{43.1, 7.1}, {43.9, 7.9}], 
      InsetBox["\<\"U\"\>", {43.5, 7.5}]}, {
      RectangleBox[{43.1, 8.1}, {43.9, 8.9}], 
      InsetBox["\<\"U\"\>", {43.5, 8.5}]}, {
      RectangleBox[{43.1, 3.1}, {43.9, 3.9}], 
      InsetBox["\<\"U\"\>", {43.5, 3.5}]}}, {
     RectangleBox[{44.1, 6.1}, {44.9, 6.9}], 
     InsetBox["\<\"H\"\>", {44.5, 6.5}]}, {CircleBox[{44.5, 7.5}, 0.25], 
     LineBox[{{44.5, 7.25}, {44.5, 7.75}}]}, {CircleBox[{44.5, 8.5}, 0.25], 
     LineBox[{{44.5, 8.25}, {44.5, 8.75}}]}, {CircleBox[{44.5, 3.5}, 0.25], 
     LineBox[{{44.5, 3.25}, {44.5, 3.75}}]}, {CircleBox[{45.5, 6.5}, 0.25], 
     LineBox[{{45.5, 6.25}, {45.5, 6.75}}]}, {
     RectangleBox[{45.1, 7.1}, {45.9, 7.9}], 
     InsetBox["\<\"H\"\>", {45.5, 7.5}]}, {CircleBox[{45.5, 8.5}, 0.25], 
     LineBox[{{45.5, 8.25}, {45.5, 8.75}}]}, {CircleBox[{45.5, 3.5}, 0.25], 
     LineBox[{{45.5, 3.25}, {45.5, 3.75}}]}, {CircleBox[{46.5, 7.5}, 0.25], 
     LineBox[{{46.5, 7.25}, {46.5, 7.75}}]}, {
     RectangleBox[{46.1, 8.1}, {46.9, 8.9}], 
     InsetBox["\<\"H\"\>", {46.5, 8.5}]}, {CircleBox[{47.5, 8.5}, 0.25], 
     LineBox[{{47.5, 8.25}, {47.5, 8.75}}]}, {CircleBox[{47.5, 7.5}, 0.25], 
     LineBox[{{47.5, 7.25}, {47.5, 7.75}}]}, {
     LineBox[{{48.5, 4.5}, {48.5, 8.5}}], {
      RectangleBox[{48.1, 8.1}, {48.9, 8.9}], 
      InsetBox["\<\"U\"\>", {48.5, 8.5}]}, {
      RectangleBox[{48.1, 4.1}, {48.9, 4.9}], 
      InsetBox["\<\"U\"\>", {48.5, 4.5}]}, {
      RectangleBox[{48.1, 5.1}, {48.9, 5.9}], 
      InsetBox["\<\"U\"\>", {48.5, 5.5}]}}, {
     RectangleBox[{49.1, 7.1}, {49.9, 7.9}], 
     InsetBox["\<\"H\"\>", {49.5, 7.5}]}, {CircleBox[{49.5, 8.5}, 0.25], 
     LineBox[{{49.5, 8.25}, {49.5, 8.75}}]}, {CircleBox[{49.5, 4.5}, 0.25], 
     LineBox[{{49.5, 4.25}, {49.5, 4.75}}]}, {CircleBox[{49.5, 5.5}, 0.25], 
     LineBox[{{49.5, 5.25}, {49.5, 5.75}}]}, {CircleBox[{50.5, 7.5}, 0.25], 
     LineBox[{{50.5, 7.25}, {50.5, 7.75}}]}, {
     RectangleBox[{50.1, 8.1}, {50.9, 8.9}], 
     InsetBox["\<\"H\"\>", {50.5, 8.5}]}, {CircleBox[{51.5, 8.5}, 0.25], 
     LineBox[{{51.5, 8.25}, {51.5, 8.75}}]}, {CircleBox[{52.5, 8.5}, 0.25], 
     LineBox[{{52.5, 8.25}, {52.5, 8.75}}]}, {
     LineBox[{{53.5, 3.5}, {53.5, 8.5}}], {
      RectangleBox[{53.1, 7.1}, {53.9, 7.9}], 
      InsetBox["\<\"U\"\>", {53.5, 7.5}]}, {
      RectangleBox[{53.1, 8.1}, {53.9, 8.9}], 
      InsetBox["\<\"U\"\>", {53.5, 8.5}]}, {
      RectangleBox[{53.1, 3.1}, {53.9, 3.9}], 
      InsetBox["\<\"U\"\>", {53.5, 3.5}]}}, {CircleBox[{54.5, 7.5}, 0.25], 
     LineBox[{{54.5, 7.25}, {54.5, 7.75}}]}, {CircleBox[{54.5, 8.5}, 0.25], 
     LineBox[{{54.5, 8.25}, {54.5, 8.75}}]}, {CircleBox[{54.5, 3.5}, 0.25], 
     LineBox[{{54.5, 3.25}, {54.5, 3.75}}]}, {
     RectangleBox[{55.1, 7.1}, {55.9, 7.9}], 
     InsetBox["\<\"H\"\>", {55.5, 7.5}]}, {CircleBox[{56.5, 7.5}, 0.25], 
     LineBox[{{56.5, 7.25}, {56.5, 7.75}}]}, {CircleBox[{57.5, 7.5}, 0.25], 
     LineBox[{{57.5, 7.25}, {57.5, 7.75}}]}, {
     LineBox[{{58.5, 2.5}, {58.5, 7.5}}], {
      RectangleBox[{58.1, 6.1}, {58.9, 6.9}], 
      InsetBox["\<\"U\"\>", {58.5, 6.5}]}, {
      RectangleBox[{58.1, 7.1}, {58.9, 7.9}], 
      InsetBox["\<\"U\"\>", {58.5, 7.5}]}, {
      RectangleBox[{58.1, 2.1}, {58.9, 2.9}], 
      InsetBox["\<\"U\"\>", {58.5, 2.5}]}}, {CircleBox[{59.5, 6.5}, 0.25], 
     LineBox[{{59.5, 6.25}, {59.5, 6.75}}]}, {CircleBox[{59.5, 7.5}, 0.25], 
     LineBox[{{59.5, 7.25}, {59.5, 7.75}}]}, {CircleBox[{59.5, 2.5}, 0.25], 
     LineBox[{{59.5, 2.25}, {59.5, 2.75}}]}, {
     RectangleBox[{60.1, 6.1}, {60.9, 6.9}], 
     InsetBox["\<\"H\"\>", {60.5, 6.5}]}, {CircleBox[{61.5, 6.5}, 0.25], 
     LineBox[{{61.5, 6.25}, {61.5, 6.75}}]}}},
  ImageSize->1890,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.878717871469034*^9, {3.878718040670024*^9, 3.878718051307992*^9}, 
   3.878718295574256*^9, 3.878718375615571*^9, {3.878718448510793*^9, 
   3.8787184572171288`*^9}, {3.878718528216387*^9, 3.878718552259055*^9}, 
   3.8787345390954547`*^9, {3.878734826983292*^9, 3.8787348551645193`*^9}, {
   3.878736155233852*^9, 3.878736198974102*^9}, 3.8788031864919252`*^9},
 CellLabel->"Out[101]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"be1e6bbe-51d5-4f70-ac44-12a8a1a8dc0e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.878717871469034*^9, {3.878718040670024*^9, 3.878718051307992*^9}, 
   3.878718295574256*^9, 3.878718375615571*^9, {3.878718448510793*^9, 
   3.8787184572171288`*^9}, {3.878718528216387*^9, 3.878718552259055*^9}, 
   3.8787345390954547`*^9, {3.878734826983292*^9, 3.8787348551645193`*^9}, {
   3.878736155233852*^9, 3.878736198974102*^9}, 3.8788031865323887`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"3df18a16-ecc5-4ebf-9682-cde89948e4f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"?", "Delete"}]], "Input",
 CellChangeTimes->{{3.8787615860607677`*^9, 3.878761589858637*^9}, {
  3.8787616425730534`*^9, 3.878761643431031*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"e8a32db8-5012-4357-9fd4-af36b85879a9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878764062139947*^9, 
  3.878764062919431*^9}},ExpressionUUID->"9a0772e0-da55-4d34-8d45-\
82d9ac38e782"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XTrans", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["Rx", "i"], "[", "Pi", "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HTrans", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "i"], "[", 
      RowBox[{"Pi", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "i"], "[", "Pi", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HXTrans", "[", "q_", "]"}], ":=", 
  RowBox[{
   SubscriptBox["Ry", "q"], "[", 
   RowBox[{"Pi", "/", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XHTrans", "[", "q_", "]"}], ":=", 
  RowBox[{
   SubscriptBox["Ry", "q"], "[", 
   RowBox[{
    RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XHXTrans", "[", "q_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Ry", "q"], "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "q"], "[", 
     RowBox[{"-", "Pi"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HXHTrans", "[", "q_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Ry", "q"], "[", 
     RowBox[{"-", "Pi"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "q"], "[", 
     RowBox[{"-", "Pi"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Subscript", "[", 
   RowBox[{"CCZDecomp", ",", "t_", ",", "c1_", ",", "c2_"}], "]"}], 
  ":="}]}], "Input",
 CellChangeTimes->{{3.8787658062966557`*^9, 3.8787658450445037`*^9}, {
  3.8787662015615697`*^9, 3.87876622260569*^9}, {3.8787664073675013`*^9, 
  3.878766465238309*^9}, {3.878810289623663*^9, 3.8788103435476885`*^9}, {
  3.8788106562423763`*^9, 3.878810657799283*^9}, {3.878833909951544*^9, 
  3.8788339486815405`*^9}},ExpressionUUID->"df8d62ae-5b04-4345-9980-\
c0f691a52d93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KetList", "[", "5", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8787668289492693`*^9, 3.878766838962924*^9}, {
  3.8787669024946585`*^9, 3.8787669123848505`*^9}, {3.8787674977793536`*^9, 
  3.8787675053203187`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"119aba29-4933-4989-800c-8d5a6de039e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.8787669131067123`*^9, 3.8787675061807384`*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"d6ef0e9d-e2a3-4582-9fb1-b1a967d6b1c2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"CliffCCZRyd", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HXTrans", "[", "0", "]"}], ",", 
    RowBox[{"HXTrans", "[", "0", "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"XTrans", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", 
    SubscriptBox["CCZ", 
     RowBox[{"0", ",", "6", ",", "1"}]], ",", 
    RowBox[{"HXTrans", "[", "6", "]"}], ",", 
    SubscriptBox["CCZ", 
     RowBox[{"7", ",", "6", ",", "2"}]], ",", 
    RowBox[{"HXTrans", "[", "7", "]"}], ",", 
    SubscriptBox["CCZ", 
     RowBox[{"8", ",", "7", ",", "3"}]], ",", 
    RowBox[{"HXTrans", "[", "8", "]"}], ",", 
    RowBox[{
     SubscriptBox["CCZ", 
      RowBox[{"8", ",", "5", ",", "4"}]], 
     RowBox[{"XHTrans", "[", "8", "]"}]}], ",", 
    SubscriptBox["CCZ", 
     RowBox[{"8", ",", "7", ",", "3"}]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroverIteration3Q", "[", "SearchSeed_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"XIndices", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", "SearchSeed", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", "SearchSeed", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}], ",", "0"}], "]"}]}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Xs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"XTrans", "[", 
         RowBox[{
          RowBox[{"XIndices", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], "-", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "XIndices", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"Xs", ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "2"}]], ",", "Xs", ",", 
        RowBox[{"HTrans", "[", "0", "]"}], ",", 
        RowBox[{"HTrans", "[", "1", "]"}], ",", 
        RowBox[{"HTrans", "[", "2", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "2"}]], ",", 
        RowBox[{"HTrans", "[", "0", "]"}], ",", 
        RowBox[{"HTrans", "[", "1", "]"}], ",", 
        RowBox[{"HTrans", "[", "2", "]"}]}], "}"}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.878766933660025*^9, 3.8787669610153704`*^9}, {
  3.878767476334741*^9, 3.878767480154024*^9}, {3.8787675145049267`*^9, 
  3.8787676038345203`*^9}, {3.8787679658872843`*^9, 3.878768041149183*^9}, {
  3.878768091133928*^9, 3.8787681213604493`*^9}, {3.8787682051932487`*^9, 
  3.8787684415935574`*^9}},ExpressionUUID->"6db349cb-634e-4fa3-8992-\
5f6049a7d774"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Replace"}]], "Input",
 CellChangeTimes->{{3.878766992547311*^9, 3.8787669994309263`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"5648b353-8f7a-4440-b1ce-a811bf99f618"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Replace",
              ButtonNote->"paclet:ref/Replace"],
             "\"paclet:ref/Replace\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"rules\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) applies a rule or list \
of rules in an attempt to transform the entire expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"rules\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) applies rules to parts of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", StyleBox[\\\"rules\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of Replace that can \
be applied to an expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Replace", 
                    "paclet:ref/Replace", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Replace.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Replace.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Heads", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Replace\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Replace",
              ButtonNote->"paclet:ref/Replace"],
             "\"paclet:ref/Replace\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"rules\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) applies a rule or list \
of rules in an attempt to transform the entire expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"rules\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) applies rules to parts of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Replace\\\", \\\"[\\\", StyleBox[\\\"rules\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of Replace that can \
be applied to an expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Replace\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"rules\", \"TI\"]}], \"]\"}]\) applies a rule or list of \
rules in an attempt to transform the entire expression \
\!\(\*StyleBox[\"expr\", \"TI\"]\). \n\!\(\*RowBox[{\"Replace\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"rules\", \"TI\"], \
\",\", StyleBox[\"levelspec\", \"TI\"]}], \"]\"}]\) applies rules to parts of \
\!\(\*StyleBox[\"expr\", \"TI\"]\) specified by \!\(\*StyleBox[\"levelspec\", \
\"TI\"]\). \n\!\(\*RowBox[{\"Replace\", \"[\", StyleBox[\"rules\", \"TI\"], \
\"]\"}]\) represents an operator form of Replace that can be applied to an \
expression.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Replace", "Web" -> 
      "http://reference.wolfram.com/language/ref/Replace.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Heads -> False}, "Attributes" -> {Protected}, "FullName" -> 
    "System`Replace"], False]]], "Output",
 CellChangeTimes->{3.8787670004887877`*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"39e0cd45-2fe9-4b9c-829b-d585a6571068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{"KetList", "[", "6", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C5XTranspiled", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"XTrans", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"XTrans", "[", "0", "]"}], ",", 
      RowBox[{"HXTrans", "[", "0", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"0", ",", "1", ",", "6"}]], ",", 
      RowBox[{"HXTrans", "[", "6", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"2", ",", "6", ",", "7"}]], ",", 
      RowBox[{"HXTrans", "[", "7", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"8", ",", "7", ",", "3"}]], ",", 
      RowBox[{"HXTrans", "[", "8", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"8", ",", "4", ",", "5"}]], ",", 
      RowBox[{"XHTrans", "[", "8", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"8", ",", "7", ",", "3"}]], ",", 
      RowBox[{"XHTrans", "[", "7", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"2", ",", "6", ",", "7"}]], ",", 
      RowBox[{"XHTrans", "[", "6", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"0", ",", "1", ",", "6"}]], ",", 
      RowBox[{"HXTrans", "[", "6", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"2", ",", "6", ",", "7"}]], ",", 
      RowBox[{"HXTrans", "[", "7", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"3", ",", "7", ",", "8"}]], ",", 
      RowBox[{"HXTrans", "[", "8", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"4", ",", "5", ",", "8"}]], ",", 
      RowBox[{"XHTrans", "[", "8", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"3", ",", "8", ",", "7"}]], ",", 
      RowBox[{"XHTrans", "[", "7", "]"}], ",", 
      SubscriptBox["CCZ", 
       RowBox[{"2", ",", "6", ",", "7"}]], ",", 
      RowBox[{"XHTrans", "[", "6", "]"}], ",", ",", 
      RowBox[{"XHTrans", "[", "0", "]"}], ",", 
      RowBox[{"XTrans", "[", "0", "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"XTrans", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C5ZCliffTrans", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"HTrans", "[", "0", "]"}], ",", "C5XTranspiled", ",", 
     RowBox[{"HTrans", "[", "0", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroverOracle6D3A", "[", "SearchSeed_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"XIndices", "=", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", "SearchSeed", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], ",", "1"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", "SearchSeed", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"XStart", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"XTrans", "[", "0", "]"}], ",", 
           RowBox[{"HXTrans", "[", "0", "]"}], ",", 
           RowBox[{"HXTrans", "[", "0", "]"}]}], "}"}]}], ";", 
        RowBox[{"XEnd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"XHTrans", "[", "0", "]"}], ",", 
           RowBox[{"XHTrans", "[", "0", "]"}], ",", 
           RowBox[{"XTrans", "[", "0", "]"}]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"XStart", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HXTrans", "[", "0", "]"}], ",", 
           RowBox[{"HXTrans", "[", "0", "]"}]}], "}"}]}], ";", 
        RowBox[{"XEnd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"XHTrans", "[", "0", "]"}], ",", 
           RowBox[{"XHTrans", "[", "0", "]"}]}], "}"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Xs", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"XTrans", "[", 
          RowBox[{"XIndices", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "XIndices", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "Xs", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"XStart", ",", "Xs", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"XTrans", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "6", ",", "8"}], "}"}]}], "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "6"}]], ",", 
        RowBox[{"HXTrans", "[", "6", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"2", ",", "6", ",", "7"}]], ",", 
        RowBox[{"HXTrans", "[", "7", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"8", ",", "7", ",", "3"}]], ",", 
        RowBox[{"HXTrans", "[", "8", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"8", ",", "4", ",", "5"}]], ",", 
        RowBox[{"XHTrans", "[", "8", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"8", ",", "7", ",", "3"}]], ",", 
        RowBox[{"XHTrans", "[", "7", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"2", ",", "6", ",", "7"}]], ",", 
        RowBox[{"XHTrans", "[", "6", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"0", ",", "1", ",", "6"}]], ",", 
        RowBox[{"HXTrans", "[", "6", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"2", ",", "6", ",", "7"}]], ",", 
        RowBox[{"HXTrans", "[", "7", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"3", ",", "7", ",", "8"}]], ",", 
        RowBox[{"HXTrans", "[", "8", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"4", ",", "5", ",", "8"}]], ",", 
        RowBox[{"XHTrans", "[", "8", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"3", ",", "8", ",", "7"}]], ",", 
        RowBox[{"XHTrans", "[", "7", "]"}], ",", 
        SubscriptBox["CCZ", 
         RowBox[{"2", ",", "6", ",", "7"}]], ",", 
        RowBox[{"XHTrans", "[", "6", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"XTrans", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "6", ",", "8"}], "}"}]}], "]"}], ",", "Xs", ",", 
        "XEnd"}], "}"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GroverDiffusion6D3A", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HTrans", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"XTrans", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "6", ",", "8"}], "}"}]}], "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"0", ",", "1", ",", "6"}]], ",", 
       RowBox[{"HXTrans", "[", "6", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"2", ",", "6", ",", "7"}]], ",", 
       RowBox[{"HXTrans", "[", "7", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"8", ",", "7", ",", "3"}]], ",", 
       RowBox[{"HXTrans", "[", "8", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"8", ",", "4", ",", "5"}]], ",", 
       RowBox[{"XHTrans", "[", "8", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"8", ",", "7", ",", "3"}]], ",", 
       RowBox[{"XHTrans", "[", "7", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"2", ",", "6", ",", "7"}]], ",", 
       RowBox[{"XHTrans", "[", "6", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"0", ",", "1", ",", "6"}]], ",", 
       RowBox[{"HXTrans", "[", "6", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"2", ",", "6", ",", "7"}]], ",", 
       RowBox[{"HXTrans", "[", "7", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"3", ",", "7", ",", "8"}]], ",", 
       RowBox[{"HXTrans", "[", "8", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"4", ",", "5", ",", "8"}]], ",", 
       RowBox[{"XHTrans", "[", "8", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"3", ",", "8", ",", "7"}]], ",", 
       RowBox[{"XHTrans", "[", "7", "]"}], ",", 
       SubscriptBox["CCZ", 
        RowBox[{"2", ",", "6", ",", "7"}]], ",", 
       RowBox[{"XHTrans", "[", "6", "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"XTrans", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "6", ",", "8"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HTrans", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GroversAlg6D3A", "[", "SearchSeed_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"HTrans", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GroverOracle6D3A", "[", "SearchSeed", "]"}], ",", 
         "GroverDiffusion6D3A"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "8"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";"}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"SearchSeed", "=", 
      RowBox[{
       RowBox[{"KetList", "[", "6", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"CreateDensityQureg", "[", "9", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"InitZeroState", "[", "\[Rho]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ApplyCircuit", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"ExtractCircuit", "[", 
        RowBox[{"InsertCircuitNoise", "[", 
         RowBox[{
          RowBox[{"GroversAlg6D3A", "[", "SearchSeed", "]"}], ",", "RydDev", 
          ",", 
          RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CalcProbOfAllOutcomes", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
         "}"}]}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "64"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"DrawCircuit", "[", 
     RowBox[{"GroverOracle6D3A", "[", 
      RowBox[{
       RowBox[{"KetList", "[", "6", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"DrawCircuit", "[", 
     RowBox[{"ExtractCircuit", "[", 
      RowBox[{"GetCircuitSchedule", "[", 
       RowBox[{"C5XTranspiled", ",", "RydDev", ",", 
        RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ExtractCircuit", "[", 
    RowBox[{"GetCircuitSchedule", "[", 
     RowBox[{"C5XTranspiled", ",", "RydDev", ",", 
      RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8788007478349714`*^9, 3.878800800822404*^9}, {
   3.878800837939262*^9, 3.878801013773447*^9}, {3.878801059880251*^9, 
   3.8788012051257033`*^9}, {3.878801235977038*^9, 3.8788013479518595`*^9}, {
   3.878801416324284*^9, 3.8788014847809677`*^9}, {3.878801515903816*^9, 
   3.878801533522149*^9}, {3.8788015773941283`*^9, 3.8788016052277665`*^9}, {
   3.8788016373031054`*^9, 3.8788016664674807`*^9}, {3.8788017361622987`*^9, 
   3.878801804342358*^9}, {3.878802231356759*^9, 3.878802234825732*^9}, {
   3.8788023611006174`*^9, 3.8788024594923677`*^9}, {3.878803081386095*^9, 
   3.87880308569184*^9}, {3.878803384746303*^9, 3.8788033930262413`*^9}, {
   3.8788055142213497`*^9, 3.8788055285532107`*^9}, {3.878809428260276*^9, 
   3.878809464250373*^9}, {3.8788094947910213`*^9, 3.878809527696027*^9}, {
   3.8788095615116615`*^9, 3.8788096145995245`*^9}, {3.8788098083927994`*^9, 
   3.8788099655717063`*^9}, 3.8788100026651106`*^9, {3.8788100428305597`*^9, 
   3.8788101676877813`*^9}, {3.8788104664001303`*^9, 3.87881048935794*^9}, {
   3.87881054420468*^9, 3.8788105574852495`*^9}, {3.878810754670457*^9, 
   3.878810899034412*^9}, {3.8788109395226293`*^9, 3.878810963887312*^9}, {
   3.8788109940454874`*^9, 3.8788110060259085`*^9}, {3.878811061281786*^9, 
   3.87881107476298*^9}, {3.8788111076266904`*^9, 3.8788111837170773`*^9}, {
   3.878811239606757*^9, 3.878811243956408*^9}, {3.8788113684827757`*^9, 
   3.8788113686405573`*^9}, {3.8788114093732386`*^9, 
   3.8788114097007723`*^9}, {3.878811467651422*^9, 3.878811574873166*^9}, {
   3.878811622945057*^9, 3.878811628356985*^9}, 3.878811735281579*^9, {
   3.8788189187440696`*^9, 3.8788189595234056`*^9}, {3.8788195411066613`*^9, 
   3.8788195843637886`*^9}, {3.8788198171572676`*^9, 
   3.8788198805683904`*^9}, {3.878820311313772*^9, 3.8788204021273203`*^9}, 
   3.878820516790122*^9, {3.8788208772432165`*^9, 3.8788211311287546`*^9}, {
   3.878821340740493*^9, 3.878821356127261*^9}, {3.878821439590295*^9, 
   3.878821577731102*^9}, {3.8788216470420175`*^9, 3.87882175772369*^9}, {
   3.8788218032763352`*^9, 3.878821808416626*^9}, {3.87882214753004*^9, 
   3.8788221837113724`*^9}, {3.878822233958688*^9, 3.878822348053383*^9}, {
   3.878823158787571*^9, 3.878823190009628*^9}, {3.8788233114769034`*^9, 
   3.8788233379166555`*^9}, {3.878823532517912*^9, 3.8788235449480777`*^9}, {
   3.8788237188182154`*^9, 3.8788237202456274`*^9}, {3.8788242854764338`*^9, 
   3.8788243434684315`*^9}, {3.8788244892019014`*^9, 3.878824540215192*^9}, {
   3.878824603035872*^9, 3.8788246059588737`*^9}, {3.878824851321602*^9, 
   3.878824908064166*^9}, 3.878824983848871*^9, {3.878825635122387*^9, 
   3.8788256369384766`*^9}, {3.8788257392811937`*^9, 3.878825742888711*^9}, 
   3.878825786862177*^9, {3.8788258459724317`*^9, 3.8788260198774643`*^9}, {
   3.878826066589532*^9, 3.8788260704481916`*^9}, {3.8788263605519915`*^9, 
   3.878826370692564*^9}, {3.8788264140999947`*^9, 3.878826637717518*^9}, {
   3.878827085983261*^9, 3.8788270964799533`*^9}, {3.8788277494015656`*^9, 
   3.878827778672117*^9}, {3.8788278149450254`*^9, 3.878827818990183*^9}, {
   3.8788278529883127`*^9, 3.878827857199415*^9}, {3.878827990118927*^9, 
   3.8788280495009503`*^9}, {3.878828155505869*^9, 3.8788281566776266`*^9}, {
   3.8788282263995733`*^9, 3.878828255711153*^9}, {3.8788283196677074`*^9, 
   3.8788283218024373`*^9}, {3.878828361327389*^9, 3.8788284422542686`*^9}, {
   3.8788284747199965`*^9, 3.878828505268672*^9}, {3.878828849985392*^9, 
   3.8788288503558254`*^9}, {3.8788289484255457`*^9, 3.878828948763949*^9}, 
   3.878828993369676*^9, {3.8788290308474703`*^9, 3.878829044772683*^9}, {
   3.8788291705952263`*^9, 3.878829181854106*^9}, {3.878829452181219*^9, 
   3.878829482929735*^9}, {3.878829838489994*^9, 3.8788298646138115`*^9}, {
   3.878830067801591*^9, 3.878830069481227*^9}, 3.8788303299639473`*^9, {
   3.8788452296819134`*^9, 3.8788452362945604`*^9}},
 CellLabel->
  "In[1129]:=",ExpressionUUID->"1962bbff-1e91-484a-aee6-6a1ccd4b1276"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8788109459059467`*^9, 3.878810956112604*^9}, {
   3.878811003321074*^9, 3.8788110066054006`*^9}, 3.878811075454073*^9, {
   3.8788111246325045`*^9, 3.8788111572276697`*^9}, 3.8788111874124107`*^9, 
   3.8788112450065002`*^9, 3.8788113694048448`*^9, 3.878811410653552*^9, {
   3.8788114784227257`*^9, 3.8788115757141724`*^9}, 3.8788116295932627`*^9, 
   3.878811798378949*^9, 3.8788189199256525`*^9, 3.878818983484291*^9, 
   3.878819452945512*^9, 3.8788198956927533`*^9, 3.8788204040016317`*^9, 
   3.878820476077247*^9, 3.878820518316292*^9, 3.878821345704791*^9, 
   3.8788215858136544`*^9, {3.8788216667917023`*^9, 3.8788216901589174`*^9}, {
   3.8788217381225376`*^9, 3.8788217585261793`*^9}, 3.8788218118142185`*^9, {
   3.8788221507504497`*^9, 3.878822174710153*^9}, {3.87882225015296*^9, 
   3.8788223485989156`*^9}, 3.87882319094082*^9, 3.8788233386670065`*^9, 
   3.8788245449693246`*^9, 3.8788246065528*^9, 3.8788249921159706`*^9, 
   3.8788256375152173`*^9, 3.8788257452812347`*^9, {3.8788259954259095`*^9, 
   3.878826021273307*^9}, 3.8788260747728567`*^9, 3.878826720027182*^9, 
   3.8788270984906435`*^9, 3.8788278587089434`*^9, 3.8788280270176573`*^9, 
   3.878828157839327*^9, {3.8788282427322216`*^9, 3.8788282571467695`*^9}, {
   3.878828488164016*^9, 3.878828507832345*^9}, 3.8788288513344584`*^9, {
   3.8788289496399403`*^9, 3.8788289683501825`*^9}, {3.878829032338296*^9, 
   3.8788290455464177`*^9}, {3.878829159155707*^9, 3.8788291824072185`*^9}, 
   3.878829468961817*^9, 3.8788295616345253`*^9, {3.878829840563184*^9, 
   3.878829865278083*^9}, 3.8788300708661532`*^9, 3.878830666113402*^9, 
   3.878845254217204*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"3f4a770d-4472-4613-bf4d-9fbe0c16759f"],

Cell[BoxData[
 TemplateBox[{
  "ApplyCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"the gate 'non-trace-preserving Kraus map' \
accepts 1 or 2 targets, but 3 were passed. The qureg (id 309) has been \
restored to its prior state.\\\\\\\"\\\"}]\\)\"", 2, 1135, 327, 
   21685235695342253521, "Local", "QuEST`ApplyCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.878845254813264*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"5abaa10c-8780-4c27-aef5-250765489398"],

Cell[BoxData[
 TemplateBox[{
  "ApplyCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"the gate 'non-trace-preserving Kraus map' \
accepts 1 or 2 targets, but 3 were passed. The qureg (id 310) has been \
restored to its prior state.\\\\\\\"\\\"}]\\)\"", 2, 1135, 328, 
   21685235695342253521, "Local", "QuEST`ApplyCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8788452553583593`*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"38b91f89-2ce1-4229-b866-37c964a630c8"],

Cell[BoxData[
 TemplateBox[{
  "ApplyCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"the gate 'non-trace-preserving Kraus map' \
accepts 1 or 2 targets, but 3 were passed. The qureg (id 311) has been \
restored to its prior state.\\\\\\\"\\\"}]\\)\"", 2, 1135, 329, 
   21685235695342253521, "Local", "QuEST`ApplyCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8788452559691267`*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"86b8b3d1-f0e0-4292-9d93-6c479e4fa9e6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ApplyCircuit\\\", \
\\\"::\\\", \\\"error\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1135, 330, 21685235695342253521, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.878845255991723*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"793ea25f-4de9-46a3-b302-f8f0ec4c4504"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.8788260242948503`*^9, 3.878826077704665*^9, 3.878826724128051*^9, 
   3.8788271014771786`*^9, 3.878827858728876*^9, 3.8788280270339627`*^9, 
   3.878828157856582*^9, {3.878828242862069*^9, 3.878828257165872*^9}, {
   3.878828490027631*^9, 3.8788285104878197`*^9}, 3.878828854245502*^9, {
   3.8788289520236006`*^9, 3.8788289715219994`*^9}, {3.8788290353686466`*^9, 
   3.8788290485536995`*^9}, 3.878829161270862*^9, 3.878829374836862*^9, 
   3.8788295591988516`*^9, 3.8788297632454453`*^9, 3.8788298600437117`*^9, 
   3.8788298953531723`*^9, 3.878830264900552*^9, 3.878830863244752*^9, 
   3.8788452778858013`*^9},
 CellLabel->
  "Out[1135]=",ExpressionUUID->"90b86a6e-991e-4035-8874-92aa60390897"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"CreateQureg", "[", "9", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InitZeroState", "[", "\[Rho]", "]"}], ";", 
      RowBox[{"InputState", "=", 
       RowBox[{
        RowBox[{"KetList", "[", "6", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"XIndices", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", "InputState", "]"}], ",", "1"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Xs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"X", ",", 
           RowBox[{
            RowBox[{"XIndices", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "XIndices", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{"\[Rho]", ",", "Xs"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ApplyCircuit", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"ExtractCircuit", "[", 
         RowBox[{"GetCircuitSchedule", "[", 
          RowBox[{
           RowBox[{"GroverOracle6D3A", "[", 
            RowBox[{"InputState", "[", "1", "]"}], "]"}], 
           RowBox[{"(*", "C5XTranspiled", "*)"}], 
           RowBox[{"(*", "C5ZTrans", "*)"}], ",", "RydDev", ",", 
           RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"GetAmp", "[", 
        RowBox[{"\[Rho]", ",", 
         RowBox[{"i", "-", "1"}], ",", 
         RowBox[{"i", "-", "1"}]}], "]"}], "*)"}], 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"GetQuregMatrix", "[", "\[Rho]", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          SuperscriptBox["2", "6"]}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "64"}], "}"}]}], "]"}], "//", 
   "MatrixForm"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"C5XCircCCZ", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HTrans", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"0", ",", "6", ",", "1"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"8", ",", "4", ",", "5"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"7", ",", "8", ",", "3"}], "]"}], ",", 
        RowBox[{"ToffRyd", "[", 
         RowBox[{"6", ",", "7", ",", "2"}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HTrans", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "}"}], 
      "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DestroyAllQuregs", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.878802221554352*^9, 3.878802323642203*^9}, 
   3.8788025115891933`*^9, {3.87880254689299*^9, 3.878802622066284*^9}, {
   3.8788026687082586`*^9, 3.87880270031855*^9}, {3.878802730862669*^9, 
   3.878802873086093*^9}, {3.878803212378674*^9, 3.8788032333989105`*^9}, {
   3.878803364143341*^9, 3.8788033761414423`*^9}, {3.878803408119424*^9, 
   3.8788034320679584`*^9}, {3.878803493376949*^9, 3.8788034971436124`*^9}, {
   3.878803543047517*^9, 3.8788035584731274`*^9}, {3.8788037038307114`*^9, 
   3.878803706141887*^9}, {3.8788037487976136`*^9, 3.878803755063692*^9}, {
   3.8788038493757596`*^9, 3.878803883974285*^9}, {3.8788041450444794`*^9, 
   3.8788042271379757`*^9}, {3.878804879193271*^9, 3.8788049414311333`*^9}, {
   3.878805002000803*^9, 3.8788050176798925`*^9}, {3.878805083097664*^9, 
   3.8788050882404575`*^9}, {3.8788053753003826`*^9, 
   3.8788054581146145`*^9}, {3.8788190549006777`*^9, 3.878819068693639*^9}, {
   3.878819106925703*^9, 3.878819121494232*^9}, {3.878819215219217*^9, 
   3.8788192163431244`*^9}, {3.878819911680852*^9, 3.878819919345724*^9}, {
   3.878819975690611*^9, 3.878819985743647*^9}, {3.8788227195309567`*^9, 
   3.8788227568520093`*^9}, 3.878822788045495*^9, {3.8788228826463056`*^9, 
   3.878822900441512*^9}, {3.8788229865868983`*^9, 3.878822994588188*^9}, {
   3.8788230843788147`*^9, 3.878823100947156*^9}, {3.8788232245218163`*^9, 
   3.878823250419841*^9}, {3.8788233589101567`*^9, 3.87882336671238*^9}, {
   3.878823585379568*^9, 3.878823605301406*^9}, {3.8788267750437126`*^9, 
   3.8788268102291336`*^9}, {3.878826945835236*^9, 3.8788269464580884`*^9}, {
   3.8788270036754975`*^9, 3.8788270038588023`*^9}, {3.878827112028558*^9, 
   3.8788271395496283`*^9}, 3.8788271806417365`*^9, {3.8788280659864645`*^9, 
   3.87882808110124*^9}, {3.8788285357271805`*^9, 3.8788285431143923`*^9}, 
   3.8788286940627136`*^9, {3.878828779149302*^9, 3.878828815870755*^9}},
 CellLabel->
  "In[948]:=",ExpressionUUID->"b9545200-9e77-444a-a18a-70ae90033eb9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.878805442936878*^9, 3.8788054587745657`*^9}, 
   3.878819028824113*^9, 3.8788190601325135`*^9, 3.878819224032784*^9, 
   3.8788194595137167`*^9, 3.878819920661401*^9, 3.8788204173560877`*^9, 
   3.8788204873620043`*^9, 3.87882053170438*^9, 3.8788227574953394`*^9, 
   3.87882278877404*^9, 3.8788229080495973`*^9, 3.87882299661082*^9, {
   3.8788230908402944`*^9, 3.878823101995371*^9}, {3.8788231998094463`*^9, 
   3.8788232514338226`*^9}, {3.878823346522689*^9, 3.878823367658433*^9}, 
   3.8788236063304143`*^9, 3.8788245560957537`*^9, 3.878824614574078*^9, 
   3.87882500085036*^9, 3.8788256487268305`*^9, 3.878825756440468*^9, 
   3.878826034272114*^9, 3.878826099730114*^9, 3.8788267343930655`*^9, {
   3.878826782760067*^9, 3.87882682221217*^9}, 3.878826965721668*^9, 
   3.878827023923131*^9, {3.878827112763313*^9, 3.878827140298235*^9}, 
   3.878827182699107*^9, 3.8788278691422377`*^9, {3.8788280710956235`*^9, 
   3.878828081828672*^9}, 3.878828178666122*^9, 3.878828264032425*^9, {
   3.8788285221181126`*^9, 3.878828544747903*^9}, 3.8788286959579096`*^9, {
   3.8788287830559497`*^9, 3.878828816678768*^9}},
 CellLabel->
  "Out[948]=",ExpressionUUID->"96d22694-a8ea-4ef6-917f-e7503af78d89"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1.0000000000000002`", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1.0000000000000002`", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1.0000000000000002`", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1.0000000000000002`", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1.0000000000000002`", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1.0000000000000002`", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1.0000000000000002`", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.878805442936878*^9, 3.8788054587745657`*^9}, 
   3.878819028824113*^9, 3.8788190601325135`*^9, 3.878819224032784*^9, 
   3.8788194595137167`*^9, 3.878819920661401*^9, 3.8788204173560877`*^9, 
   3.8788204873620043`*^9, 3.87882053170438*^9, 3.8788227574953394`*^9, 
   3.87882278877404*^9, 3.8788229080495973`*^9, 3.87882299661082*^9, {
   3.8788230908402944`*^9, 3.878823101995371*^9}, {3.8788231998094463`*^9, 
   3.8788232514338226`*^9}, {3.878823346522689*^9, 3.878823367658433*^9}, 
   3.8788236063304143`*^9, 3.8788245560957537`*^9, 3.878824614574078*^9, 
   3.87882500085036*^9, 3.8788256487268305`*^9, 3.878825756440468*^9, 
   3.878826034272114*^9, 3.878826099730114*^9, 3.8788267343930655`*^9, {
   3.878826782760067*^9, 3.87882682221217*^9}, 3.878826965721668*^9, 
   3.878827023923131*^9, {3.878827112763313*^9, 3.878827140298235*^9}, 
   3.878827182699107*^9, 3.8788278691422377`*^9, {3.8788280710956235`*^9, 
   3.878828081828672*^9}, 3.878828178666122*^9, 3.878828264032425*^9, {
   3.8788285221181126`*^9, 3.878828544747903*^9}, 3.8788286959579096`*^9, {
   3.8788287830559497`*^9, 3.878828819905058*^9}},
 CellLabel->
  "Out[949]//MatrixForm=",ExpressionUUID->"4881ae54-8dcd-40ab-939e-\
6b304cc586f0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.878805058622574*^9, {3.8788051366887207`*^9, 3.878805155580985*^9}, {
   3.878805186182866*^9, 3.878805227150626*^9}, 3.878805294541395*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"9c1be839-151f-421a-a46b-72ed11081dbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QuEST`*"}]], "Input",
 CellChangeTimes->{{3.87880396117356*^9, 3.8788039675288477`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"babcee43-5446-44ee-be0e-914e239f5132"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["QuEST`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["QuEST`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ApplyCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ApplyCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcProbOfAllOutcomes", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcProbOfAllOutcomes", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateLocalQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateLocalQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetPauliSumFromCoeffs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetPauliSumFromCoeffs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "MixTwoQubitDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ApplyPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcProbOfOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcProbOfOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "MixTwoQubitDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPhaseFunc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ApplyPhaseFunc", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcPurity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcPurity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Operator", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "Operator", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyQFT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ApplyQFT", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcQuregDerivs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcQuregDerivs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateRemoteQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateRemoteQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetUnsupportedGates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetUnsupportedGates", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "PlotDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcCircuitMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcCircuitMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcTotalProb", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcTotalProb", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "DestroyAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitClassicalState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InitClassicalState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "SetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcDensityInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CheckCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CheckCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "DestroyQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPlusState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InitPlusState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "SetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcDensityInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CheckDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CheckDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "DestroyQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPureState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InitPureState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetWeightedQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "SetWeightedQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcExpecPauliProd", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Circuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "Circuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "DrawCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitStateFromAmps", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InitStateFromAmps", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimplifyPaulis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "SimplifyPaulis", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcExpecPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ClearRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ClearRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuitTopology", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "DrawCircuitTopology", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitZeroState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InitZeroState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StartRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "StartRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcFidelity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcFidelity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CloneQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CloneQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExtractCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ExtractCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InsertCircuitNoise", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "InsertCircuitNoise", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StopRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "StopRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcHilbertSchmidtDistance", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcHilbertSchmidtDistance", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CollapseToOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CollapseToOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IsDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "IsDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ViewCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateDensityQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDamping", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "MixDamping", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "ViewDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateDensityQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitColumns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetCircuitColumns", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "MixDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["CalcPauliSumMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CalcPauliSumMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDownloadedQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "CreateDownloadedQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "GetCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba", {
                   "MixDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8788039680710163`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"f4e518d4-eae3-4fb6-9411-c9c74a55ff7a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetQuregMatrix[qureg] returns the state-vector or \
density matrix associated with the given qureg.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "GetQuregMatrix", "[", "QuEST`Private`qureg_Integer", 
                    "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`data", "=", 
                    
                    RowBox[{"QuEST`Private`GetQuregMatrixInternal", "[", 
                    "QuEST`Private`qureg", "]"}]}], "}"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"QuEST`Private`data", "===", "$Failed"}], "||", 
                    RowBox[{"QuEST`Private`data", "===", "$Aborted"}]}], ",", 
                    "QuEST`Private`data", ",", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "2",
                     "\[RightDoubleBracket]"}], "===", "0"}], ",", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#2"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "3",
                     "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "4",
                     "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "2",
                     "\[RightDoubleBracket]"}], "===", "1"}], ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"ArrayReshape", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "#2"}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "3",
                     "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "4",
                     "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SuperscriptBox["2", 
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}]], ",", 
                    SuperscriptBox["2", 
                    
                    RowBox[{"QuEST`Private`data", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}]]}], "}"}]}], "]"}], "]"}]}], 
                    "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GetQuregMatrix", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", "GetQuregMatrix", 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`GetQuregMatrix\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetQuregMatrix[qureg] returns the state-vector or \
density matrix associated with the given qureg.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "GetQuregMatrix[qureg] returns the state-vector or density matrix \
associated with the given qureg.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`GetQuregMatrix, {QuEST`GetQuregMatrix[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]]] :> 
       With[{QuEST`Private`data = 
          QuEST`Private`GetQuregMatrixInternal[QuEST`Private`qureg]}, 
         Which[
          Or[QuEST`Private`data === $Failed, QuEST`Private`data === $Aborted],
           QuEST`Private`data, Part[QuEST`Private`data, 2] === 0, 
          MapThread[# + I #2& , {
            Part[QuEST`Private`data, 3], 
            Part[QuEST`Private`data, 4]}], Part[QuEST`Private`data, 2] === 1, 
          Transpose[
           ArrayReshape[
            MapThread[# + I #2& , {
              Part[QuEST`Private`data, 3], 
              Part[QuEST`Private`data, 4]}], {
            2^Part[QuEST`Private`data, 1], 2^Part[QuEST`Private`data, 1]}]]]],
        QuEST`GetQuregMatrix[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`GetQuregMatrix]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "QuEST`GetQuregMatrix"], False]]], "Print",
 CellTags->
  "Info-8007e399-42ea-494f-b894-fe9f4ac140ba",ExpressionUUID->"4c9520e5-88a5-\
4e4f-a435-443b73ee0f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Round"}]], "Input",
 CellChangeTimes->{{3.8788211379799547`*^9, 3.8788211505481553`*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"915e915d-5725-4a8f-bf0c-e6fb81ecd3de"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Round",
              ButtonNote->"paclet:ref/Round"],
             "\"paclet:ref/Round\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Round\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the integer closest to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Round\\\", \\\"[\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
rounds to the nearest multiple of \\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Round", 
                    "paclet:ref/Round", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Round.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Round.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Round\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                
                ImageSizeCache->{
                 11.700000000000001`, {4., 7.700000000000001}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                
                ImageSizeCache->{
                 11.700000000000001`, {4., 7.700000000000001}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Round",
              ButtonNote->"paclet:ref/Round"],
             "\"paclet:ref/Round\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Round\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the integer closest to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Round\\\", \\\"[\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
rounds to the nearest multiple of \\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{9., {3., 6.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{9., {3., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Round\", \"[\", StyleBox[\"x\", \"TI\"], \"]\"}]\) gives \
the integer closest to \!\(\*StyleBox[\"x\", \"TI\"]\). \n\
\!\(\*RowBox[{\"Round\", \"[\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"a\", \"TI\"]}], \"]\"}]\) rounds to the nearest multiple of \
\!\(\*StyleBox[\"a\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Round", "Web" -> 
      "http://reference.wolfram.com/language/ref/Round.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction, Protected},
     "FullName" -> "System`Round"], False]]], "Output",
 CellChangeTimes->{{3.8788211425754423`*^9, 3.87882115121856*^9}},
 CellLabel->
  "Out[434]=",ExpressionUUID->"f40fe84e-47a6-4f7e-9104-73c59d34aab1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Sqrt", "[", "64", "]"}]], "Input",
 CellChangeTimes->{{3.878821321979898*^9, 3.8788213276509743`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"e4366d9d-0391-4791-bc7a-3aa21bcf0229"],

Cell["", "Text",
 CellChangeTimes->{{3.878844706214016*^9, 3.878844725397047*^9}, {
  3.8788449812183*^9, 
  3.8788450168117113`*^9}},ExpressionUUID->"de183628-8103-4e2e-92e5-\
9f0f718f999f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TGate", "[", "t_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["Rx", "t"], "[", 
     RowBox[{"Pi", "/", "2"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Ry", "t"], "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], "]"}], ",", 
    RowBox[{
     SubscriptBox["Rx", "t"], "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tdg", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "t"], "[", 
      RowBox[{"Pi", "/", "2"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "t"], "[", 
      RowBox[{"Pi", "/", "4"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "t"], "[", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CCZDecomp", "[", 
     RowBox[{"t_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "0.09065988720074536"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "t"], "[", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"-", "Pi"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c2"], "[", 
       RowBox[{"-", "Pi"}], "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"t", ",", "c1"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "0.800360109933159"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "t"], "[", "1.372292382481866", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", "1.63614359593572", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c1"], "[", 
       RowBox[{"-", "Pi"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"-", "Pi"}], "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"t", ",", "c2"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", "2.3583", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "t"], "[", "0.82493", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "2.7641"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c2"], "[", "Pi", "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"t", ",", "c1"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "0.12796"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "t"], "[", "0.68257", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "2.5412"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c1"], "[", 
       RowBox[{"Pi", "/", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"t", ",", "c2"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", 
       RowBox[{"-", "2.7055"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "t"], "[", "2.2467", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "t"], "[", "2.211", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c2"], "[", 
       FractionBox[
        RowBox[{"-", "\[Pi]"}], "2"], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c2"], "[", 
       RowBox[{"Pi", "/", "2"}], "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"c1", ",", "c2"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       FractionBox["\[Pi]", "2"], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c1"], "[", 
       RowBox[{"Pi", "/", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"Pi", "/", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c2"], "[", 
       RowBox[{"Pi", "/", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c2"], "[", 
       RowBox[{"Pi", "/", "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c2"], "[", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ",", 
      SubscriptBox["CZG", 
       RowBox[{"c1", ",", "c2"}]], ",", 
      RowBox[{
       SubscriptBox["Rx", "c1"], "[", 
       RowBox[{"-", "Pi"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "c2"], "[", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "4"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "c2"], "[", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DrawCircuit", "[", 
   RowBox[{"ExtractCircuit", "[", 
    RowBox[{"GetCircuitSchedule", "[", 
     RowBox[{
      RowBox[{"CCZDecomp", "[", 
       RowBox[{"0", ",", "1", ",", "2"}], "]"}], ",", "RydDev", ",", 
      RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvXaGSIb3szeOU46U5IHoFdPnFoNokXUB7SDabrne
RBCtYDZ7OYj2s/v9BETbdk36CKLvnLtj4AOkZ0Y1mIBortff+0C0zwTtbSB6
kqjVbhDdsdnkGIh2YhE+DaKn7v36EkSLVHi8B9F/ZneB6Yk3D7H6AumXSWvZ
QfSSxp+yIPpMb4sCiLad4+8Dok+9uO4HoqfvqZsKoi+rbX8Moid/XfcCRLdO
OvYBRC/dN5/RD0jHmd3mBtHcC0zUQHTESnd1EN1Q56kLon1cGMxAtFPMtrkg
enLjczDNU3T4GYhmcPoCph8xz/L2B7lnYkk8iAYAjeuyng==
  "],ExpressionUUID->"89271296-594f-49bf-92cd-2b773ab2bef7"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
    1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
      LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
      LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
      LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
      LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
      LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
      LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
      LineBox[{{4, 2.5}, {5, 2.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
      LineBox[{{5, 1.5}, {6, 1.5}}], 
      LineBox[{{5, 2.5}, {6, 2.5}}]}, {{LineBox[{{6.5, 0.5}, {7.5, 0.5}}], 
       LineBox[{{6.5, 1.5}, {7.5, 1.5}}], LineBox[{{6.5, 2.5}, {7.5, 2.5}}]}, 
      LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{7, 0.5}, {8, 0.5}}]}, {
      LineBox[{{8, 0.5}, {9, 0.5}}], LineBox[{{8, 1.5}, {9, 1.5}}], 
      LineBox[{{8, 2.5}, {9, 2.5}}]}, {LineBox[{{9, 0.5}, {10, 0.5}}], 
      LineBox[{{9, 1.5}, {10, 1.5}}], LineBox[{{9, 2.5}, {10, 2.5}}]}, {
      LineBox[{{10, 0.5}, {11, 0.5}}], LineBox[{{10, 1.5}, {11, 1.5}}], 
      LineBox[{{10, 2.5}, {11, 2.5}}]}, {LineBox[{{11, 0.5}, {12, 0.5}}], 
      LineBox[{{11, 1.5}, {12, 1.5}}], LineBox[{{11, 2.5}, {12, 2.5}}]}, {
      LineBox[{{12, 0.5}, {13, 0.5}}], LineBox[{{12, 1.5}, {13, 1.5}}], 
      LineBox[{{12, 2.5}, {13, 2.5}}]}, {LineBox[{{13, 0.5}, {14, 0.5}}], 
      LineBox[{{13, 1.5}, {14, 1.5}}], LineBox[{{13, 2.5}, {14, 2.5}}]}, {
      LineBox[{{14, 0.5}, {15, 0.5}}], LineBox[{{14, 1.5}, {15, 1.5}}], 
      LineBox[{{14, 2.5}, {15, 2.5}}]}, {{LineBox[{{15.5, 0.5}, {16.5, 0.5}}],
        LineBox[{{15.5, 1.5}, {16.5, 1.5}}], 
       LineBox[{{15.5, 2.5}, {16.5, 2.5}}]}, LineBox[{{15, 0.5}, {16, 0.5}}], 
      LineBox[{{16, 0.5}, {17, 0.5}}]}, {LineBox[{{17, 0.5}, {18, 0.5}}], 
      LineBox[{{17, 1.5}, {18, 1.5}}], LineBox[{{17, 2.5}, {18, 2.5}}]}, {
      LineBox[{{18, 0.5}, {19, 0.5}}], LineBox[{{18, 1.5}, {19, 1.5}}], 
      LineBox[{{18, 2.5}, {19, 2.5}}]}, {LineBox[{{19, 0.5}, {20, 0.5}}], 
      LineBox[{{19, 1.5}, {20, 1.5}}], LineBox[{{19, 2.5}, {20, 2.5}}]}, {
      LineBox[{{20, 0.5}, {21, 0.5}}], LineBox[{{20, 1.5}, {21, 1.5}}], 
      LineBox[{{20, 2.5}, {21, 2.5}}]}, {LineBox[{{21, 0.5}, {22, 0.5}}], 
      LineBox[{{21, 1.5}, {22, 1.5}}], LineBox[{{21, 2.5}, {22, 2.5}}]}, {
      LineBox[{{22, 0.5}, {23, 0.5}}], LineBox[{{22, 1.5}, {23, 1.5}}], 
      LineBox[{{22, 2.5}, {23, 2.5}}]}, {LineBox[{{23, 0.5}, {24, 0.5}}], 
      LineBox[{{23, 1.5}, {24, 1.5}}], LineBox[{{23, 2.5}, {24, 2.5}}]}, {
      LineBox[{{24, 0.5}, {25, 0.5}}], LineBox[{{24, 1.5}, {25, 1.5}}], 
      LineBox[{{24, 2.5}, {25, 2.5}}]}, {LineBox[{{25, 0.5}, {26, 0.5}}], 
      LineBox[{{25, 1.5}, {26, 1.5}}], LineBox[{{25, 2.5}, {26, 2.5}}]}}, {{
      RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {0.5, 0.5}]}, {
      RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {0.5, 1.5}]}, {
      RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {0.5, 2.5}]}, {
      RectangleBox[{1.1, 0.1}, {1.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {1.5, 0.5}]}, {
      RectangleBox[{2.1, 0.1}, {2.9, 1.9}], 
      InsetBox["\<\"U\"\>", {2.5, 1.}]}, {
      RectangleBox[{3.1, 0.1}, {3.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {3.5, 0.5}]}, {
      RectangleBox[{3.1, 1.1}, {3.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {3.5, 1.5}]}, {
      RectangleBox[{4.1, 0.1}, {4.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {4.5, 0.5}]}, {
      RectangleBox[{4.1, 1.1}, {4.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {4.5, 1.5}]}, {
      RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {5.5, 0.5}]}, {{{LineBox[{{6, 2.5}, {6.1, 2.5}}],
         LineBox[{{6.1, 2.5}, {6.4, 1.5}}], 
        LineBox[{{6.4, 1.5}, {6.5, 1.5}}]}, {LineBox[{{6, 1.5}, {6.1, 1.5}}], 
        LineBox[{{6.1, 1.5}, {6.4, 2.5}}], 
        LineBox[{{6.4, 2.5}, {6.5, 2.5}}]}}, {
       RectangleBox[{6.6, 0.1}, {7.4, 1.9}], 
       InsetBox["\<\"U\"\>", {7., 1.}]}, {{LineBox[{{7.5, 2.5}, {7.6, 2.5}}], 
        LineBox[{{7.6, 2.5}, {7.9, 1.5}}], 
        LineBox[{{7.9, 1.5}, {8., 1.5}}]}, {LineBox[{{7.5, 1.5}, {7.6, 1.5}}],
         LineBox[{{7.6, 1.5}, {7.9, 2.5}}], 
        LineBox[{{7.9, 2.5}, {8., 2.5}}]}}}, {
      RectangleBox[{8.1, 0.1}, {8.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {8.5, 0.5}]}, {
      RectangleBox[{8.1, 2.1}, {8.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {8.5, 2.5}]}, {
      RectangleBox[{9.1, 0.1}, {9.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {9.5, 0.5}]}, {
      RectangleBox[{10.1, 0.1}, {10.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {10.5, 0.5}]}, {
      RectangleBox[{11.1, 0.1}, {11.9, 1.9}], 
      InsetBox["\<\"U\"\>", {11.5, 1.}]}, {
      RectangleBox[{12.1, 0.1}, {12.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {12.5, 0.5}]}, {
      RectangleBox[{12.1, 1.1}, {12.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {12.5, 1.5}]}, {
      RectangleBox[{13.1, 0.1}, {13.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {13.5, 0.5}]}, {
      RectangleBox[{13.1, 1.1}, {13.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {13.5, 1.5}]}, {
      RectangleBox[{14.1, 0.1}, {14.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {14.5, 0.5}]}, {
      RectangleBox[{14.1, 1.1}, {14.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {14.5, 1.5}]}, {{{
        LineBox[{{15, 2.5}, {15.1, 2.5}}], 
        LineBox[{{15.1, 2.5}, {15.4, 1.5}}], 
        LineBox[{{15.4, 1.5}, {15.5, 1.5}}]}, {
        LineBox[{{15, 1.5}, {15.1, 1.5}}], 
        LineBox[{{15.1, 1.5}, {15.4, 2.5}}], 
        LineBox[{{15.4, 2.5}, {15.5, 2.5}}]}}, {
       RectangleBox[{15.6, 0.1}, {16.4, 1.9}], 
       InsetBox["\<\"U\"\>", {16., 1.}]}, {{
        LineBox[{{16.5, 2.5}, {16.6, 2.5}}], 
        LineBox[{{16.6, 2.5}, {16.9, 1.5}}], 
        LineBox[{{16.9, 1.5}, {17., 1.5}}]}, {
        LineBox[{{16.5, 1.5}, {16.6, 1.5}}], 
        LineBox[{{16.6, 1.5}, {16.9, 2.5}}], 
        LineBox[{{16.9, 2.5}, {17., 2.5}}]}}}, {
      RectangleBox[{17.1, 0.1}, {17.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {17.5, 0.5}]}, {
      RectangleBox[{17.1, 2.1}, {17.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {17.5, 2.5}]}, {
      RectangleBox[{18.1, 0.1}, {18.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {18.5, 0.5}]}, {
      RectangleBox[{18.1, 2.1}, {18.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {18.5, 2.5}]}, {
      RectangleBox[{19.1, 0.1}, {19.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {19.5, 0.5}]}, {
      RectangleBox[{19.1, 1.1}, {19.9, 2.9}], 
      InsetBox["\<\"U\"\>", {19.5, 2.}]}, {
      RectangleBox[{20.1, 1.1}, {20.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {20.5, 1.5}]}, {
      RectangleBox[{20.1, 2.1}, {20.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {20.5, 2.5}]}, {
      RectangleBox[{21.1, 1.1}, {21.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {21.5, 1.5}]}, {
      RectangleBox[{21.1, 2.1}, {21.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {21.5, 2.5}]}, {
      RectangleBox[{22.1, 1.1}, {22.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {22.5, 1.5}]}, {
      RectangleBox[{22.1, 2.1}, {22.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {22.5, 2.5}]}, {
      RectangleBox[{23.1, 1.1}, {23.9, 2.9}], 
      InsetBox["\<\"U\"\>", {23.5, 2.}]}, {
      RectangleBox[{24.1, 1.1}, {24.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {24.5, 1.5}]}, {
      RectangleBox[{24.1, 2.1}, {24.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {24.5, 2.5}]}, {
      RectangleBox[{25.1, 2.1}, {25.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {25.5, 2.5}]}}},
   ImageSize->810,
   PlotRangePadding->None],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8788422294911456`*^9, 3.878842247303346*^9}, 
   3.8788425201838655`*^9, 3.878842683123412*^9, {3.878842769840884*^9, 
   3.8788428006943245`*^9}, {3.8788436194119687`*^9, 3.8788436319879084`*^9}, 
   3.8788442173042192`*^9},
 CellLabel->
  "Out[1128]//MatrixForm=",ExpressionUUID->"5b36f5a9-0752-4742-a301-\
38661822bda7"]
}, Open  ]],

Cell[TextData[StyleBox["", "Code"]], "Text",
 CellChangeTimes->{{3.87884103424277*^9, 3.878841036988541*^9}, 
   3.8788411116070967`*^9},ExpressionUUID->"3d237330-fd1e-4387-8110-\
b63c14eaeba2"],

Cell["", "Text",
 CellChangeTimes->{{3.878841107576152*^9, 
  3.8788411097900553`*^9}},ExpressionUUID->"187070a4-67b5-49bf-be4e-\
16febca488cd"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878837056643637*^9, 3.8788371076489964`*^9}, {
   3.8788371489247627`*^9, 3.87883730652125*^9}, {3.8788373854579153`*^9, 
   3.878837564850357*^9}, {3.8788380558513556`*^9, 3.878838156579375*^9}, {
   3.8788386629002514`*^9, 3.8788386920110593`*^9}, {3.8788394157474413`*^9, 
   3.8788397293613644`*^9}, {3.878839769815133*^9, 3.8788398576469154`*^9}, {
   3.8788398965942698`*^9, 3.8788401436793923`*^9}, {3.878840186264658*^9, 
   3.878840188331541*^9}, {3.8788403660890584`*^9, 3.878840381418324*^9}, {
   3.8788405597970753`*^9, 3.878840580142309*^9}, {3.878840930487822*^9, 
   3.878840986449515*^9}, {3.878841122270835*^9, 3.878841211376563*^9}, 
   3.878841259468068*^9, 3.878841484854566*^9},
 CellLabel->
  "In[1106]:=",ExpressionUUID->"b46756ff-2ca5-4a40-a000-61995a1b6303"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", "1.981`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", "2.6423`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "1"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "3.0061`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", "2.702`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "1"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", "2.7048`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.89527`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", "0.92944`", "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.93891`", "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"1", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"1", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}]}], "}"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8788399080541286`*^9, 3.878839976566265*^9, {3.8788401354712315`*^9, 
   3.878840144630389*^9}, 3.878840188946018*^9, {3.878840290723073*^9, 
   3.87884031204215*^9}},
 CellLabel->
  "During evaluation of \
In[1077]:=",ExpressionUUID->"2aa13f54-2023-47db-bf99-72758920a94b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", "1.981`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", "2.6423`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "1"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "3.0061`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox[
     RowBox[{"Ry", "\[LineSeparator]"}], "2"], "[", "2.702`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "1"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", "2.7048`"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", "0.89527`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", "0.92944`", "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"0", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "0"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "0"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", "0.93891`", "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"1", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   SubscriptBox["CZG", 
    RowBox[{"1", ",", "2"}]], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Ry", "1"], "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", 
    RowBox[{"-", 
     FractionBox["\[Pi]", "2"]}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "2"], "[", 
    FractionBox["\[Pi]", "2"], "]"}]}], "}"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8788399080541286`*^9, 3.878839976566265*^9, {3.8788401354712315`*^9, 
   3.878840144630389*^9}, 3.878840188946018*^9, {3.878840290723073*^9, 
   3.8788402917581205`*^9}},ExpressionUUID->"380897b2-8a14-4146-b501-\
e846295a109e"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
    1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
      LineBox[{{0, 2.5}, {1, 2.5}}]}, {LineBox[{{1, 0.5}, {2, 0.5}}], 
      LineBox[{{1, 1.5}, {2, 1.5}}], LineBox[{{1, 2.5}, {2, 2.5}}]}, {
      LineBox[{{2, 0.5}, {3, 0.5}}], LineBox[{{2, 1.5}, {3, 1.5}}], 
      LineBox[{{2, 2.5}, {3, 2.5}}]}, {LineBox[{{3, 0.5}, {4, 0.5}}], 
      LineBox[{{3, 1.5}, {4, 1.5}}], LineBox[{{3, 2.5}, {4, 2.5}}]}, {
      LineBox[{{4, 0.5}, {5, 0.5}}], LineBox[{{4, 1.5}, {5, 1.5}}], 
      LineBox[{{4, 2.5}, {5, 2.5}}]}, {LineBox[{{5, 0.5}, {6, 0.5}}], 
      LineBox[{{5, 1.5}, {6, 1.5}}], 
      LineBox[{{5, 2.5}, {6, 2.5}}]}, {{LineBox[{{6.5, 0.5}, {7.5, 0.5}}], 
       LineBox[{{6.5, 1.5}, {7.5, 1.5}}], LineBox[{{6.5, 2.5}, {7.5, 2.5}}]}, 
      LineBox[{{6, 0.5}, {7, 0.5}}], LineBox[{{7, 0.5}, {8, 0.5}}]}, {
      LineBox[{{8, 0.5}, {9, 0.5}}], LineBox[{{8, 1.5}, {9, 1.5}}], 
      LineBox[{{8, 2.5}, {9, 2.5}}]}, {LineBox[{{9, 0.5}, {10, 0.5}}], 
      LineBox[{{9, 1.5}, {10, 1.5}}], LineBox[{{9, 2.5}, {10, 2.5}}]}, {
      LineBox[{{10, 0.5}, {11, 0.5}}], LineBox[{{10, 1.5}, {11, 1.5}}], 
      LineBox[{{10, 2.5}, {11, 2.5}}]}, {LineBox[{{11, 0.5}, {12, 0.5}}], 
      LineBox[{{11, 1.5}, {12, 1.5}}], LineBox[{{11, 2.5}, {12, 2.5}}]}, {
      LineBox[{{12, 0.5}, {13, 0.5}}], LineBox[{{12, 1.5}, {13, 1.5}}], 
      LineBox[{{12, 2.5}, {13, 2.5}}]}, {LineBox[{{13, 0.5}, {14, 0.5}}], 
      LineBox[{{13, 1.5}, {14, 1.5}}], LineBox[{{13, 2.5}, {14, 2.5}}]}, {
      LineBox[{{14, 0.5}, {15, 0.5}}], LineBox[{{14, 1.5}, {15, 1.5}}], 
      LineBox[{{14, 2.5}, {15, 2.5}}]}, {{LineBox[{{15.5, 0.5}, {16.5, 0.5}}],
        LineBox[{{15.5, 1.5}, {16.5, 1.5}}], 
       LineBox[{{15.5, 2.5}, {16.5, 2.5}}]}, LineBox[{{15, 0.5}, {16, 0.5}}], 
      LineBox[{{16, 0.5}, {17, 0.5}}]}, {LineBox[{{17, 0.5}, {18, 0.5}}], 
      LineBox[{{17, 1.5}, {18, 1.5}}], LineBox[{{17, 2.5}, {18, 2.5}}]}, {
      LineBox[{{18, 0.5}, {19, 0.5}}], LineBox[{{18, 1.5}, {19, 1.5}}], 
      LineBox[{{18, 2.5}, {19, 2.5}}]}, {LineBox[{{19, 0.5}, {20, 0.5}}], 
      LineBox[{{19, 1.5}, {20, 1.5}}], LineBox[{{19, 2.5}, {20, 2.5}}]}, {
      LineBox[{{20, 0.5}, {21, 0.5}}], LineBox[{{20, 1.5}, {21, 1.5}}], 
      LineBox[{{20, 2.5}, {21, 2.5}}]}, {LineBox[{{21, 0.5}, {22, 0.5}}], 
      LineBox[{{21, 1.5}, {22, 1.5}}], LineBox[{{21, 2.5}, {22, 2.5}}]}, {
      LineBox[{{22, 0.5}, {23, 0.5}}], LineBox[{{22, 1.5}, {23, 1.5}}], 
      LineBox[{{22, 2.5}, {23, 2.5}}]}, {LineBox[{{23, 0.5}, {24, 0.5}}], 
      LineBox[{{23, 1.5}, {24, 1.5}}], LineBox[{{23, 2.5}, {24, 2.5}}]}, {
      LineBox[{{24, 0.5}, {25, 0.5}}], LineBox[{{24, 1.5}, {25, 1.5}}], 
      LineBox[{{24, 2.5}, {25, 2.5}}]}, {LineBox[{{25, 0.5}, {26, 0.5}}], 
      LineBox[{{25, 1.5}, {26, 1.5}}], LineBox[{{25, 2.5}, {26, 2.5}}]}, {
      LineBox[{{26, 0.5}, {27, 0.5}}], LineBox[{{26, 1.5}, {27, 1.5}}], 
      LineBox[{{26, 2.5}, {27, 2.5}}]}}, {{
      RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {0.5, 1.5}]}, {
      RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {0.5, 2.5}]}, {
      RectangleBox[{1.1, 1.1}, {1.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {1.5, 1.5}]}, {
      RectangleBox[{1.1, 2.1}, {1.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {1.5, 2.5}]}, {
      RectangleBox[{2.1, 0.1}, {2.9, 1.9}], 
      InsetBox["\<\"U\"\>", {2.5, 1.}]}, {
      RectangleBox[{3.1, 0.1}, {3.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {3.5, 0.5}]}, {
      RectangleBox[{3.1, 1.1}, {3.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {3.5, 1.5}]}, {
      RectangleBox[{4.1, 0.1}, {4.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {4.5, 0.5}]}, {
      RectangleBox[{4.1, 1.1}, {4.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {4.5, 1.5}]}, {
      RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {5.5, 0.5}]}, {
      RectangleBox[{5.1, 1.1}, {5.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {5.5, 1.5}]}, {{{LineBox[{{6, 2.5}, {6.1, 2.5}}],
         LineBox[{{6.1, 2.5}, {6.4, 1.5}}], 
        LineBox[{{6.4, 1.5}, {6.5, 1.5}}]}, {LineBox[{{6, 1.5}, {6.1, 1.5}}], 
        LineBox[{{6.1, 1.5}, {6.4, 2.5}}], 
        LineBox[{{6.4, 2.5}, {6.5, 2.5}}]}}, {
       RectangleBox[{6.6, 0.1}, {7.4, 1.9}], 
       InsetBox["\<\"U\"\>", {7., 1.}]}, {{LineBox[{{7.5, 2.5}, {7.6, 2.5}}], 
        LineBox[{{7.6, 2.5}, {7.9, 1.5}}], 
        LineBox[{{7.9, 1.5}, {8., 1.5}}]}, {LineBox[{{7.5, 1.5}, {7.6, 1.5}}],
         LineBox[{{7.6, 1.5}, {7.9, 2.5}}], 
        LineBox[{{7.9, 2.5}, {8., 2.5}}]}}}, {
      RectangleBox[{8.1, 0.1}, {8.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {8.5, 0.5}]}, {
      RectangleBox[{8.1, 2.1}, {8.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {8.5, 2.5}]}, {
      RectangleBox[{9.1, 0.1}, {9.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {9.5, 0.5}]}, {
      RectangleBox[{9.1, 2.1}, {9.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {9.5, 2.5}]}, {
      RectangleBox[{10.1, 0.1}, {10.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {10.5, 0.5}]}, {
      RectangleBox[{10.1, 2.1}, {10.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {10.5, 2.5}]}, {
      RectangleBox[{11.1, 0.1}, {11.9, 1.9}], 
      InsetBox["\<\"U\"\>", {11.5, 1.}]}, {
      RectangleBox[{12.1, 0.1}, {12.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {12.5, 0.5}]}, {
      RectangleBox[{12.1, 1.1}, {12.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {12.5, 1.5}]}, {
      RectangleBox[{13.1, 0.1}, {13.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {13.5, 0.5}]}, {
      RectangleBox[{13.1, 1.1}, {13.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {13.5, 1.5}]}, {
      RectangleBox[{14.1, 0.1}, {14.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {14.5, 0.5}]}, {
      RectangleBox[{14.1, 1.1}, {14.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {14.5, 1.5}]}, {{{
        LineBox[{{15, 2.5}, {15.1, 2.5}}], 
        LineBox[{{15.1, 2.5}, {15.4, 1.5}}], 
        LineBox[{{15.4, 1.5}, {15.5, 1.5}}]}, {
        LineBox[{{15, 1.5}, {15.1, 1.5}}], 
        LineBox[{{15.1, 1.5}, {15.4, 2.5}}], 
        LineBox[{{15.4, 2.5}, {15.5, 2.5}}]}}, {
       RectangleBox[{15.6, 0.1}, {16.4, 1.9}], 
       InsetBox["\<\"U\"\>", {16., 1.}]}, {{
        LineBox[{{16.5, 2.5}, {16.6, 2.5}}], 
        LineBox[{{16.6, 2.5}, {16.9, 1.5}}], 
        LineBox[{{16.9, 1.5}, {17., 1.5}}]}, {
        LineBox[{{16.5, 1.5}, {16.6, 1.5}}], 
        LineBox[{{16.6, 1.5}, {16.9, 2.5}}], 
        LineBox[{{16.9, 2.5}, {17., 2.5}}]}}}, {
      RectangleBox[{17.1, 0.1}, {17.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {17.5, 0.5}]}, {
      RectangleBox[{17.1, 2.1}, {17.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {17.5, 2.5}]}, {
      RectangleBox[{18.1, 0.1}, {18.9, 0.9}], 
      InsetBox["\<\"Ry\"\>", {18.5, 0.5}]}, {
      RectangleBox[{18.1, 2.1}, {18.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {18.5, 2.5}]}, {
      RectangleBox[{19.1, 0.1}, {19.9, 0.9}], 
      InsetBox["\<\"Rx\"\>", {19.5, 0.5}]}, {
      RectangleBox[{19.1, 1.1}, {19.9, 2.9}], 
      InsetBox["\<\"U\"\>", {19.5, 2.}]}, {
      RectangleBox[{20.1, 1.1}, {20.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {20.5, 1.5}]}, {
      RectangleBox[{20.1, 2.1}, {20.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {20.5, 2.5}]}, {
      RectangleBox[{21.1, 1.1}, {21.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {21.5, 1.5}]}, {
      RectangleBox[{21.1, 2.1}, {21.9, 2.9}], 
      InsetBox["\<\"Ry\"\>", {21.5, 2.5}]}, {
      RectangleBox[{22.1, 1.1}, {22.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {22.5, 1.5}]}, {
      RectangleBox[{22.1, 2.1}, {22.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {22.5, 2.5}]}, {
      RectangleBox[{23.1, 1.1}, {23.9, 2.9}], 
      InsetBox["\<\"U\"\>", {23.5, 2.}]}, {
      RectangleBox[{24.1, 1.1}, {24.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {24.5, 1.5}]}, {
      RectangleBox[{24.1, 2.1}, {24.9, 2.9}], 
      InsetBox["\<\"Rx\"\>", {24.5, 2.5}]}, {
      RectangleBox[{25.1, 1.1}, {25.9, 1.9}], 
      InsetBox["\<\"Ry\"\>", {25.5, 1.5}]}, {
      RectangleBox[{26.1, 1.1}, {26.9, 1.9}], 
      InsetBox["\<\"Rx\"\>", {26.5, 1.5}]}}},
   ImageSize->840,
   PlotRangePadding->None],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.878839825770973*^9, 3.8788398584114246`*^9}, 
   3.878839908210727*^9, 3.8788399767114344`*^9, {3.8788401356306806`*^9, 
   3.8788401447923517`*^9}, 3.8788401890185623`*^9},
 CellLabel->
  "Out[1076]//MatrixForm=",ExpressionUUID->"9e493c49-91bd-4b03-862a-\
374155549afd"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.878839816390829*^9, 
  3.8788398177903023`*^9}},ExpressionUUID->"b0140089-8dd2-4d03-9820-\
001907feebb9"],

Cell[BoxData[
 TemplateBox[{
  "InsertCircuitNoise", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Encountered gate \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SubscriptBox[\\\\\\\\\\\\\\\"CZ\\\\\\\\\\\\\\\", \
RowBox[{\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\"}]]\\\\\\\\) which is not supported by the \
given device specification. Note this may be due to preceding gates, if the \
spec contains constraints which depend on dynamic variables. See \
?GetUnsupportedGates.\\\\\\\"\\\"}]\\)\"", 2, 1052, 295, 21685235695342253521,
    "Local", "QuEST`InsertCircuitNoise"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.878839729852842*^9, 3.878839773100454*^9},
 CellLabel->
  "During evaluation of \
In[1051]:=",ExpressionUUID->"0e1c74f7-5ada-4f6c-975d-a7000c1ac434"],

Cell[BoxData[
 TemplateBox[{
  "ExtractCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?ExtractCircuit\\\\\
\\\"\\\"}]\\)\"", 2, 1052, 296, 21685235695342253521, "Local", 
   "QuEST`ExtractCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.878839729852842*^9, 3.8788397731270585`*^9},
 CellLabel->
  "During evaluation of \
In[1051]:=",ExpressionUUID->"afb19225-fe9a-4944-ba91-571682222d21"],

Cell[BoxData[
 TemplateBox[{
  "CalcCircuitMatrix", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?CalcCircuitMatrix\\\\\\\"\\\"}]\\)\"", 2, 1052, 297, 21685235695342253521, 
   "Local", "QuEST`CalcCircuitMatrix"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.878839729852842*^9, 3.8788397731427183`*^9},
 CellLabel->
  "During evaluation of \
In[1051]:=",ExpressionUUID->"68e742f1-e0a5-47c3-ac83-f564a782ea5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QuEST`*"}]], "Input",
 CellChangeTimes->{{3.878843537592103*^9, 3.878843544241782*^9}},
 CellLabel->
  "In[1122]:=",ExpressionUUID->"d035c986-b37c-4b0a-a9d0-bd541d15fa7e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["QuEST`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["QuEST`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ApplyCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ApplyCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcQuregDerivs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcQuregDerivs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "DestroyQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InsertCircuitNoise", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InsertCircuitNoise", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ApplyPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CalcTotalProb", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcTotalProb", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "DrawCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IsDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "IsDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyPhaseFunc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ApplyPhaseFunc", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CheckCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CheckCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DrawCircuitTopology", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "DrawCircuitTopology", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDamping", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "MixDamping", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ApplyQFT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ApplyQFT", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CheckDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CheckDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExtractCircuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ExtractCircuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "MixDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcCircuitMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcCircuitMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Circuit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "Circuit", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "MixDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcDensityInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ClearRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ClearRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDephasing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "MixTwoQubitDephasing", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcDensityInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcDensityInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CloneQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CloneQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitColumns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetCircuitColumns", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MixTwoQubitDepolarising", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "MixTwoQubitDepolarising", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcExpecPauliProd", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CollapseToOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CollapseToOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Operator", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "Operator", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcExpecPauliSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcExpecPauliSum", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateDensityQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetPauliSumFromCoeffs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetPauliSumFromCoeffs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotDensityMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "PlotDensityMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcFidelity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcFidelity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDensityQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateDensityQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetAmp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "SetAmp", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["CalcHilbertSchmidtDistance", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcHilbertSchmidtDistance", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDownloadedQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateDownloadedQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetRecordedQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetRecordedQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetQuregMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "SetQuregMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProduct", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcInnerProduct", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateLocalQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateLocalQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetUnsupportedGates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "GetUnsupportedGates", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetWeightedQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "SetWeightedQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcInnerProducts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcInnerProducts", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQureg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateQureg", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitClassicalState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InitClassicalState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimplifyPaulis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "SimplifyPaulis", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcPauliSumMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcPauliSumMatrix", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPlusState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InitPlusState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StartRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "StartRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcProbOfAllOutcomes", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcProbOfAllOutcomes", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateRemoteQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CreateRemoteQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitPureState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InitPureState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StopRecordingQASM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "StopRecordingQASM", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcProbOfOutcome", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcProbOfOutcome", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyAllQuregs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "DestroyAllQuregs", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitStateFromAmps", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InitStateFromAmps", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewCircuitSchedule", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ViewCircuitSchedule", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalcPurity", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "CalcPurity", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DestroyQuESTEnv", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "DestroyQuESTEnv", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitZeroState", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "InitZeroState", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ViewDeviceSpec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", {
                   "ViewDeviceSpec", "QuEST`"}, False},
                 ButtonNote->"QuEST`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.878843545560602*^9, 3.8788435864569054`*^9},
 CellLabel->
  "Out[1122]=",ExpressionUUID->"1ac1d715-3630-4af0-8a7e-902cfa1108f5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyPhaseFunc[qureg, qubits, f[r], r] multiplies a \
phase factor e^(i f[r]) onto each amplitude in qureg, where r is substituted \
with the index of each basis state as informed by the list of qubits (ordered \
least to most significant), and optional argument BitEncoding.\\n\[Bullet] \
qubits is a list of which qubits to include in the determination of the index \
r for each basis state. For example, qubits={0,1,2} implies the canonical \
indexing of basis states in a 3-qubit register.\\n\[Bullet] f[r] must be an \
exponential polynomial of r, of the form sum_i a_j r^(p_j) where a_j and p_j \
can be any real number (including negative and fractional).\\n\[Bullet] f[r] \
must evaluate to a real number for every basis state index informed by \
qubits, unless overriden via optional argument \
PhaseOverrides.\\nApplyPhaseFunc[qureg, {qubits, ...}, f[x,y,...], {x,y,...}] \
evaluates a multi-variable exponential-polynomial phase function, where each \
variable corresponds to a sub-register of qubits.\\nApplyPhaseFunc[qureg, \
{qubits, ...}, FuncName] evaluates a specific named multi-variable function \
to determine the phase. These are:\\n    \[Bullet] \\\"Norm\\\" evaluates \
Sqrt[x^2 + y^2 + ...]\\n    \[Bullet] {\\\"InverseNorm\\\", div} evaluates \
1/Sqrt[x^2 + y^2 + ...], replaced by div at divergence (when x=y=...=0).    \
\\n    \[Bullet] {\\\"ScaledNorm\\\", coeff} evaluates coeff*Sqrt[x^2 + y^2 + \
...]\\n    \[Bullet] {\\\"ScaledInverseNorm\\\", coeff, div} evaluates \
coeff/Sqrt[x^2 + y^2 + ...], replaced by div at divergence (when x=y=...=0). \
\\n    \[Bullet] {\\\"ScaledInverseShiftedNorm\\\", coeff, div, \
\[CapitalDelta]x, \[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x-\
\[CapitalDelta]x)^2 + (y-\[CapitalDelta]y)^2 + ...], replaced by div at \
numerical divergence (when the denominator is within machine epsilon to \
zero). \\n    \[Bullet] \\\"Product\\\" evaluates x*y*...\\n    \[Bullet] {\\\
\"InverseProduct\\\", div} evaluates 1/(x*y*...), replaced by div at \
divergence (when any of x, y, ... = 0).\\n    \[Bullet] \
{\\\"ScaledProduct\\\", coeff} evaluates coeff*x*y* ...\\n    \[Bullet] \
{\\\"ScaledInverseProduct\\\", coeff, div} evaluates coeff/(x*y* ...),, \
replaced by div at divergence (when any of x, y, ... = 0).\\n    \[Bullet] \\\
\"Distance\\\" evaluates Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...], where \
sub-registers in {qubits} are assumed to be in order of {x1, x2, y1, y2, ...}\
\\n    \[Bullet] {\\\"InverseDistance\\\", div} evaluates 1/Sqrt[(x1-x2)^2 + \
(y1-y2)^2 + ...], replaced by div at divergence (when x1=x2, y1=y2, ...).   \
\\n    \[Bullet] {\\\"ScaledDistance\\\", coeff} evaluates \
coeff*Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...]\\n    \[Bullet] \
{\\\"ScaledInverseDistance\\\", coeff, div} evaluates coeff/Sqrt[(x1-x2)^2 + \
(y1-y2)^2 + ...], replaced by div at divergence (when x1=x2, y1=y2, ...). \\n \
   \[Bullet] {\\\"ScaledInverseShiftedDistance\\\", coeff, div, \
\[CapitalDelta]x, \[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x1-x2-\
\[CapitalDelta]x)^2 + (y1-y2-\[CapitalDelta]y)^2 + ...], replaced by div at \
numerical divergence (when the denominator is within machine epsilon to \
zero).   \\n    Notice the order of parameters matches the ordering of the \
words in the FuncName.\\nApplyPhaseFunc accepts optional arguments \
BitEncoding and PhaseOverrides.\\nApplyPhaseFunc[... PhaseOverrides -> rules] \
first consults whether a basis state's index is included in the list of rules \
{index -> phase}, and if present, uses the prescribed phase in lieu of \
evaluating f[index].\\n    PhaseOverrides which correspond to divergences of \
named phase functions will be used, in lieu of the divergence parameter.\\n   \
 For multi-variable functions, each index must be a \
tuple.\\nApplyPhaseFunc[..., BitEncoding -> \\\"Unsigned\\\"] interprets each \
sub-register state as an unsigned binary integer, in {0, ..., \
2^numQubits-1}\\nApplyPhaseFunc[..., BitEncoding -> \\\"TwosComplement\\\"] \
interprets each sub-register state as a two's complement signed integer in \
{-2^(N-1), ..., +2^(N-1)-1}, where N is the number of qubits (including the \
sign qubit).\\nSee ?BitEncoding and ?PhaseOverrides.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ApplyPhaseFunc", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    RowBox[{"QuEST`Private`reg", ":", 
                    RowBox[{"{", "__Integer", "}"}]}], ",", 
                    "QuEST`Private`func_", ",", "QuEST`Private`symb_Symbol", 
                    ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`terms", "=", 
                    RowBox[{"QuEST`Private`extractExpPolyTerms", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "QuEST`Private`func", "]"}], ",", 
                    "QuEST`Private`symb"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`badterms", "=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"QuEST`Private`terms", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$Failed", ",", "QuEST`Private`bad_"}], "}"}], 
                    "\[RuleDelayed]", "QuEST`Private`bad"}]}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`overs", "=", 
                    RowBox[{"OptionValue", "[", "PhaseOverrides", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`badterms", "]"}], 
                    ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{
                    "\"The phase function, which must be an \
exponential-polynomial, contained an unrecognised term of the form \"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"StandardForm", "[", 
                    RowBox[{"First", "[", "QuEST`Private`badterms", "]"}], 
                    "]"}], "]"}], "<>", "\".\""}]}], "]"}], ";", "$Failed"}], 
                    ",", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{
                    "\"Invalid option for BitEncoding. Must be one of \"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], "<>", "\".\""}]}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"QuEST`Private`overs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"_Integer", "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], "..."}], "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", "\"Invalid one-dimensional PhaseOverrides, which \
must be of the form {integer -> real, ...}\""}], "]"}], ";", "$Failed"}], ",",
                     "True", ",", 
                    RowBox[{"QuEST`Private`ApplyPhaseFuncInternal", "[", 
                    
                    RowBox[{"QuEST`Private`qureg", ",", "QuEST`Private`reg", 
                    ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}], "/.", 
                    "\[VeryThinSpace]", "QuEST`Private`bitEncodingFlags"}], 
                    ",", 
                    RowBox[{"QuEST`Private`terms", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"QuEST`Private`terms", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPhaseFunc", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    RowBox[{"QuEST`Private`regs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`func_", ",", 
                    RowBox[{"QuEST`Private`symbs", ":", 
                    RowBox[{"{", "__Symbol", "}"}]}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`terms", "=", 
                    RowBox[{"QuEST`Private`extractMultiExpPolyTerms", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "QuEST`Private`func", "]"}], ",", 
                    "QuEST`Private`symbs"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`badterms", "=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"QuEST`Private`terms", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$Failed", ",", "QuEST`Private`bad_"}], "}"}], 
                    "\[RuleDelayed]", "QuEST`Private`bad"}]}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"QuEST`Private`coeffs", "=", 
                    RowBox[{"First", "[", "QuEST`Private`terms", "]"}]}], ",", 
                    RowBox[{"QuEST`Private`exponents", "=", 
                    RowBox[{"Last", "[", "QuEST`Private`terms", "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`overs", "=", 
                    RowBox[{"OptionValue", "[", "PhaseOverrides", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"DuplicateFreeQ", "[", "QuEST`Private`symbs", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", "\"The list of phase function symbols must be \
unique.\""}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`regs", "]"}], "=!=", 
                    RowBox[{"Length", "[", "QuEST`Private`symbs", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", "\"Each delimited sub-register of qubits must \
correspond to a unique symbol in the phase function.\""}], "]"}], ";", 
                    "$Failed"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`badterms", "]"}], 
                    ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{
                    "\"The phase function, which must be an \
exponential-polynomial, contained an unrecognised term of the form \"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"StandardForm", "[", 
                    RowBox[{"First", "[", "QuEST`Private`badterms", "]"}], 
                    "]"}], "]"}], "<>", "\".\""}]}], "]"}], ";", "$Failed"}], 
                    ",", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{
                    "\"Invalid option for BitEncoding. Must be one of \"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], "<>", "\".\""}]}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"QuEST`Private`overs", "===", 
                    RowBox[{"{", "}"}]}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"QuEST`Private`overs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", "__Integer", "}"}], "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], ".."}], "}"}]}], "]"}], "&&", 
                    RowBox[{"Equal", "@@", 
                    RowBox[{"Length", "/@", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "&&", 
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`regs", "]"}], "===", 
                    RowBox[{"Length", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ")"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    "\"Invalid PhaseOverrides. Each overriden phase index \
must be specified as an n-tuple, where n is the number of sub-registers and \
symbols, pointing to a real number. For example, ApplyPhaseFunc[..., {x,y}, \
PhaseOverrides -> { {0,0} -> PI, ... }].\""}], "]"}], ";", "$Failed"}], ",", 
                    "True", ",", 
                    
                    RowBox[{"QuEST`Private`ApplyMultiVarPhaseFuncInternal", 
                    "[", 
                    RowBox[{"QuEST`Private`qureg", ",", 
                    RowBox[{"Flatten", "[", "QuEST`Private`regs", "]"}], ",", 
                    RowBox[{"Length", "/@", "QuEST`Private`regs"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}], "/.", 
                    "\[VeryThinSpace]", "QuEST`Private`bitEncodingFlags"}], 
                    ",", 
                    RowBox[{"Flatten", "[", "QuEST`Private`coeffs", "]"}], 
                    ",", 
                    RowBox[{"Flatten", "[", "QuEST`Private`exponents", "]"}], 
                    ",", 
                    RowBox[{"Length", "/@", "QuEST`Private`coeffs"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPhaseFunc", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    RowBox[{"QuEST`Private`regs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`func_String", ",", 
                    
                    RowBox[{"QuEST`Private`params___", "?", 
                    "Internal`RealValuedNumericQ"}]}], "}"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`overs", "=", 
                    RowBox[{"OptionValue", "[", "PhaseOverrides", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`phaseFuncFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "QuEST`Private`func"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{"\"The named phase function must be one of \"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"QuEST`Private`phaseFuncFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", 
                    
                    RowBox[{
                    "\"Invalid option for BitEncoding. Must be one of \"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"QuEST`Private`bitEncodingFlags", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], "<>", "\".\""}]}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"QuEST`Private`overs", "===", 
                    RowBox[{"{", "}"}]}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"QuEST`Private`overs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", "__Integer", "}"}], "\[Rule]", 
                    RowBox[{"_", "?", "Internal`RealValuedNumericQ"}]}], 
                    ")"}], ".."}], "}"}]}], "]"}], "&&", 
                    RowBox[{"Equal", "@@", 
                    RowBox[{"Length", "/@", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "&&", 
                    RowBox[{
                    RowBox[{"Length", "[", "QuEST`Private`regs", "]"}], "===", 
                    RowBox[{"Length", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ")"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", "\"Invalid PhaseOverrides. Each overriden phase \
index must be specified as an n-tuple, where n is the number of \
sub-registers, pointing to a real number. For example, ApplyPhaseFunc[..., \
{{1},{2}}, ..., PhaseOverrides -> { {0,0} -> PI, ... }].\""}], "]"}], ";", 
                    "$Failed"}], ",", 
                    RowBox[{
                    RowBox[{"StringEndsQ", "[", 
                    RowBox[{"QuEST`Private`func", ",", "\"Distance\""}], 
                    "]"}], "&&", 
                    RowBox[{"OddQ", "[", 
                    RowBox[{"Length", "[", "QuEST`Private`regs", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyPhaseFunc", "::", "error"}], "MessageName"],
                     ",", "\"'Distance' based phase functions require a \
strictly even number of subregisters, since every pair is assumed to \
represent the same coordinate.\""}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "QuEST`Private`params", "}"}], "]"}], "===", 
                    "0"}], ",", 
                    RowBox[{"QuEST`Private`ApplyNamedPhaseFuncInternal", "[", 
                    RowBox[{"QuEST`Private`qureg", ",", 
                    RowBox[{"Flatten", "[", "QuEST`Private`regs", "]"}], ",", 
                    RowBox[{"Length", "/@", "QuEST`Private`regs"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}], "/.", 
                    "\[VeryThinSpace]", "QuEST`Private`bitEncodingFlags"}], 
                    ",", 
                    
                    RowBox[{"QuEST`Private`func", "/.", "\[VeryThinSpace]", 
                    "QuEST`Private`phaseFuncFlags"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "QuEST`Private`params", "}"}], "]"}], ">", 
                    "0"}], ",", 
                    
                    RowBox[{"QuEST`Private`ApplyParamNamedPhaseFuncInternal", 
                    "[", 
                    RowBox[{"QuEST`Private`qureg", ",", 
                    RowBox[{"Flatten", "[", "QuEST`Private`regs", "]"}], ",", 
                    RowBox[{"Length", "/@", "QuEST`Private`regs"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "BitEncoding", "]"}], "/.", 
                    "\[VeryThinSpace]", "QuEST`Private`bitEncodingFlags"}], 
                    ",", 
                    
                    RowBox[{"QuEST`Private`func", "/.", "\[VeryThinSpace]", 
                    "QuEST`Private`phaseFuncFlags"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", "QuEST`Private`params", "}"}], "]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"QuEST`Private`overs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPhaseFunc", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    RowBox[{"QuEST`Private`regs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__Integer", "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`func_String", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"ApplyPhaseFunc", "[", 
                    
                    RowBox[{
                    "QuEST`Private`qureg", ",", "QuEST`Private`regs", ",", 
                    RowBox[{"{", "QuEST`Private`func", "}"}], ",", 
                    "QuEST`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyPhaseFunc", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", "ApplyPhaseFunc", 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ApplyPhaseFunc", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"LocalVariables\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Solve\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[QuEST`ApplyPhaseFunc] = {
                    "LocalVariables" -> {"Solve", {4, 4}}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"BitEncoding", "\[Rule]", "\<\"Unsigned\"\>"}], 
                    ",", 
                    RowBox[{"PhaseOverrides", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`ApplyPhaseFunc\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyPhaseFunc[qureg, qubits, f[r], r] multiplies a \
phase factor e^(i f[r]) onto each amplitude in qureg, where r is substituted \
with the index of each basis state as informed by the list of qubits (ordered \
least to most significant), and optional argument BitEncoding.\\n\[Bullet] \
qubits is a list of which qubits to include in the determination of the index \
r for each basis state. For example, qubits={0,1,2} implies the canonical \
indexing of basis states in a 3-qubit register.\\n\[Bullet] f[r] must be an \
exponential polynomial of r, of the form sum_i a_j r^(p_j) where a_j and p_j \
can be any real number (including negative and fractional).\\n\[Bullet] f[r] \
must evaluate to a real number for every basis state index informed by \
qubits, unless overriden via optional argument \
PhaseOverrides.\\nApplyPhaseFunc[qureg, {qubits, ...}, f[x,y,...], {x,y,...}] \
evaluates a multi-variable exponential-polynomial phase function, where each \
variable corresponds to a sub-register of qubits.\\nApplyPhaseFunc[qureg, \
{qubits, ...}, FuncName] evaluates a specific named multi-variable function \
to determine the phase. These are:\\n    \[Bullet] \\\"Norm\\\" evaluates \
Sqrt[x^2 + y^2 + ...]\\n    \[Bullet] {\\\"InverseNorm\\\", div} evaluates \
1/Sqrt[x^2 + y^2 + ...], replaced by div at divergence (when x=y=...=0).    \
\\n    \[Bullet] {\\\"ScaledNorm\\\", coeff} evaluates coeff*Sqrt[x^2 + y^2 + \
...]\\n    \[Bullet] {\\\"ScaledInverseNorm\\\", coeff, div} evaluates \
coeff/Sqrt[x^2 + y^2 + ...], replaced by div at divergence (when x=y=...=0). \
\\n    \[Bullet] {\\\"ScaledInverseShiftedNorm\\\", coeff, div, \
\[CapitalDelta]x, \[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x-\
\[CapitalDelta]x)^2 + (y-\[CapitalDelta]y)^2 + ...], replaced by div at \
numerical divergence (when the denominator is within machine epsilon to \
zero). \\n    \[Bullet] \\\"Product\\\" evaluates x*y*...\\n    \[Bullet] {\\\
\"InverseProduct\\\", div} evaluates 1/(x*y*...), replaced by div at \
divergence (when any of x, y, ... = 0).\\n    \[Bullet] \
{\\\"ScaledProduct\\\", coeff} evaluates coeff*x*y* ...\\n    \[Bullet] \
{\\\"ScaledInverseProduct\\\", coeff, div} evaluates coeff/(x*y* ...),, \
replaced by div at divergence (when any of x, y, ... = 0).\\n    \[Bullet] \\\
\"Distance\\\" evaluates Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...], where \
sub-registers in {qubits} are assumed to be in order of {x1, x2, y1, y2, ...}\
\\n    \[Bullet] {\\\"InverseDistance\\\", div} evaluates 1/Sqrt[(x1-x2)^2 + \
(y1-y2)^2 + ...], replaced by div at divergence (when x1=x2, y1=y2, ...).   \
\\n    \[Bullet] {\\\"ScaledDistance\\\", coeff} evaluates \
coeff*Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...]\\n    \[Bullet] \
{\\\"ScaledInverseDistance\\\", coeff, div} evaluates coeff/Sqrt[(x1-x2)^2 + \
(y1-y2)^2 + ...], replaced by div at divergence (when x1=x2, y1=y2, ...). \\n \
   \[Bullet] {\\\"ScaledInverseShiftedDistance\\\", coeff, div, \
\[CapitalDelta]x, \[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x1-x2-\
\[CapitalDelta]x)^2 + (y1-y2-\[CapitalDelta]y)^2 + ...], replaced by div at \
numerical divergence (when the denominator is within machine epsilon to \
zero).   \\n    Notice the order of parameters matches the ordering of the \
words in the FuncName.\\nApplyPhaseFunc accepts optional arguments \
BitEncoding and PhaseOverrides.\\nApplyPhaseFunc[... PhaseOverrides -> rules] \
first consults whether a basis state's index is included in the list of rules \
{index -> phase}, and if present, uses the prescribed phase in lieu of \
evaluating f[index].\\n    PhaseOverrides which correspond to divergences of \
named phase functions will be used, in lieu of the divergence parameter.\\n   \
 For multi-variable functions, each index must be a \
tuple.\\nApplyPhaseFunc[..., BitEncoding -> \\\"Unsigned\\\"] interprets each \
sub-register state as an unsigned binary integer, in {0, ..., \
2^numQubits-1}\\nApplyPhaseFunc[..., BitEncoding -> \\\"TwosComplement\\\"] \
interprets each sub-register state as a two's complement signed integer in \
{-2^(N-1), ..., +2^(N-1)-1}, where N is the number of qubits (including the \
sign qubit).\\nSee ?BitEncoding and ?PhaseOverrides.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ApplyPhaseFunc[qureg, qubits, f[r], r] multiplies a phase factor e^(i \
f[r]) onto each amplitude in qureg, where r is substituted with the index of \
each basis state as informed by the list of qubits (ordered least to most \
significant), and optional argument BitEncoding.\n\[Bullet] qubits is a list \
of which qubits to include in the determination of the index r for each basis \
state. For example, qubits={0,1,2} implies the canonical indexing of basis \
states in a 3-qubit register.\n\[Bullet] f[r] must be an exponential \
polynomial of r, of the form sum_i a_j r^(p_j) where a_j and p_j can be any \
real number (including negative and fractional).\n\[Bullet] f[r] must \
evaluate to a real number for every basis state index informed by qubits, \
unless overriden via optional argument PhaseOverrides.\nApplyPhaseFunc[qureg, \
{qubits, ...}, f[x,y,...], {x,y,...}] evaluates a multi-variable \
exponential-polynomial phase function, where each variable corresponds to a \
sub-register of qubits.\nApplyPhaseFunc[qureg, {qubits, ...}, FuncName] \
evaluates a specific named multi-variable function to determine the phase. \
These are:\n    \[Bullet] \"Norm\" evaluates Sqrt[x^2 + y^2 + ...]\n    \
\[Bullet] {\"InverseNorm\", div} evaluates 1/Sqrt[x^2 + y^2 + ...], replaced \
by div at divergence (when x=y=...=0).    \n    \[Bullet] {\"ScaledNorm\", \
coeff} evaluates coeff*Sqrt[x^2 + y^2 + ...]\n    \[Bullet] \
{\"ScaledInverseNorm\", coeff, div} evaluates coeff/Sqrt[x^2 + y^2 + ...], \
replaced by div at divergence (when x=y=...=0). \n    \[Bullet] \
{\"ScaledInverseShiftedNorm\", coeff, div, \[CapitalDelta]x, \
\[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x-\[CapitalDelta]x)^2 + (y-\
\[CapitalDelta]y)^2 + ...], replaced by div at numerical divergence (when the \
denominator is within machine epsilon to zero). \n    \[Bullet] \"Product\" \
evaluates x*y*...\n    \[Bullet] {\"InverseProduct\", div} evaluates \
1/(x*y*...), replaced by div at divergence (when any of x, y, ... = 0).\n    \
\[Bullet] {\"ScaledProduct\", coeff} evaluates coeff*x*y* ...\n    \[Bullet] \
{\"ScaledInverseProduct\", coeff, div} evaluates coeff/(x*y* ...),, replaced \
by div at divergence (when any of x, y, ... = 0).\n    \[Bullet] \"Distance\" \
evaluates Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...], where sub-registers in {qubits} \
are assumed to be in order of {x1, x2, y1, y2, ...}\n    \[Bullet] \
{\"InverseDistance\", div} evaluates 1/Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...], \
replaced by div at divergence (when x1=x2, y1=y2, ...).   \n    \[Bullet] \
{\"ScaledDistance\", coeff} evaluates coeff*Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...]\
\n    \[Bullet] {\"ScaledInverseDistance\", coeff, div} evaluates \
coeff/Sqrt[(x1-x2)^2 + (y1-y2)^2 + ...], replaced by div at divergence (when \
x1=x2, y1=y2, ...). \n    \[Bullet] {\"ScaledInverseShiftedDistance\", coeff, \
div, \[CapitalDelta]x, \[CapitalDelta]y, ...} evaluates coeff/Sqrt[(x1-x2-\
\[CapitalDelta]x)^2 + (y1-y2-\[CapitalDelta]y)^2 + ...], replaced by div at \
numerical divergence (when the denominator is within machine epsilon to \
zero).   \n    Notice the order of parameters matches the ordering of the \
words in the FuncName.\nApplyPhaseFunc accepts optional arguments BitEncoding \
and PhaseOverrides.\nApplyPhaseFunc[... PhaseOverrides -> rules] first \
consults whether a basis state's index is included in the list of rules \
{index -> phase}, and if present, uses the prescribed phase in lieu of \
evaluating f[index].\n    PhaseOverrides which correspond to divergences of \
named phase functions will be used, in lieu of the divergence parameter.\n    \
For multi-variable functions, each index must be a tuple.\n\
ApplyPhaseFunc[..., BitEncoding -> \"Unsigned\"] interprets each sub-register \
state as an unsigned binary integer, in {0, ..., 2^numQubits-1}\n\
ApplyPhaseFunc[..., BitEncoding -> \"TwosComplement\"] interprets each \
sub-register state as a two's complement signed integer in {-2^(N-1), ..., \
+2^(N-1)-1}, where N is the number of qubits (including the sign qubit).\nSee \
?BitEncoding and ?PhaseOverrides.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`ApplyPhaseFunc, {QuEST`ApplyPhaseFunc[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`reg, {
           BlankSequence[Integer]}], 
         Pattern[QuEST`Private`func, 
          Blank[]], 
         Pattern[QuEST`Private`symb, 
          Blank[Symbol]], 
         OptionsPattern[]] :> 
       With[{QuEST`Private`terms = QuEST`Private`extractExpPolyTerms[
            N[QuEST`Private`func], QuEST`Private`symb]}, {
         QuEST`Private`badterms = Cases[QuEST`Private`terms, {$Failed, 
              Pattern[QuEST`Private`bad, 
               Blank[]]} :> QuEST`Private`bad]}, {
         QuEST`Private`overs = OptionValue[QuEST`Option`PhaseOverrides]}, 
         Which[Length[QuEST`Private`badterms] > 0, Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin[
            "The phase function, which must be an exponential-polynomial, \
contained an unrecognised term of the form ", 
             ToString[
              StandardForm[
               First[QuEST`Private`badterms]]], "."]]; $Failed, 
          Not[
           MemberQ[
            Part[QuEST`Private`bitEncodingFlags, All, 1], 
            OptionValue[QuEST`Option`BitEncoding]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin["Invalid option for BitEncoding. Must be one of ", 
             ToString[
              Part[QuEST`Private`bitEncodingFlags, All, 1]], "."]]; $Failed, 
          Not[
           MatchQ[QuEST`Private`overs, {
             RepeatedNull[Blank[Integer] -> PatternTest[
                Blank[], Internal`RealValuedNumericQ]]}]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "Invalid one-dimensional PhaseOverrides, which must be of the \
form {integer -> real, ...}"]; $Failed, True, 
          QuEST`Private`ApplyPhaseFuncInternal[
          QuEST`Private`qureg, QuEST`Private`reg, 
           ReplaceAll[
            OptionValue[QuEST`Option`BitEncoding], 
            QuEST`Private`bitEncodingFlags], 
           Part[QuEST`Private`terms, All, 1], 
           Part[QuEST`Private`terms, All, 2], 
           Part[QuEST`Private`overs, All, 1], 
           N[
            Part[QuEST`Private`overs, All, 2]]]]], QuEST`ApplyPhaseFunc[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`regs, {
           Repeated[{
             BlankSequence[Integer]}]}], 
         Pattern[QuEST`Private`func, 
          Blank[]], 
         Pattern[QuEST`Private`symbs, {
           BlankSequence[Symbol]}], 
         OptionsPattern[]] :> 
       With[{QuEST`Private`terms = QuEST`Private`extractMultiExpPolyTerms[
            N[QuEST`Private`func], QuEST`Private`symbs]}, {
         QuEST`Private`badterms = Cases[QuEST`Private`terms, {$Failed, 
              Pattern[QuEST`Private`bad, 
               Blank[]]} :> QuEST`Private`bad]}, {
         QuEST`Private`coeffs = First[QuEST`Private`terms], 
          QuEST`Private`exponents = Last[QuEST`Private`terms]}, {
         QuEST`Private`overs = OptionValue[QuEST`Option`PhaseOverrides]}, 
         Which[
          Not[
           DuplicateFreeQ[QuEST`Private`symbs]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "The list of phase function symbols must be unique."]; $Failed, 
          Length[QuEST`Private`regs] =!= Length[QuEST`Private`symbs], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "Each delimited sub-register of qubits must correspond to a \
unique symbol in the phase function."]; $Failed, 
          Length[QuEST`Private`badterms] > 0, Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin[
            "The phase function, which must be an exponential-polynomial, \
contained an unrecognised term of the form ", 
             ToString[
              StandardForm[
               First[QuEST`Private`badterms]]], "."]]; $Failed, 
          Not[
           MemberQ[
            Part[QuEST`Private`bitEncodingFlags, All, 1], 
            OptionValue[QuEST`Option`BitEncoding]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin["Invalid option for BitEncoding. Must be one of ", 
             ToString[
              Part[QuEST`Private`bitEncodingFlags, All, 1]], "."]]; $Failed, 
          Not[
           Or[QuEST`Private`overs === {}, 
            And[
             MatchQ[QuEST`Private`overs, {
               Repeated[{
                  BlankSequence[Integer]} -> PatternTest[
                  Blank[], Internal`RealValuedNumericQ]]}], 
             Apply[Equal, 
              Map[Length, 
               Part[QuEST`Private`overs, All, 1]]], 
             Length[QuEST`Private`regs] === Length[
               Part[QuEST`Private`overs, 1, 1]]]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "Invalid PhaseOverrides. Each overriden phase index must be \
specified as an n-tuple, where n is the number of sub-registers and symbols, \
pointing to a real number. For example, ApplyPhaseFunc[..., {x,y}, \
PhaseOverrides -> { {0,0} -> PI, ... }]."]; $Failed, True, 
          QuEST`Private`ApplyMultiVarPhaseFuncInternal[QuEST`Private`qureg, 
           Flatten[QuEST`Private`regs], 
           Map[Length, QuEST`Private`regs], 
           ReplaceAll[
            OptionValue[QuEST`Option`BitEncoding], 
            QuEST`Private`bitEncodingFlags], 
           Flatten[QuEST`Private`coeffs], 
           Flatten[QuEST`Private`exponents], 
           Map[Length, QuEST`Private`coeffs], 
           Flatten[
            Part[QuEST`Private`overs, All, 1]], 
           N[
            Part[QuEST`Private`overs, All, 2]]]]], QuEST`ApplyPhaseFunc[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`regs, {
           Repeated[{
             BlankSequence[Integer]}]}], {
          Pattern[QuEST`Private`func, 
           Blank[String]], 
          PatternTest[
           Pattern[QuEST`Private`params, 
            BlankNullSequence[]], Internal`RealValuedNumericQ]}, 
         OptionsPattern[]] :> 
       With[{QuEST`Private`overs = OptionValue[QuEST`Option`PhaseOverrides]}, 
         Which[
          Not[
           MemberQ[
            Part[QuEST`Private`phaseFuncFlags, All, 1], QuEST`Private`func]], 
          Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin["The named phase function must be one of ", 
             ToString[
              Part[QuEST`Private`phaseFuncFlags, All, 1]]]]; $Failed, 
          Not[
           MemberQ[
            Part[QuEST`Private`bitEncodingFlags, All, 1], 
            OptionValue[QuEST`Option`BitEncoding]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            StringJoin["Invalid option for BitEncoding. Must be one of ", 
             ToString[
              Part[QuEST`Private`bitEncodingFlags, All, 1]], "."]]; $Failed, 
          Not[
           Or[QuEST`Private`overs === {}, 
            And[
             MatchQ[QuEST`Private`overs, {
               Repeated[{
                  BlankSequence[Integer]} -> PatternTest[
                  Blank[], Internal`RealValuedNumericQ]]}], 
             Apply[Equal, 
              Map[Length, 
               Part[QuEST`Private`overs, All, 1]]], 
             Length[QuEST`Private`regs] === Length[
               Part[QuEST`Private`overs, 1, 1]]]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "Invalid PhaseOverrides. Each overriden phase index must be \
specified as an n-tuple, where n is the number of sub-registers, pointing to \
a real number. For example, ApplyPhaseFunc[..., {{1},{2}}, ..., \
PhaseOverrides -> { {0,0} -> PI, ... }]."]; $Failed, 
          And[
           StringEndsQ[QuEST`Private`func, "Distance"], 
           OddQ[
            Length[QuEST`Private`regs]]], Message[
            MessageName[QuEST`ApplyPhaseFunc, "error"], 
            "'Distance' based phase functions require a strictly even number \
of subregisters, since every pair is assumed to represent the same \
coordinate."]; $Failed, Length[{QuEST`Private`params}] === 0, 
          QuEST`Private`ApplyNamedPhaseFuncInternal[QuEST`Private`qureg, 
           Flatten[QuEST`Private`regs], 
           Map[Length, QuEST`Private`regs], 
           ReplaceAll[
            OptionValue[QuEST`Option`BitEncoding], 
            QuEST`Private`bitEncodingFlags], 
           ReplaceAll[QuEST`Private`func, QuEST`Private`phaseFuncFlags], 
           Flatten[
            Part[QuEST`Private`overs, All, 1]], 
           N[
            Part[QuEST`Private`overs, All, 2]]], 
          Length[{QuEST`Private`params}] > 0, 
          QuEST`Private`ApplyParamNamedPhaseFuncInternal[QuEST`Private`qureg, 
           Flatten[QuEST`Private`regs], 
           Map[Length, QuEST`Private`regs], 
           ReplaceAll[
            OptionValue[QuEST`Option`BitEncoding], 
            QuEST`Private`bitEncodingFlags], 
           ReplaceAll[QuEST`Private`func, QuEST`Private`phaseFuncFlags], 
           N[{QuEST`Private`params}], 
           Flatten[
            Part[QuEST`Private`overs, All, 1]], 
           N[
            Part[QuEST`Private`overs, All, 2]]]]], QuEST`ApplyPhaseFunc[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`regs, {
           Repeated[{
             BlankSequence[Integer]}]}], 
         Pattern[QuEST`Private`func, 
          Blank[String]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> 
       QuEST`ApplyPhaseFunc[
        QuEST`Private`qureg, QuEST`Private`regs, {QuEST`Private`func}, 
         QuEST`Private`opts], QuEST`ApplyPhaseFunc[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`ApplyPhaseFunc]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, QuEST`ApplyPhaseFunc, {
      SyntaxInformation[QuEST`ApplyPhaseFunc] -> {
        "LocalVariables" -> {"Solve", {4, 4}}}}], "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     QuEST`Option`BitEncoding -> "Unsigned", 
      QuEST`Option`PhaseOverrides -> {}}, "Attributes" -> {}, "FullName" -> 
    "QuEST`ApplyPhaseFunc"], False]]], "Print",
 CellTags->
  "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c",ExpressionUUID->"0b014798-ec9e-\
4755-8c8c-b54eee2bbaf7"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Article"}, "Preprint.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"1c510ccc-d51d-4f97-869e-06b4e3b62422"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-8007e399-42ea-494f-b894-fe9f4ac140ba"->{
  Cell[285450, 5588, 13803, 333, 107, "Print",ExpressionUUID->"4c9520e5-88a5-4e4f-a435-443b73ee0f01",
   CellTags->"Info-8007e399-42ea-494f-b894-fe9f4ac140ba"]},
 "Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c"->{
  Cell[379118, 7871, 57517, 1145, 896, "Print",ExpressionUUID->"0b014798-ec9e-4755-8c8c-b54eee2bbaf7",
   CellTags->"Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-8007e399-42ea-494f-b894-fe9f4ac140ba", 437216, 9034},
 {"Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c", 437426, 9037}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 17723, 344, 821, "Input",ExpressionUUID->"30d941c4-c74d-4019-8d8c-c4d11a9d026a"],
Cell[18306, 368, 4247, 60, 341, "Output",ExpressionUUID->"b59b7e2b-067a-4e52-b49d-2bb76b1ce358"]
}, Open  ]],
Cell[22568, 431, 35045, 500, 136, "Input",ExpressionUUID->"0d30743d-14ee-4695-80b8-af268c115cbf"],
Cell[CellGroupData[{
Cell[57638, 935, 258, 4, 29, "Input",ExpressionUUID->"35051b51-b2e5-478a-8d90-8b7c16016bcc"],
Cell[57899, 941, 824, 21, 29, "Output",ExpressionUUID->"89161ad3-67d3-4765-abf6-284e516b7a1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58760, 967, 5782, 152, 278, "Input",ExpressionUUID->"ad1449fc-449b-4390-8285-0f21de5f392d"],
Cell[64545, 1121, 1359, 40, 48, "Output",ExpressionUUID->"fff63fcd-e05a-4bea-aa07-b7b571f454f9"],
Cell[65907, 1163, 469, 10, 181, "Output",ExpressionUUID->"4cd62502-42e4-42f5-bb8d-9d94c17a3439"],
Cell[66379, 1175, 1446, 37, 48, "Output",ExpressionUUID->"67bd2077-6da6-4f51-9a5c-472a09364a66"],
Cell[67828, 1214, 1800, 52, 48, "Output",ExpressionUUID->"f273ee4a-7f5a-4221-90f5-e382782db13f"],
Cell[69631, 1268, 1880, 49, 48, "Output",ExpressionUUID->"1afa7554-1ad3-4530-9e89-d4970cadf198"],
Cell[71514, 1319, 1536, 44, 48, "Output",ExpressionUUID->"2372ca68-6c28-4e62-8887-f043dd4136ba"],
Cell[73053, 1365, 1872, 32, 111, "Output",ExpressionUUID->"ac7f17b9-dd4a-4e72-b4f7-ba21b4eea5ca"],
Cell[74928, 1399, 987, 25, 150, "Output",ExpressionUUID->"ca4da408-58e2-411e-b16b-025433f71fc0"],
Cell[75918, 1426, 1165, 33, 150, "Output",ExpressionUUID->"46e028ab-73ed-4f5c-8e2a-1b540b2526f0"],
Cell[77086, 1461, 1872, 32, 111, "Output",ExpressionUUID->"e979d043-cd9d-4848-a8c1-3f8c178615c1"],
Cell[78961, 1495, 1141, 32, 150, "Output",ExpressionUUID->"e38be4e9-1030-4e3c-bd1b-df2bd22efd38"],
Cell[80105, 1529, 1011, 26, 150, "Output",ExpressionUUID->"b9e324b1-565b-401c-b4f1-a9fad2623579"],
Cell[81119, 1557, 1011, 26, 150, "Output",ExpressionUUID->"02638927-aff4-49da-b481-bb8ee1f36e92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82167, 1588, 1356, 38, 47, "Input",ExpressionUUID->"ceee181f-e69a-44dd-bd68-a5ea1ead1261"],
Cell[83526, 1628, 1015, 26, 150, "Output",ExpressionUUID->"b35ffb0a-3566-4e69-99f3-c58fb32003ef"]
}, Open  ]],
Cell[84556, 1657, 6900, 145, 277, "Input",ExpressionUUID->"2f7f4364-700f-436f-afc3-6acf4e15e78b"],
Cell[91459, 1804, 1342, 39, 66, "Input",ExpressionUUID->"3d6dccd8-ffae-4258-bf42-4488acfe0b5a"],
Cell[92804, 1845, 154, 3, 29, "Input",ExpressionUUID->"69a013b9-8ed0-449b-99fb-3d05bfdc57d6"],
Cell[92961, 1850, 2970, 80, 120, "Input",ExpressionUUID->"9ab30105-6659-4395-9236-1055473f3c0c"],
Cell[95934, 1932, 152, 3, 29, "Input",ExpressionUUID->"407aec86-a308-44e2-8124-1b60fe60dd7c"],
Cell[96089, 1937, 889, 22, 29, "Input",ExpressionUUID->"6f6eb437-22a1-48bc-b9c3-4f4a85589a45"],
Cell[CellGroupData[{
Cell[97003, 1963, 6093, 152, 194, "Input",ExpressionUUID->"98e3321d-f2d2-419c-b83b-01164360b3db"],
Cell[103099, 2117, 74814, 1187, 284, 33469, 509, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"be1e6bbe-51d5-4f70-ac44-12a8a1a8dc0e"],
Cell[177916, 3306, 498, 8, 29, "Output",ExpressionUUID->"3df18a16-ecc5-4ebf-9682-cde89948e4f3"]
}, Open  ]],
Cell[178429, 3317, 251, 5, 29, "Input",ExpressionUUID->"e8a32db8-5012-4357-9fd4-af36b85879a9"],
Cell[178683, 3324, 152, 3, 29, "Input",ExpressionUUID->"9a0772e0-da55-4d34-8d45-82d9ac38e782"],
Cell[178838, 3329, 1963, 60, 148, "Input",ExpressionUUID->"df8d62ae-5b04-4345-9980-c0f691a52d93"],
Cell[CellGroupData[{
Cell[180826, 3393, 441, 11, 29, "Input",ExpressionUUID->"119aba29-4933-4989-800c-8d5a6de039e5"],
Cell[181270, 3406, 244, 5, 29, "Output",ExpressionUUID->"d6ef0e9d-e2a3-4582-9fb1-b1a967d6b1c2"]
}, Open  ]],
Cell[181529, 3414, 3002, 78, 85, "Input",ExpressionUUID->"6db349cb-634e-4fa3-8992-5f6049a7d774"],
Cell[CellGroupData[{
Cell[184556, 3496, 201, 4, 29, "Input",ExpressionUUID->"5648b353-8f7a-4440-b1ce-a811bf99f618"],
Cell[184760, 3502, 14325, 332, 141, "Output",ExpressionUUID->"39e0cd45-2fe9-4b9c-829b-d585a6571068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199122, 3839, 16151, 373, 588, "Input",ExpressionUUID->"1962bbff-1e91-484a-aee6-6a1ccd4b1276"],
Cell[215276, 4214, 1888, 29, 22, "Print",ExpressionUUID->"3f4a770d-4472-4613-bf4d-9fbe0c16759f"],
Cell[217167, 4245, 521, 11, 28, "Message",ExpressionUUID->"5abaa10c-8780-4c27-aef5-250765489398"],
Cell[217691, 4258, 523, 11, 28, "Message",ExpressionUUID->"38b91f89-2ce1-4229-b866-37c964a630c8"],
Cell[218217, 4271, 523, 11, 28, "Message",ExpressionUUID->"86b8b3d1-f0e0-4292-9d93-6c479e4fa9e6"],
Cell[218743, 4284, 463, 10, 28, "Message",ExpressionUUID->"793ea25f-4de9-46a3-b302-f8f0ec4c4504"],
Cell[219209, 4296, 758, 12, 29, "Output",ExpressionUUID->"90b86a6e-991e-4035-8874-92aa60390897"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220004, 4313, 5999, 130, 211, "Input",ExpressionUUID->"b9545200-9e77-444a-a18a-70ae90033eb9"],
Cell[226006, 4445, 1254, 18, 29, "Output",ExpressionUUID->"96d22694-a8ea-4ef6-917f-e7503af78d89"],
Cell[227263, 4465, 25582, 353, 1035, "Output",ExpressionUUID->"4881ae54-8dcd-40ab-939e-6b304cc586f0"]
}, Open  ]],
Cell[252860, 4821, 274, 5, 29, InheritFromParent,ExpressionUUID->"9c1be839-151f-421a-a46b-72ed11081dbe"],
Cell[CellGroupData[{
Cell[253159, 4830, 200, 4, 29, "Input",ExpressionUUID->"babcee43-5446-44ee-be0e-914e239f5132"],
Cell[253362, 4836, 32085, 750, 360, "Output",ExpressionUUID->"f4e518d4-eae3-4fb6-9411-c9c74a55ff7a"],
Cell[285450, 5588, 13803, 333, 107, "Print",ExpressionUUID->"4c9520e5-88a5-4e4f-a435-443b73ee0f01",
 CellTags->"Info-8007e399-42ea-494f-b894-fe9f4ac140ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299290, 5926, 201, 4, 29, "Input",ExpressionUUID->"915e915d-5725-4a8f-bf0c-e6fb81ecd3de"],
Cell[299494, 5932, 13112, 314, 182, "Output",ExpressionUUID->"f40fe84e-47a6-4f7e-9104-73c59d34aab1"]
}, Open  ]],
Cell[312621, 6249, 209, 4, 29, "Input",ExpressionUUID->"e4366d9d-0391-4791-bc7a-3aa21bcf0229"],
Cell[312833, 6255, 191, 4, 28, "Text",ExpressionUUID->"de183628-8103-4e2e-92e5-9f0f718f999f"],
Cell[CellGroupData[{
Cell[313049, 6263, 5607, 167, 204, InheritFromParent,ExpressionUUID->"89271296-594f-49bf-92cd-2b773ab2bef7"],
Cell[318659, 6432, 7989, 151, 115, "Output",ExpressionUUID->"5b36f5a9-0752-4742-a301-38661822bda7"]
}, Open  ]],
Cell[326663, 6586, 194, 3, 28, "Text",ExpressionUUID->"3d237330-fd1e-4387-8110-b63c14eaeba2"],
Cell[326860, 6591, 144, 3, 28, "Text",ExpressionUUID->"187070a4-67b5-49bf-be4e-16febca488cd"],
Cell[CellGroupData[{
Cell[327029, 6598, 833, 12, 29, InheritFromParent,ExpressionUUID->"b46756ff-2ca5-4a40-a000-61995a1b6303"],
Cell[CellGroupData[{
Cell[327887, 6614, 4236, 139, 103, "Print",ExpressionUUID->"2aa13f54-2023-47db-bf99-72758920a94b"],
Cell[332126, 6755, 4225, 138, 103, "Print",ExpressionUUID->"380897b2-8a14-4146-b501-e846295a109e"]
}, Open  ]],
Cell[336366, 6896, 8418, 160, 115, "Output",ExpressionUUID->"9e493c49-91bd-4b03-862a-374155549afd"]
}, Open  ]],
Cell[344799, 7059, 144, 3, 28, "Text",ExpressionUUID->"b0140089-8dd2-4d03-9820-001907feebb9"],
Cell[344946, 7064, 831, 15, 46, "Message",ExpressionUUID->"0e1c74f7-5ada-4f6c-975d-a7000c1ac434"],
Cell[345780, 7081, 444, 10, 28, "Message",ExpressionUUID->"afb19225-fe9a-4944-ba91-571682222d21"],
Cell[346227, 7093, 453, 10, 28, "Message",ExpressionUUID->"68e742f1-e0a5-47c3-ac83-f564a782ea5f"],
Cell[CellGroupData[{
Cell[346705, 7107, 200, 4, 29, "Input",ExpressionUUID->"d035c986-b37c-4b0a-a9d0-bd541d15fa7e"],
Cell[346908, 7113, 32207, 756, 423, "Output",ExpressionUUID->"1ac1d715-3630-4af0-8a7e-902cfa1108f5"],
Cell[379118, 7871, 57517, 1145, 896, "Print",ExpressionUUID->"0b014798-ec9e-4755-8c8c-b54eee2bbaf7",
 CellTags->"Info-7b0b390b-e211-4d3e-ab6f-d7a0580cab2c"]
}, Open  ]]
}
]
*)

