(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    320179,       7587]
NotebookOptionsPosition[    309589,       7426]
NotebookOutlinePosition[    310312,       7449]
CellTagsIndexPosition[    310206,       7444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"QuEST", " ", "VQD", " ", "Setup"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "Import", "[", "\"\<https://qtechtheory.org/questlink.m\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CreateDownloadedQuESTEnv", "[", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "Get", "[", 
    "\"\<C:\\\\Users\\\\KitKa\\\\QuantumVolume\\\\QuESTCheck\\\\vqd CG V3 \
Parallel.wl\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9035017448713903`*^9, 3.9035017650130672`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[567]:=",ExpressionUUID->"d855bdca-4d56-40ea-ba6d-4b252baa9a80"],

Cell[BoxData[
 TemplateBox[{
  "URLDownload", "invhttp", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Failed writing body (0 != 15452)\\\\\\\"\\\
\"}]\\).\"", 2, 568, 101, 21856813393737398218, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.904983074187819*^9},
 CellLabel->
  "During evaluation of \
In[567]:=",ExpressionUUID->"1fcf34cd-13e1-47e0-8fc0-f716940e51cd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\KitKa\\\\QuantumVolume\\\\QuESTCheck\\\\\
SU4Gates9Qubits.csv\>\"", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[570]:=",ExpressionUUID->"5027551a-3088-4742-a531-8d292fa4f707"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"distloc", "[", 
     RowBox[{"q1_", ",", " ", "q2_"}], "]"}], " ", ":=", " ", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"RydDev", "[", "AtomLocations", "]"}], "[", "q1", "]"}], " ",
         "-", " ", 
        RowBox[{
         RowBox[{"RydDev", "[", "AtomLocations", "]"}], "[", "q2", "]"}]}], 
       ",", " ", "2"}], "]"}], " ", 
     RowBox[{"RydDev", "[", "UnitLattice", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockadecheck", "[", "q_List", "]"}], " ", ":=", " ", "\n", 
   "\t\t\t", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"distloc", " ", "@@", " ", "#"}], " ", "<=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"RydDev", "[", "BlockadeRadius", "]"}], "+", 
           "$MachineEpsilon"}], ")"}]}], ")"}], "&"}], " ", "/@", " ", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "q", "]"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[571]:=",ExpressionUUID->"49b247da-0332-4103-8a0e-d3bf988c86fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"VQD", " ", "Initialisation"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"locations", "=", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "->", "#2"}], "&"}], "@@@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "8"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], "}"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "RydbergHub", "]"}], "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"The", " ", "total", " ", "number", " ", "of", " ", 
        RowBox[{"atoms", "/", "qubit"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"QubitNum", " ", "\[Rule]", "  ", "9"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Physical", " ", "location", " ", "on", " ", "each", " ", "qubit", 
          " ", "described", " ", "with", " ", "a", " ", "2", "D"}], "-", " ", 
         RowBox[{"or", " ", "3", "D"}], "-", "vector"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"AtomLocations", " ", "\[Rule]", " ", "locations"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"It", "'"}], "s", " ", "presumed", " ", "that", " ", 
         SuperscriptBox[
          SubscriptBox["T", "2"], "*"], " ", "has", " ", "been", " ", 
         "echoed", " ", "out", " ", "to", " ", 
         SubscriptBox["T", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"T2", " ", "\[Rule]", " ", 
        RowBox[{"1.49", "*", 
         SuperscriptBox["10", "6"]}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "The", " ", "life", " ", "time", " ", "of", " ", "vacuum", " ", 
          "chamber"}], ",", " ", 
         RowBox[{
          RowBox[{
          "where", " ", "it", " ", "affects", " ", "the", " ", "coherence", 
           " ", 
           RowBox[{"time", ":", " ", "T1"}]}], "=", 
          RowBox[{"\[Tau]vac", "/", "N"}]}]}], "  ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"VacLifeTime", " ", "\[Rule]", " ", 
        RowBox[{"4", "*", 
         SuperscriptBox["10", "6"]}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Rabi", " ", "frequency", " ", "of", " ", "the", " ", 
          RowBox[{"atoms", ".", " ", "We"}], " ", "assume", " ", "the", " ", 
          "duration", " ", "of", " ", "multi"}], "-", 
         RowBox[{
         "qubit", " ", "gates", " ", "is", " ", "as", " ", "long", " ", "as", 
          " ", "4", "\[Pi]", " ", "pulse", " ", "of", " ", "single"}], "-", 
         RowBox[{"qubit", " ", "gates"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"RabiFreq", " ", "\[Rule]", " ", "1"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Asymmetric", " ", "bit"}], "-", 
          RowBox[{"flip", " ", "error", " ", "probability"}]}], ";", " ", 
         RowBox[{
         "the", " ", "error", " ", "is", " ", "acquired", " ", "during", " ", 
          "single", " ", "qubit", " ", "operation"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ProbBFRot", " ", "->", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"10", "->", "0"}], ",", " ", 
          RowBox[{"01", "->", "0"}]}], "|>"}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Unit", " ", "lattice", " ", "in", " ", 
         RowBox[{"\[Mu]m", ".", " ", "This"}], " ", "will", " ", "be", " ", 
         "the", " ", "unit", " ", "the", " ", "lattice", " ", "and", " ", 
         "coordinates"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"UnitLattice", " ", "\[Rule]", " ", "1"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "blockade", " ", "radius", " ", "of", " ", "each", " ", "atom"}], " ",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"BlockadeRadius", " ", "\[Rule]", " ", "10"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "The", " ", "factor", " ", "that", " ", "estimates", " ", 
          "accelerated", " ", "dephasing", " ", "due", " ", "to", " ", 
          "moving", " ", "the", " ", 
          RowBox[{"atoms", ".", " ", "Ideally"}]}], ",", " ", 
         RowBox[{
         "it", " ", "is", " ", "calculated", " ", "from", " ", "the", " ", 
          "distance", " ", "and", " ", 
          RowBox[{"speed", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"HeatFactor", " ", "->", " ", "0"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Leakage", " ", "probability", " ", "during", " ", "initalisation", 
         " ", "process"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ProbLeakInit", " ", "\[Rule]", " ", "0.003"}], 
       RowBox[{"(*", "0.007", "*)"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"duration", " ", "of", " ", "moving", " ", "atoms"}], ";", 
         " ", 
         RowBox[{
         "we", " ", "assume", " ", "SWAPLoc", " ", "and", " ", "ShiftLoc", 
          " ", "take", " ", "this", " ", "amount", " ", "of", " ", 
          RowBox[{"time", ":", " ", 
           RowBox[{"100", " ", "\[Mu]s"}]}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"DurMove", " ", "->", " ", "100"}], "\[IndentingNewLine]", ",",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "duration", " ", "of", " ", "lattice", " ", "initialization", " ", 
         "which", " ", "involves", " ", "the", " ", "atom", " ", "loading", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"~", "50"}], "%"}], ")"}], " ", "and", " ", "rearranging", 
         " ", "the", " ", "optical", " ", "tweezer"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"DurInit", " ", "\[Rule]", " ", "300"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "measurement", " ", "fidelity", " ", "and", " ", "duration"}], ",", 
         " ", 
         RowBox[{
         "were", " ", "it", " ", "induces", " ", "atom", " ", "loss", " ", 
          "afterward"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"FidMeas", " ", "\[Rule]", " ", "100"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{"DurMeas", " ", "\[Rule]", " ", 
        RowBox[{"2", "*", 
         SuperscriptBox["10", "4"]}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "increasing", " ", "probability", " ", "of", " ", "atom", 
         " ", "loss", " ", "on", " ", "each", " ", 
         RowBox[{"measurement", ".", " ", "The"}], " ", "value", " ", "keeps",
          " ", "increasing", " ", "until", " ", "being", " ", "initialised"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ProbLossMeas", " ", "\[Rule]", " ", "0"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "leak", " ", "probability", " ", "of", " ", "implementing", " ", 
          "multi"}], "-", 
         RowBox[{"qubit", " ", "gates"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ProbLeakCZ", " ", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"01", "\[Rule]", " ", "0.001"}], ",", 
          RowBox[{"11", "\[Rule]", "0.001"}]}], " ", "|>"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RydDev", "=", 
     RowBox[{"RydbergHub", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"PlotAtoms", "[", 
    RowBox[{"RydbergHub", "[", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9049825037421207`*^9, 3.9049825713936133`*^9}},
 CellLabel->
  "In[573]:=",ExpressionUUID->"3137d4a1-e69b-4fa3-ab75-76524c925fdc"],

Cell[BoxData[
 Graphics3DBox[{Text3DBox[
    StyleBox["0",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {0, 0, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}, 0.15]}, Text3DBox[
    StyleBox["1",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {0, 1, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{0, 1, 0}, 0.15]}, Text3DBox[
    StyleBox["2",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {1, 0, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{1, 0, 0}, 0.15]}, Text3DBox[
    StyleBox["3",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {1, 1, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{1, 1, 0}, 0.15]}, Text3DBox[
    StyleBox["4",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {0, 2, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{0, 2, 0}, 0.15]}, Text3DBox[
    StyleBox["5",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {1, 2, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{1, 2, 0}, 0.15]}, Text3DBox[
    StyleBox["6",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {2, 0, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{2, 0, 0}, 0.15]}, Text3DBox[
    StyleBox["7",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {2, 1, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{2, 1, 0}, 0.15]}, Text3DBox[
    StyleBox["8",
     StripOnInput->False,
     LineColor->GrayLevel[1],
     FrontFaceColor->GrayLevel[1],
     BackFaceColor->GrayLevel[1],
     GraphicsColor->GrayLevel[1],
     FontWeight->Bold,
     FontColor->GrayLevel[1]], {2, 2, 0}], 
   {RGBColor[1, 0, 0], SphereBox[{2, 2, 0}, 0.15]}},
  Frame -> True,
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.904982511993188*^9, 3.9049825720033665`*^9}, 
   3.9049830814740767`*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"ae031583-6c8a-4c10-ba16-fe2fea03ba9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Defining", " ", 
    RowBox[{"QuEST", "'"}], "s", " ", "Rydberg", " ", "Blockade", " ", 
    "Check", " ", "in", " ", "a", " ", "permanent", " ", "function", " ", 
    "such", " ", "that", " ", "it", " ", "can", " ", "be", " ", "used", " ", 
    "without", " ", "constantly", " ", "editing", " ", "the", " ", "code"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qubitLocs", "=", 
     RowBox[{"userconfig", "[", "QubitLocations", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distloc", "[", 
      RowBox[{"q1_", ",", "q2_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"qubitLocs", "[", "q1", "]"}], "-", 
         RowBox[{"qubitLocs", "[", "q2", "]"}]}], ",", "2"}], "]"}], "*", 
      RowBox[{"userconfig", "[", "UnitLattice", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"blockadeCheck", "[", "q_List", "]"}], ":=", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"distloc", "@@", "#"}], "<=", " ", 
           RowBox[{"userconfig", "[", "BlockadeRadius", "]"}]}], ")"}], "&"}],
         "/@", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "q", "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fraction", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    FractionBox["a", "b"]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KetList", "[", "NQ_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{
         SuperscriptBox["2", "NQ"], "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NRandQbits", "[", 
     RowBox[{"NQ_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", "0"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"NQ", "-", "1"}]}], "]"}], ",", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"NQ", "-", "1"}]}], "]"}], ",", "NQ"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckHeavyOutputProb", "[", 
      RowBox[{"PoutcomesIMPLEMENTED_", ",", "PoutcomesMODEL_"}], "]"}], ":=", 
     RowBox[{"Pick", "[", 
      RowBox[{"PoutcomesIMPLEMENTED", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PoutcomesMODEL", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ">=", 
            RowBox[{"Median", "[", "PoutcomesMODEL", "]"}]}], ",", "True", 
           ",", "False"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "PoutcomesMODEL", "]"}]}], "}"}]}], "]"}]}],
       "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9049794266692967`*^9, 3.9049794273603716`*^9}, {
  3.904979630779292*^9, 3.9049796311505456`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"c9c94bdf-c028-4e0f-9d9e-0a5c768ec1c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SU4GateARPMove", "[", 
   RowBox[{"DataSet_", ",", "q1_", ",", "q2_"}], "]"}], ":=", 
  RowBox[{"SequenceSplit", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"Reverse", "[", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"StringTrim", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringSplit", "[", 
                  RowBox[{
                   RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<]\>\""}], "]"}], 
              ",", "\"\<,\>\""}], "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "==", "1"}], ",", 
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{
                RowBox[{"StringTrim", "[", 
                 RowBox[{
                  RowBox[{"StringTrim", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                   ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], ",", 
              "\"\<'\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringSplit", "[", 
                  RowBox[{
                   RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                     ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], 
                 ",", "\"\<'\>\""}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<C\>\""}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"StringTrim", "[", 
            RowBox[{
             RowBox[{"StringTrim", "[", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"DataSet", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], "]"}],
                "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\"\<]]\>\""}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<(\>\"", "->", "\"\<[\>\""}], ",", 
             RowBox[{"\"\<)\>\"", "->", "\"\<]\>\""}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"c", ",", "\"\<e\>\""}], "]"}], ",", 
           RowBox[{
            RowBox[{"d", "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{"c", ",", "\"\<e\>\""}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"d", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"d", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ",", 
           RowBox[{"ToExpression", "[", "c", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "->", "q1"}], ",", 
             RowBox[{"1", "->", "q2"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "a", "]"}], "==", "2"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"b", ",", "\"\<SWAP\>\""}], "]"}], ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", "SWAP", "]"}], ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"TwoQ", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"CZARPPar", ",", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "TwoQ"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"c", "===", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", "b", "]"}], ",", 
              RowBox[{"a", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", "b", "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", "c", "]"}]}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "DataSet", "]"}]}], "}"}]}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", "TwoQ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9034218314896655`*^9, 3.903421866770581*^9}, {
  3.9034219186458883`*^9, 3.9034219418196435`*^9}, {3.903422767104711*^9, 
  3.903422770499304*^9}, {3.9035033797771573`*^9, 3.9035033804798017`*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"290df099-ece3-4b61-bb6b-ece1925cb0e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NQ", "=", "5"}], "\[IndentingNewLine]", 
 RowBox[{"RQs", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ARPCZdur", "=", "1"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Parallelised", " ", "SU4", " ", "Gate", " ", "layer", " ", "generators"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SU4GateARPParMove", "[", 
    RowBox[{"DataSet_", ",", "q1_", ",", "q2_"}], "]"}], ":=", 
   RowBox[{"SequenceSplit", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Reverse", "[", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringTrim", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringSplit", "[", 
                   RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<]\>\""}], "]"}], 
               ",", "\"\<,\>\""}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "a", "]"}], "==", "1"}], ",", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringTrim", "[", 
                  RowBox[{
                   RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                    ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], 
               ",", "\"\<'\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"StringSplit", "[", 
                   RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                     ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], 
                  ",", "\"\<'\>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<C\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"StringTrim", "[", 
             RowBox[{
              RowBox[{"StringTrim", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DataSet", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\"\<]]\>\""}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(\>\"", "->", "\"\<[\>\""}], ",", 
              RowBox[{"\"\<)\>\"", "->", "\"\<]\>\""}]}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"c", ",", "\"\<e\>\""}], "]"}], ",", 
            RowBox[{
             RowBox[{"d", "=", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"c", ",", "\"\<e\>\""}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
              RowBox[{"10", "^", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ",", 
            RowBox[{"ToExpression", "[", "c", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "->", "q1"}], ",", 
              RowBox[{"1", "->", "q2"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "==", "2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringContainsQ", "[", 
              RowBox[{"b", ",", "\"\<SWAP\>\""}], "]"}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", "SWAP", "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"TwoQ", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"CZARPPar", ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "TwoQ"}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", "b", "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"ToExpression", "[", "b", "]"}], ",", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", "c", "]"}]}], 
            "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "DataSet", "]"}]}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", "TwoQ", "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SU4GatePIParMove", "[", 
    RowBox[{"DataSet_", ",", "q1_", ",", "q2_"}], "]"}], ":=", 
   RowBox[{"SequenceSplit", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"Reverse", "[", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringTrim", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringSplit", "[", 
                   RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                   "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<]\>\""}], "]"}], 
               ",", "\"\<,\>\""}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "a", "]"}], "==", "1"}], ",", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringSplit", "[", 
                RowBox[{
                 RowBox[{"StringTrim", "[", 
                  RowBox[{
                   RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                    ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], 
               ",", "\"\<'\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"StringSplit", "[", 
                   RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{"StringTrim", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DataSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                    "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<[\>\""}], "]"}],
                     ",", "\"\<]\>\""}], "]"}], ",", "\"\<,\>\""}], "]"}], 
                  ",", "\"\<'\>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<C\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{
            RowBox[{"StringTrim", "[", 
             RowBox[{
              RowBox[{"StringTrim", "[", 
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DataSet", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<, [\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", "\"\<]]\>\""}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<(\>\"", "->", "\"\<[\>\""}], ",", 
              RowBox[{"\"\<)\>\"", "->", "\"\<]\>\""}]}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{"c", ",", "\"\<e\>\""}], "]"}], ",", 
            RowBox[{
             RowBox[{"d", "=", 
              RowBox[{"StringSplit", "[", 
               RowBox[{"c", ",", "\"\<e\>\""}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
              RowBox[{"10", "^", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"d", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], ",", 
            RowBox[{"ToExpression", "[", "c", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"a", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "->", "q1"}], ",", 
              RowBox[{"1", "->", "q2"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "a", "]"}], "==", "2"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringContainsQ", "[", 
              RowBox[{"b", ",", "\"\<SWAP\>\""}], "]"}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", "SWAP", "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"TwoQ", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"CZPIPar", ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "TwoQ"}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", "b", "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"ToExpression", "[", "b", "]"}], ",", 
                RowBox[{"a", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", "c", "]"}]}], 
            "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "DataSet", "]"}]}], "}"}]}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", "TwoQ", "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MoveTime", "=", "300"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QVLayerARPParMove", "[", 
   RowBox[{"DataSet_", ",", "NQ_", ",", "RQs_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SU4S", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"SU4GateARPParMove", "[", 
            RowBox[{
             RowBox[{"DataSet", "[", 
              RowBox[{"[", 
               RowBox[{"n", "-", 
                RowBox[{"Quotient", "[", 
                 RowBox[{"n", ",", "2"}], "]"}], "+", "i"}], "]"}], "]"}], 
             ",", 
             RowBox[{"RQs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"RQs", "[", 
              RowBox[{"[", 
               RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"2", "*", 
              RowBox[{"Quotient", "[", 
               RowBox[{"NQ", ",", "2"}], "]"}]}], ",", "2"}], "}"}]}], "]"}], 
         "]"}]}], ";", 
       RowBox[{"Join", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OddQ", "[", "j", "]"}], ",", 
          RowBox[{"CircRydbergHub", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"SU4S", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "j"}], "]"}], "]"}], "]"}], ",", "RydDev", 
            ",", 
            RowBox[{"Parallel", "->", "True"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OddQ", "[", "NQ", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"SU4S", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "j"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["SpareARP", 
                   RowBox[{"RQs", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]], ",", 
                  RowBox[{
                   SubscriptBox["Wait", "0"], "[", "MoveTime", "]"}]}], 
                 "}"}]}], "]"}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"SU4S", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "j"}], "]"}], "]"}], "]"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QVLayerPIParMove", "[", 
   RowBox[{"DataSet_", ",", "NQ_", ",", "RQs_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SU4S", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"SU4GatePIParMove", "[", 
            RowBox[{
             RowBox[{"DataSet", "[", 
              RowBox[{"[", 
               RowBox[{"n", "-", 
                RowBox[{"Quotient", "[", 
                 RowBox[{"n", ",", "2"}], "]"}], "+", "i"}], "]"}], "]"}], 
             ",", 
             RowBox[{"RQs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", 
             RowBox[{"RQs", "[", 
              RowBox[{"[", 
               RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"2", "*", 
              RowBox[{"Quotient", "[", 
               RowBox[{"NQ", ",", "2"}], "]"}]}], ",", "2"}], "}"}]}], "]"}], 
         "]"}]}], ";", 
       RowBox[{"Join", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OddQ", "[", "j", "]"}], ",", 
          RowBox[{"CircRydbergHub", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"SU4S", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "j"}], "]"}], "]"}], "]"}], ",", "RydDev", 
            ",", 
            RowBox[{"Parallel", "->", "True"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OddQ", "[", "NQ", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"SU4S", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "j"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["SparePI", 
                   RowBox[{"RQs", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]], ",", 
                  RowBox[{
                   SubscriptBox["Wait", "0"], "[", "MoveTime", "]"}]}], 
                 "}"}]}], "]"}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Flatten", "[", 
              RowBox[{"SU4S", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "j"}], "]"}], "]"}], "]"}], "}"}]}], 
           "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->
  "In[585]:=",ExpressionUUID->"160f339b-1ccf-4ffa-b529-a53ed265e97a"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.904979506015484*^9, 3.904980169606222*^9, 
  3.9049819522938476`*^9, 3.9049820977273664`*^9, 3.9049823304053288`*^9, 
  3.904982582438953*^9, 3.9049830915434203`*^9},
 CellLabel->
  "Out[585]=",ExpressionUUID->"814d5e60-2c6a-453c-8eb3-6bb1035a3be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.904979506015484*^9, 3.904980169606222*^9, 
  3.9049819522938476`*^9, 3.9049820977273664`*^9, 3.9049823304053288`*^9, 
  3.904982582438953*^9, 3.9049830915518312`*^9},
 CellLabel->
  "Out[586]=",ExpressionUUID->"3a629f56-44d3-45bd-b35b-1bafd9ff9833"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.904979506015484*^9, 3.904980169606222*^9, 
  3.9049819522938476`*^9, 3.9049820977273664`*^9, 3.9049823304053288`*^9, 
  3.904982582438953*^9, 3.9049830915581927`*^9},
 CellLabel->
  "Out[587]=",ExpressionUUID->"f5c7db73-b66b-4ec2-912f-1aa2aa354e6e"],

Cell[BoxData["300"], "Output",
 CellChangeTimes->{3.904979506015484*^9, 3.904980169606222*^9, 
  3.9049819522938476`*^9, 3.9049820977273664`*^9, 3.9049823304053288`*^9, 
  3.904982582438953*^9, 3.904983091562456*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"39b0e2ba-0091-44f0-a1bf-5ee85fc9c369"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QVLayerARPMove", "[", 
    RowBox[{"DataSet_", ",", "NQ_", ",", "RQs_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SU4GateARPMove", "[", 
        RowBox[{
         RowBox[{"DataSet", "[", 
          RowBox[{"[", 
           RowBox[{"n", "-", 
            RowBox[{"Quotient", "[", 
             RowBox[{"n", ",", "2"}], "]"}], "+", "i"}], "]"}], "]"}], ",", 
         RowBox[{"RQs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", 
         RowBox[{"RQs", "[", 
          RowBox[{"[", 
           RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"2", "*", 
          RowBox[{"Quotient", "[", 
           RowBox[{"NQ", ",", "2"}], "]"}]}], ",", "2"}], "}"}]}], "]"}], ",",
      "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9034242205919013`*^9, 3.90342424310633*^9}, {
  3.9034409654257812`*^9, 3.903440968707676*^9}, {3.9034410173388443`*^9, 
  3.903441018645773*^9}, {3.9034415718568296`*^9, 3.90344158404119*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d0bd97a7-802b-4922-b5a6-236210d0ea0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InitCirc", "[", 
    RowBox[{"Reg_", ",", "MaxNQ_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["Init", "b"], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", 
       RowBox[{"MaxNQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Generate", " ", "circuit", " ", "of", " ", "m"}], "=", 
    RowBox[{"d", " ", "layers", " ", "of", " ", "SU", 
     RowBox[{"(", "4", ")"}], " ", "gates"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QVCirc", "[", 
   RowBox[{"DataSet_", ",", "NQ_", ",", "ConnectivityRule_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<ARPA2A\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerARPA2A", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<ARPSWAP\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerARPSWAP", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<ARPMove\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerARPMove", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<PIA2A\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerPIA2A", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<PISWAP\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerPISWAP", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<PIMove\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerPIMove", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<PIParMove\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerPIParMove", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"ConnectivityRule", ",", "\"\<ARPParMove\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RQS", "=", 
        RowBox[{"NRandQbits", "[", 
         RowBox[{"NQ", ",", "i"}], "]"}]}], ";", 
       RowBox[{"QVLayerARPParMove", "[", 
        RowBox[{"DataSet", ",", "NQ", ",", "RQS", ",", "i"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"NQ", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9036024393891897`*^9, 3.9036024446987076`*^9}, {
  3.903603833879928*^9, 3.9036038397873125`*^9}, {3.9036039583938475`*^9, 
  3.903603975218149*^9}, {3.9036050851952734`*^9, 3.9036050877676463`*^9}, {
  3.9036158815251513`*^9, 3.903615907098069*^9}, {3.903617069848643*^9, 
  3.9036170893337793`*^9}, {3.9036171534421606`*^9, 3.9036172638226814`*^9}, {
  3.903617297678636*^9, 3.903617424480298*^9}, {3.9049795518673873`*^9, 
  3.9049795817278023`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"8f5bd6d7-e061-4ee3-ac90-075487e82e1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generating", " ", "and", " ", "applying", " ", "the", " ", "circuits", 
    " ", "to", " ", "a", " ", "register", " ", "and", " ", "getting", " ", 
    "the", " ", "probability", " ", "of", " ", "a", " ", "heavy", " ", 
    "output"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Perfect", " ", "renormalisation", " ", "on", " ", "a", " ", "given", " ",
      "circuit"}], ",", " ", 
    RowBox[{
    "unsure", " ", "if", " ", "this", " ", "is", " ", "best", " ", "or", " ", 
     "if", " ", "taking", " ", "an", " ", "average", " ", "across", " ", 
     "the", " ", "NCirc", " ", "is", " ", "a", " ", "more", " ", 
     "\"\<accurate\>\"", " ", "scheme"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"QVProcedure", "[", 
     RowBox[{
     "DataSet_", ",", "NQ_", ",", " ", "MaxNQ_", ",", "NReps_", ",", "Reg_", 
      ",", "ConnectivityRule_"}], "]"}], ":=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Circ1", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"QVCirc", "[", 
           RowBox[{
            RowBox[{"DataSet", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"NQ", "*", 
                 RowBox[{"Quotient", "[", 
                  RowBox[{"NQ", ",", "2"}], "]"}], "*", "Rep"}], "+", "1"}], ";;", 
               RowBox[{"NQ", "*", 
                RowBox[{"Quotient", "[", 
                 RowBox[{"NQ", ",", "2"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"Rep", "+", "1"}], ")"}]}]}], "]"}], "]"}], ",", 
            "NQ", ",", "ConnectivityRule"}], "]"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Initialisation", "=", 
        RowBox[{"{", 
         RowBox[{"InitCirc", "[", 
          RowBox[{"Reg", ",", "MaxNQ"}], "]"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"InitCircuit", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"Initialisation", ",", "Circ1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CircNoisy", "=", 
        RowBox[{"ExtractCircuit", "[", 
         RowBox[{"InsertCircuitNoise", "[", 
          RowBox[{"InitCircuit", ",", "RydDev", ",", 
           RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CircModel", "=", 
        RowBox[{"ExtractCircuit", "[", 
         RowBox[{"GetCircuitSchedule", "[", 
          RowBox[{"Circ1", ",", "RydDev", ",", 
           RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SetQuregMatrix", "[", 
        RowBox[{"Reg", ",", 
         RowBox[{"RandomMixState", "[", "MaxNQ", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ApplyCircuit", "[", 
        RowBox[{"Reg", ",", "CircNoisy"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PoutcomesNoisy", "=", 
        RowBox[{"CalcProbOfAllOutcomes", "[", 
         RowBox[{"Reg", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"NQ", "-", "1"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "PoutcomesNoisy", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"InitZeroState", "[", "Reg", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"DrawCircuit", "[", "CircModel", "]"}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ApplyCircuit", "[", 
        RowBox[{"Reg", ",", "CircModel"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PoutcomesModel", "=", 
        RowBox[{"CalcProbOfAllOutcomes", "[", 
         RowBox[{"Reg", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"NQ", "-", "1"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"PNoLoss", "=", 
        RowBox[{"Total", "[", "PoutcomesNoisy", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"PoutcomesNoisyRen", "=", 
        RowBox[{"PoutcomesNoisy", "/", "PNoLoss"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "NQ", ",", " ", "\"\< Model Outcomes Probabilities \>\"", ",", 
           "PoutcomesModel", ",", "\"\< Noisy Outcome Probabilities \>\"", 
           ",", "PoutcomesNoisy"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"HeavyOutputs", "=", 
        RowBox[{"CheckHeavyOutputProb", "[", 
         RowBox[{"PoutcomesNoisy", ",", "PoutcomesModel"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"HeavyOutputsRen", "=", 
        RowBox[{"CheckHeavyOutputProb", "[", 
         RowBox[{"PoutcomesNoisyRen", ",", "PoutcomesModel"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Total", "[", "HeavyOutputs", "]"}], ",", 
         RowBox[{"Total", "[", "HeavyOutputsRen", "]"}], ",", 
         RowBox[{"1", "-", "PNoLoss"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Rep", ",", "0", ",", 
        RowBox[{"NReps", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Put", " ", "everything", " ", "together", " ", "and", " ", "get", " ", 
     "a", " ", "value", " ", "for", " ", "Quantum", " ", "Volume"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"QVCalc", "[", 
      RowBox[{
      "DataSet_", ",", "MaxNQ_", ",", "NReps_", ",", "ConnectivityRule_"}], 
      "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]", "=", 
         RowBox[{"CreateDensityQureg", "[", "MaxNQ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"HOP", "=", 
         RowBox[{"QVProcedure", "[", 
          RowBox[{
           RowBox[{"DSSplice", "=", 
            RowBox[{"DataSet", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{"a", ",", "2"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "0", ",", 
                    RowBox[{"NQ", "-", "1"}]}], "}"}]}], "]"}], "]"}], "*", 
                  "NReps"}], ")"}], "+", "1"}], " ", ";;", 
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"a", "*", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{"a", ",", "2"}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "0", ",", "NQ"}], "}"}]}], "]"}], "*", 
                 "NReps"}], "]"}]}], "]"}], "]"}]}], ",", "NQ", ",", "MaxNQ", 
           ",", "NReps", ",", "\[Rho]", ",", "ConnectivityRule"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"DestroyAllQuregs", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"MHOP", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"HOP", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"MHOPRen", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"HOP", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"MPLoss", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"HOP", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]PLoss", "=", 
         RowBox[{
          RowBox[{"StandardDeviation", "[", 
           RowBox[{"HOP", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"NReps", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]", "=", 
         RowBox[{
          RowBox[{"StandardDeviation", "[", 
           RowBox[{"HOP", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"NReps", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]Ren", "=", 
         RowBox[{
          RowBox[{"StandardDeviation", "[", 
           RowBox[{"HOP", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"NReps", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"MHOP", "-", 
              RowBox[{"2", "\[Sigma]"}]}], ")"}], "]"}], ">", 
           FractionBox["2", "3"]}], ",", 
          RowBox[{"VQ", "=", 
           SuperscriptBox["2", "NQ"]}], ",", 
          RowBox[{"VQ", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"MHOPRen", "-", 
              RowBox[{"2", "\[Sigma]Ren"}]}], ")"}], "]"}], ">", 
           FractionBox["2", "3"]}], ",", 
          RowBox[{"VQRen", "=", 
           SuperscriptBox["2", "NQ"]}], ",", 
          RowBox[{"VQRen", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Layer\>\"", ",", "NQ", ",", "VQ", ",", "VQRen"}], 
          "}"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"NQ", ",", "MHOP", ",", 
            RowBox[{"2", "\[Sigma]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NQ", ",", "MHOPRen", ",", 
            RowBox[{"2", "\[Sigma]Ren"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"NQ", ",", "MPLoss", ",", "\[Sigma]PLoss"}], "}"}]}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"NQ", ",", "2", ",", "MaxNQ", ",", "1"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9036152371461215`*^9, 3.903615262921678*^9}, {
  3.9036156178451767`*^9, 3.903615621905425*^9}, {3.903615775181942*^9, 
  3.9036158221391172`*^9}, {3.9049747134887824`*^9, 3.904974714540086*^9}, {
  3.9049763478275194`*^9, 3.9049763622853503`*^9}, {3.904976408187929*^9, 
  3.9049764164060497`*^9}, {3.9049764468687*^9, 3.9049764534810534`*^9}, {
  3.9049802167189245`*^9, 3.9049802390992875`*^9}, {3.9049818749574537`*^9, 
  3.9049819337741647`*^9}, {3.9049826168586864`*^9, 3.9049826176910124`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"12f1ca1b-be95-44a2-b5ab-ff7b7b163c8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QVCalc", "[", 
  RowBox[{"data", ",", "9", ",", "2", ",", "\"\<PIParMove\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9049741863291483`*^9, 3.904974235871242*^9}, {
  3.904979853836957*^9, 3.9049798546331215`*^9}, {3.9049803643176966`*^9, 
  3.9049803658869467`*^9}, {3.904982354788396*^9, 3.904982355820116*^9}, {
  3.904983262548837*^9, 3.904983264005209*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"2ceaf464-7a3b-4f6a-91c4-c75ef543f85e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "2", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.904983266404299*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"abf40d32-30ca-42ff-a422-2ebbc6ab5bdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "3", ",", "8", ",", "8"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.904983268297344*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"24a83fda-6755-4d3f-8d81-8e12ef5c03f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "4", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.904983271411656*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"f27066dc-b524-4566-9a7f-5e65a20b2e47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "5", ",", "32", ",", "32"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.9049832751233263`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"e31e751f-7a5d-43a3-8283-c5185620de22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "6", ",", "64", ",", "64"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.9049832808675413`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"830132ef-3fef-4d86-b75e-527e7ffdfbf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "7", ",", "128", ",", "128"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.904983287462446*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"9584cab3-12a0-4b93-827a-580a3bcfaa9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "8", ",", "256", ",", "256"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.9049832970064645`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"fddf8ada-834d-4bfb-941a-7672d80abbcc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Layer\"\>", ",", "9", ",", "512", ",", "512"}], "}"}]], "Print",
 CellChangeTimes->{{3.904979438486685*^9, 3.9049794674756193`*^9}, 
   3.904979526433686*^9, 3.9049796435269485`*^9, 3.9049798556776013`*^9, 
   3.9049801797766857`*^9, {3.9049802288540406`*^9, 3.904980258382956*^9}, 
   3.9049803667448316`*^9, 3.904981961363634*^9, 3.9049820553569565`*^9, 
   3.9049821094710174`*^9, 3.9049822440950174`*^9, {3.904982347061167*^9, 
   3.904982365491211*^9}, {3.904982597108529*^9, 3.904982652026947*^9}, 
   3.904983112235628*^9, 3.904983307700266*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"05b4ecfd-576d-43a9-872b-099424ecccb8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0.6713462950255553`", ",", "0.2846992372405336`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.6931822795025104`", ",", "0.2939380866889796`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "0.0315026761910433`", ",", "0.000015138093797528357`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "0.8264162516341875`", ",", "0.13978679544869502`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.8565994226978577`", ",", "0.14581999856920047`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "0.0352137237239834`", ",", "0.0005243629365453207`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "0.7538202862541177`", ",", "0.21675684620813643`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.7918951060512837`", ",", "0.2280591526764465`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "0.04806515149336954`", ",", "0.0002150592565002396`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "5", ",", "0.8093521267250674`", ",", "0.0008908974076928467`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "0.8556194780861153`", ",", "0.0019277514957400147`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "0.05407437522587527`", ",", "0.0005449923442665324`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "0.7767918198959369`", ",", "0.050371177000254244`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.839265384923481`", ",", "0.056211635196859726`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "0.07442186083064911`", ",", "0.0009872227156566622`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "7", ",", "0.7746721955406014`", ",", "0.0024605945994982167`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0.8444290447911402`", ",", "0.004326736586257534`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "0.08260715730982371`", ",", "0.0008933388697645201`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "8", ",", "0.7384939933094976`", ",", "0.0038955992867491687`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "0.8317965362014167`", ",", "0.0034498631353745055`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "0.11217042935023464`", ",", "0.0005005483578182729`"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "0.7314928306268493`", ",", "0.018188594812835416`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0.8328644123667426`", ",", "0.020646388470242215`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9", ",", "0.12171459267521623`", ",", "0.00003312250148024629`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9049819854099007`*^9, 3.904982072032284*^9, 3.9049821235789375`*^9, 
   3.904982257933428*^9, {3.904982360014661*^9, 3.9049823780034456`*^9}, {
   3.9049826101700525`*^9, 3.9049826630383935`*^9}, 3.904983154218622*^9, 
   3.9049833077086067`*^9},
 CellLabel->
  "Out[599]=",ExpressionUUID->"f0d85bb5-1415-4041-af79-cd419aeeda87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalcCircuitMatrix", "[", 
  RowBox[{"ExtractCircuit", "[", 
   RowBox[{"GetCircuitSchedule", "[", 
    RowBox[{
     RowBox[{"{", 
      SubscriptBox["CZPIPar", 
       RowBox[{"0", ",", "1"}]], "}"}], ",", "RydDev", ",", 
     RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.904979663641651*^9, 3.9049797232573338`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"33e1a8fa-925e-40a6-ac33-6e2cdf8c62e0"],

Cell[BoxData[
 TemplateBox[{
  "InsertCircuitNoise", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Encountered gate \
\\\\\\\\!\\\\\\\\(\\\\\\\\*SubscriptBox[\\\\\\\\\\\\\\\"CZPIPar\\\\\\\\\\\\\\\
\", RowBox[{\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\"}]]\\\\\\\
\\) which is not supported by the given device specification. Note this may \
be due to preceding gates, if the spec contains constraints which depend on \
dynamic variables. See ?GetUnsupportedGates.\\\\\\\"\\\"}]\\)\"", 2, 339, 98, 
   21856813393737398218, "Local", "QuEST`InsertCircuitNoise"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.904979437923107*^9, 3.9049794669166236`*^9}, 
   3.9049795257553215`*^9, 3.904979643602729*^9, {3.9049797132972865`*^9, 
   3.90497972391426*^9}, 3.904982665047987*^9},
 CellLabel->
  "During evaluation of \
In[339]:=",ExpressionUUID->"3be6d038-a136-4168-af49-3d4951e22adc"],

Cell[BoxData[
 TemplateBox[{
  "ExtractCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?ExtractCircuit\\\\\
\\\"\\\"}]\\)\"", 2, 339, 99, 21856813393737398218, "Local", 
   "QuEST`ExtractCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.904979437923107*^9, 3.9049794669166236`*^9}, 
   3.9049795257553215`*^9, 3.904979643602729*^9, {3.9049797132972865`*^9, 
   3.90497972391426*^9}, 3.9049826650626802`*^9},
 CellLabel->
  "During evaluation of \
In[339]:=",ExpressionUUID->"1ea2abb1-64aa-4921-8b45-fc1938052930"],

Cell[BoxData[
 TemplateBox[{
  "CalcCircuitMatrix", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Circuit contained an unrecognised or \
unsupported gate: \
\\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"$Failed\\\\\\\\\\\\\\\"}]\\\
\\\\\\)\\\\\\\"\\\"}]\\)\"", 2, 339, 100, 21856813393737398218, "Local", 
   "QuEST`CalcCircuitMatrix"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.904979437923107*^9, 3.9049794669166236`*^9}, 
   3.9049795257553215`*^9, 3.904979643602729*^9, {3.9049797132972865`*^9, 
   3.90497972391426*^9}, 3.904982665075905*^9},
 CellLabel->
  "During evaluation of \
In[339]:=",ExpressionUUID->"aba7313c-8a5e-4188-83f1-7795cf88e5c4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.9049795411430984`*^9, 3.904979657971982*^9, {3.904979713349429*^9, 
   3.9049797239658794`*^9}, 3.9049826650870495`*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"a2b00c62-acd2-4b98-90b6-32a24fe15889"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ParallelLayer", "=", 
  RowBox[{"QVLayerPIParMove", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "200", "]"}], "]"}], ",", 
      RowBox[{"data", "[", 
       RowBox[{"[", "1000", "]"}], "]"}]}], "}"}], ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "0"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestRho", "=", 
   RowBox[{"CreateDensityQureg", "[", "9", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitZeroState", "[", "TestRho", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NoisyCirc", "=", 
  RowBox[{"InsertCircuitNoise", "[", 
   RowBox[{"ParallelLayer", ",", "RydDev", ",", 
    RowBox[{"ReplaceAliases", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ParCircSched", "=", 
  RowBox[{"GetCircuitSchedule", "[", 
   RowBox[{"ParallelLayer", ",", "RydDev", ",", 
    RowBox[{"ReplaceAliases", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyCircuit", "[", 
  RowBox[{"TestRho", ",", 
   RowBox[{"ExtractCircuit", "[", "ParCircSched", "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9034242846362906`*^9, 3.9034243021209717`*^9}, {
   3.9034243682685337`*^9, 3.9034244348637543`*^9}, {3.903439703429279*^9, 
   3.903439710055106*^9}, {3.9034401063798003`*^9, 3.9034401120089016`*^9}, {
   3.903440281022086*^9, 3.9034402897986174`*^9}, {3.9034406383222065`*^9, 
   3.903440641905593*^9}, {3.9034416951679015`*^9, 3.9034417115545144`*^9}, {
   3.903442181080386*^9, 3.9034421981274605`*^9}, {3.903442232961551*^9, 
   3.903442241991907*^9}, {3.903442325580459*^9, 3.9034424507764273`*^9}, {
   3.9034433325226316`*^9, 3.9034433755748854`*^9}, {3.9034434192413588`*^9, 
   3.90344346768495*^9}, {3.9034435095742264`*^9, 3.903443665091352*^9}, {
   3.9034438046905236`*^9, 3.903443893292336*^9}, {3.903443927958187*^9, 
   3.903443943264862*^9}, {3.903443989476727*^9, 3.903444081321884*^9}, {
   3.903444214896837*^9, 3.9034443717619905`*^9}, {3.903444429087962*^9, 
   3.9034444522834005`*^9}, {3.903444516122985*^9, 3.903444555718686*^9}, {
   3.9034446340310683`*^9, 3.903444663582247*^9}, {3.903445080843034*^9, 
   3.903445122263195*^9}, {3.9034451641459856`*^9, 3.903445247334509*^9}, {
   3.9034452800870104`*^9, 3.9034453454653854`*^9}, {3.9034454258372164`*^9, 
   3.9034454493374386`*^9}, {3.903445479815341*^9, 3.9034455537897053`*^9}, {
   3.90344566255406*^9, 3.903445683974117*^9}, {3.903445715428181*^9, 
   3.903445750512638*^9}, {3.9034459362764444`*^9, 3.903445953586826*^9}, {
   3.903445989929237*^9, 3.9034460021797676`*^9}, {3.9034461040227766`*^9, 
   3.9034461096291347`*^9}, {3.9034463437172375`*^9, 
   3.9034463850282254`*^9}, {3.9034470050037355`*^9, 
   3.9034470160389028`*^9}, {3.903447049469549*^9, 3.9034471906332273`*^9}, {
   3.903447242886093*^9, 3.9034472432787523`*^9}, {3.9034473067441835`*^9, 
   3.903447331990593*^9}, {3.9034473988023963`*^9, 3.9034474600078664`*^9}, {
   3.90344751891194*^9, 3.903447520833371*^9}, {3.903447611654488*^9, 
   3.903447613964037*^9}, {3.9034477900185947`*^9, 3.903447804276531*^9}, {
   3.903447846241626*^9, 3.9034478471866465`*^9}, {3.9034495554099817`*^9, 
   3.903449572817965*^9}, {3.9035017323510885`*^9, 3.9035017329425807`*^9}, {
   3.903502133677329*^9, 3.9035021437555075`*^9}, {3.9035035256413918`*^9, 
   3.9035036480817223`*^9}, {3.9035039878752747`*^9, 3.9035040492153234`*^9}, 
   3.903504137268469*^9, {3.9035928952629967`*^9, 3.9035929454847264`*^9}, {
   3.903592987524225*^9, 3.903593108837535*^9}, {3.9035931707616854`*^9, 
   3.903593208982791*^9}, {3.903593301457305*^9, 3.9035933256885347`*^9}, {
   3.903593870377265*^9, 3.9035939812758875`*^9}, {3.903594049580821*^9, 
   3.903594067554844*^9}, {3.903595053619876*^9, 3.903595079896531*^9}, {
   3.903600981894334*^9, 3.903600997784979*^9}, {3.903601046213812*^9, 
   3.903601099273239*^9}, {3.903601408834978*^9, 3.903601426717827*^9}, {
   3.903602989295418*^9, 3.9036030484188538`*^9}, {3.903603119248971*^9, 
   3.9036031230232134`*^9}, {3.903603155129772*^9, 3.903603158474721*^9}, 
   3.903603207550898*^9, {3.9036032440632353`*^9, 3.9036032704338636`*^9}, {
   3.903603309229307*^9, 3.9036033366214733`*^9}, {3.903603473114338*^9, 
   3.9036034877422943`*^9}, {3.9036159202196674`*^9, 3.903615961336343*^9}, {
   3.9036162869410973`*^9, 3.903616290208296*^9}, 3.9036167934990993`*^9, 
   3.9036179516925917`*^9, {3.903618032368924*^9, 3.9036180352636566`*^9}, {
   3.903618332577476*^9, 3.9036183335542183`*^9}, {3.903618520008212*^9, 
   3.903618521622857*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"7a548349-74fa-4c9a-8079-eadf4b6f3eb8"],

Cell[BoxData[
 RowBox[{"QVLayerPIParMove", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"['Rx', [0.0], [1.7900363404195456]]\"\>", 
       ",", "\<\"['Ry', [0.0], [1.4670430226234354]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-2.484570045260593]]\"\>", 
       ",", "\<\"['Rx', [1.0], [1.8861283750123876]]\"\>", 
       ",", "\<\"['Ry', [1.0], [2.5569424815452573]]\"\>", 
       ",", "\<\"['Rx', [1.0], [2.509739273829867]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [2.2117766315814684]]\"\>", 
       ",", "\<\"['Ry', [0.0], [3.141592653589793]]\"\>", 
       ",", "\<\"['Rx', [1.0], [0.37769195058327476]]\"\>", 
       ",", "\<\"['Ry', [1.0], [-1.5707963267948966]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [1.2196690476758798]]\"\>", 
       ",", "\<\"['Ry', [0.0], [1.5707963267948966]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-1.5707963267948966]]\"\>", 
       ",", "\<\"['Rx', [1.0], [1.5707963267948966]]\"\>", 
       ",", "\<\"['Ry', [1.0], [1.5707963267948966]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [1.672338589319752]]\"\>", 
       ",", "\<\"['Ry', [0.0], [0.7530375632248356]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-2.653585823624521]]\"\>", 
       ",", "\<\"['Rx', [1.0], [0.6372743114520656]]\"\>", 
       ",", "\<\"['Ry', [1.0], [2.3118928078424674]]\"\>", 
       ",", "\<\"['Rx', [1.0], [-2.1244988388046213]]\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"['Rx', [0.0], [-1.800315039289523]]\"\>", 
       ",", "\<\"['Ry', [0.0], [1.2718519181503427]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-1.008282709541314]]\"\>", 
       ",", "\<\"['Rx', [1.0], [2.3115020985994335]]\"\>", 
       ",", "\<\"['Ry', [1.0], [1.5727767539363633]]\"\>", 
       ",", "\<\"['Rx', [1.0], [-1.2363677858856938]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [2.1838751507695022]]\"\>", 
       ",", "\<\"['Ry', [0.0], [3.141592653589793]]\"\>", 
       ",", "\<\"['Rx', [1.0], [0.08047640854824678]]\"\>", 
       ",", "\<\"['Ry', [1.0], [-1.5707963267948968]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [1.8392828206538194]]\"\>", 
       ",", "\<\"['Ry', [0.0], [1.5707963267948963]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-1.5707963267948966]]\"\>", 
       ",", "\<\"['Rx', [1.0], [1.5707963267948966]]\"\>", 
       ",", "\<\"['Ry', [1.0], [1.5707963267948966]]\"\>", 
       ",", "\<\"['CZ', [0.0, 1.0], []]\"\>", 
       ",", "\<\"['Rx', [0.0], [-1.9660531239738477]]\"\>", 
       ",", "\<\"['Ry', [0.0], [1.7008475322590162]]\"\>", 
       ",", "\<\"['Rx', [0.0], [-2.552028929075849]]\"\>", 
       ",", "\<\"['Rx', [1.0], [-2.488052553022853]]\"\>", 
       ",", "\<\"['Ry', [1.0], [2.485809942797934]]\"\>", 
       ",", "\<\"['Rx', [1.0], [2.1499700971619315]]\"\>"}], "}"}]}], "}"}], 
   ",", "5", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", "0"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.9035041423798237`*^9, 3.903593109818252*^9, 
   3.903593209837823*^9, 3.9035932816621885`*^9, 3.9035933299102592`*^9, {
   3.903593921592351*^9, 3.9035939818343816`*^9}, {3.903594068078723*^9, 
   3.903594081801877*^9}, 3.9035950803494205`*^9, 3.9036030497314863`*^9, 
   3.903603124240114*^9, 3.903603159159419*^9, {3.9036032538258233`*^9, 
   3.903603271690155*^9}, 3.9036033130237875`*^9, {3.9036162683843575`*^9, 
   3.9036162908831277`*^9}, 3.903617953940434*^9, 3.903618036055608*^9, {
   3.903618309030724*^9, 3.903618334782697*^9}, 3.903618429816983*^9, 
   3.903618522412156*^9, 3.904974320396457*^9, 3.904976154987224*^9, {
   3.9049790571884737`*^9, 3.9049790834896317`*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"6068c8e5-e241-465b-b103-8795b4ec8d4e"],

Cell[BoxData[
 TemplateBox[{
  "InsertCircuitNoise", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?InsertCircuitNoise\
\\\\\\\"\\\"}]\\)\"", 2, 428, 510, 21856738512235847568, "Local", 
   "QuEST`InsertCircuitNoise"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.904974320404772*^9, 3.9049761550042048`*^9, {3.9049790571539*^9, 
   3.9049790835104227`*^9}},
 CellLabel->
  "During evaluation of \
In[425]:=",ExpressionUUID->"748e9be4-e4ae-4d2b-becb-2621e3c843dc"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.9035041423798237`*^9, 3.903593109818252*^9, 
   3.903593209837823*^9, 3.9035932816621885`*^9, 3.9035933299102592`*^9, {
   3.903593921592351*^9, 3.9035939818343816`*^9}, {3.903594068078723*^9, 
   3.903594081801877*^9}, 3.9035950803494205`*^9, 3.9036030497314863`*^9, 
   3.903603124240114*^9, 3.903603159159419*^9, {3.9036032538258233`*^9, 
   3.903603271690155*^9}, 3.9036033130237875`*^9, {3.9036162683843575`*^9, 
   3.9036162908831277`*^9}, 3.903617953940434*^9, 3.903618036055608*^9, {
   3.903618309030724*^9, 3.903618334782697*^9}, 3.903618429816983*^9, 
   3.903618522412156*^9, 3.904974320396457*^9, 3.904976154987224*^9, {
   3.9049790571884737`*^9, 3.9049790835281925`*^9}},
 CellLabel->
  "Out[428]=",ExpressionUUID->"63b1d30c-665f-4c52-9001-33a38677e86f"],

Cell[BoxData[
 TemplateBox[{
  "GetCircuitSchedule", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?GetCircuitSchedule\
\\\\\\\"\\\"}]\\)\"", 2, 429, 511, 21856738512235847568, "Local", 
   "QuEST`GetCircuitSchedule"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.904974320404772*^9, 3.9049761550042048`*^9, {3.9049790571539*^9, 
   3.904979083536275*^9}},
 CellLabel->
  "During evaluation of \
In[425]:=",ExpressionUUID->"99ca9cc0-57ae-4577-95ad-44ab904c59a8"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.9035041423798237`*^9, 3.903593109818252*^9, 
   3.903593209837823*^9, 3.9035932816621885`*^9, 3.9035933299102592`*^9, {
   3.903593921592351*^9, 3.9035939818343816`*^9}, {3.903594068078723*^9, 
   3.903594081801877*^9}, 3.9035950803494205`*^9, 3.9036030497314863`*^9, 
   3.903603124240114*^9, 3.903603159159419*^9, {3.9036032538258233`*^9, 
   3.903603271690155*^9}, 3.9036033130237875`*^9, {3.9036162683843575`*^9, 
   3.9036162908831277`*^9}, 3.903617953940434*^9, 3.903618036055608*^9, {
   3.903618309030724*^9, 3.903618334782697*^9}, 3.903618429816983*^9, 
   3.903618522412156*^9, 3.904974320396457*^9, 3.904976154987224*^9, {
   3.9049790571884737`*^9, 3.9049790835530767`*^9}},
 CellLabel->
  "Out[429]=",ExpressionUUID->"2cab142e-571b-463a-9918-7d7dc33c2cf6"],

Cell[BoxData[
 TemplateBox[{
  "DrawCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See \
?DrawCircuit\\\\\\\"\\\"}]\\)\"", 2, 430, 512, 21856738512235847568, "Local", 
   "QuEST`DrawCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.904974320404772*^9, 3.9049761550042048`*^9, {3.9049790571539*^9, 
   3.9049790835530767`*^9}},
 CellLabel->
  "During evaluation of \
In[425]:=",ExpressionUUID->"3f567afc-f4f9-4b01-a8c3-78937544b63e"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.9035041423798237`*^9, 3.903593109818252*^9, 
   3.903593209837823*^9, 3.9035932816621885`*^9, 3.9035933299102592`*^9, {
   3.903593921592351*^9, 3.9035939818343816`*^9}, {3.903594068078723*^9, 
   3.903594081801877*^9}, 3.9035950803494205`*^9, 3.9036030497314863`*^9, 
   3.903603124240114*^9, 3.903603159159419*^9, {3.9036032538258233`*^9, 
   3.903603271690155*^9}, 3.9036033130237875`*^9, {3.9036162683843575`*^9, 
   3.9036162908831277`*^9}, 3.903617953940434*^9, 3.903618036055608*^9, {
   3.903618309030724*^9, 3.903618334782697*^9}, 3.903618429816983*^9, 
   3.903618522412156*^9, 3.904974320396457*^9, 3.904976154987224*^9, {
   3.9049790571884737`*^9, 3.904979083570115*^9}},
 CellLabel->
  "Out[430]=",ExpressionUUID->"bddf0f0f-f716-41d4-b18a-d7a1566a8df7"],

Cell[BoxData[
 TemplateBox[{
  "ExtractCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?ExtractCircuit\\\\\
\\\"\\\"}]\\)\"", 2, 431, 513, 21856738512235847568, "Local", 
   "QuEST`ExtractCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.904974320404772*^9, 3.9049761550042048`*^9, {3.9049790571539*^9, 
   3.90497908357858*^9}},
 CellLabel->
  "During evaluation of \
In[425]:=",ExpressionUUID->"c9f0a800-c0b9-47e4-8f79-4215cde1b97e"],

Cell[BoxData[
 TemplateBox[{
  "ApplyCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Invalid arguments. See ?ApplyCircuit\\\\\\\
\"\\\"}]\\)\"", 2, 431, 514, 21856738512235847568, "Local", 
   "QuEST`ApplyCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.904974320404772*^9, 3.9049761550042048`*^9, {3.9049790571539*^9, 
   3.904979083586655*^9}},
 CellLabel->
  "During evaluation of \
In[425]:=",ExpressionUUID->"968431c9-6fc2-4f2d-a9b9-4afbdc667e5d"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.9035041423798237`*^9, 3.903593109818252*^9, 
   3.903593209837823*^9, 3.9035932816621885`*^9, 3.9035933299102592`*^9, {
   3.903593921592351*^9, 3.9035939818343816`*^9}, {3.903594068078723*^9, 
   3.903594081801877*^9}, 3.9035950803494205`*^9, 3.9036030497314863`*^9, 
   3.903603124240114*^9, 3.903603159159419*^9, {3.9036032538258233`*^9, 
   3.903603271690155*^9}, 3.9036033130237875`*^9, {3.9036162683843575`*^9, 
   3.9036162908831277`*^9}, 3.903617953940434*^9, 3.903618036055608*^9, {
   3.903618309030724*^9, 3.903618334782697*^9}, 3.903618429816983*^9, 
   3.903618522412156*^9, 3.904974320396457*^9, 3.904976154987224*^9, {
   3.9049790571884737`*^9, 3.9049790836033635`*^9}},
 CellLabel->
  "Out[431]=",ExpressionUUID->"9d0fcaec-f210-4a92-b839-95f4a5e1eb8e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9035939945403137`*^9, 
  3.9035939974427576`*^9}},ExpressionUUID->"d7bebbc9-1051-4b8b-b6ed-\
dd6bb4c78f65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ParallelLayerOld", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", "1.7900363404195456`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", "1.8861283750123876`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", 
       RowBox[{"-", "1.800315039289523`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", "2.3115020985994335`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Ry", "0"], "[", "1.4670430226234354`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "1"], "[", "2.5569424815452573`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "2"], "[", "1.2718519181503427`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "3"], "[", "1.5727767539363633`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", 
       RowBox[{"-", "2.484570045260593`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", "2.509739273829867`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", 
       RowBox[{"-", "1.008282709541314`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", 
       RowBox[{"-", "1.2363677858856938`"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["CZARPPar", 
       RowBox[{"0", ",", "1"}]], ",", 
      SubscriptBox["CZARPPar", 
       RowBox[{"2", ",", "3"}]], ",", 
      SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", "2.2117766315814684`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", "0.37769195058327476`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", "2.1838751507695022`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", "0.08047640854824678`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "1"], "[", 
       RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "2"], "[", "3.141592653589793`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "3"], "[", 
       RowBox[{"-", "1.5707963267948968`"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["CZARPPar", 
       RowBox[{"0", ",", "1"}]], ",", 
      SubscriptBox["CZARPPar", 
       RowBox[{"2", ",", "3"}]], ",", 
      SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", "1.2196690476758798`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", "1.8392828206538194`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Ry", "0"], "[", "1.5707963267948966`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "2"], "[", "1.5707963267948963`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", 
       RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", 
       RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["CZARPPar", 
       RowBox[{"0", ",", "1"}]], ",", 
      SubscriptBox["CZARPPar", 
       RowBox[{"2", ",", "3"}]], ",", 
      SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", "1.672338589319752`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", "0.6372743114520656`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", 
       RowBox[{"-", "1.9660531239738477`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", 
       RowBox[{"-", "2.488052553022853`"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Ry", "0"], "[", "0.7530375632248356`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "1"], "[", "2.3118928078424674`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "2"], "[", "1.7008475322590162`", "]"}], ",", 
      RowBox[{
       SubscriptBox["Ry", "3"], "[", "2.485809942797934`", "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["Rx", "0"], "[", 
       RowBox[{"-", "2.653585823624521`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "1"], "[", 
       RowBox[{"-", "2.1244988388046213`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "2"], "[", 
       RowBox[{"-", "2.552028929075849`"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["Rx", "3"], "[", "2.1499700971619315`", "]"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.903593037981104*^9, 3.903593041725705*^9}, {
  3.9035932226047363`*^9, 3.903593243590783*^9}},
 CellLabel->
  "In[746]:=",ExpressionUUID->"39029e0e-2216-4a5e-b49f-d71f3de2b0d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.7900363404195456`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "1.8861283750123876`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.800315039289523`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "2.3115020985994335`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.4670430226234354`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "2.5569424815452573`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "1.2718519181503427`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "1.5727767539363633`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "2.484570045260593`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "2.509739273829867`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.008282709541314`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", 
      RowBox[{"-", "1.2363677858856938`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARPPar", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARPPar", 
      RowBox[{"2", ",", "3"}]], ",", 
     SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "2.2117766315814684`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "0.37769195058327476`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "2.1838751507695022`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "0.08047640854824678`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "3.141592653589793`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", 
      RowBox[{"-", "1.5707963267948968`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARPPar", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARPPar", 
      RowBox[{"2", ",", "3"}]], ",", 
     SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.2196690476758798`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "1.8392828206538194`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "1.5707963267948963`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARPPar", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARPPar", 
      RowBox[{"2", ",", "3"}]], ",", 
     SubscriptBox["SpareARP", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.672338589319752`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "0.6372743114520656`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.9660531239738477`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", 
      RowBox[{"-", "2.488052553022853`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "0.7530375632248356`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "2.3118928078424674`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "1.7008475322590162`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "2.485809942797934`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "2.653585823624521`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", 
      RowBox[{"-", "2.1244988388046213`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "2.552028929075849`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "2.1499700971619315`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.903504142397624*^9, 3.9035930424345284`*^9, {
   3.9035932351227856`*^9, 3.903593244393306*^9}},
 CellLabel->
  "Out[746]=",ExpressionUUID->"b1f1e8f0-6f0d-4a64-8309-5dedc7e81402"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0, 0.5}, {1, 0.5}}], LineBox[{{0, 1.5}, {1, 1.5}}], 
     LineBox[{{0, 2.5}, {1, 2.5}}], LineBox[{{0, 3.5}, {1, 3.5}}], 
     LineBox[{{0, 4.5}, {1, 4.5}}]}, {LineBox[{{1, 0.5}, {1.25, 0.5}}], 
     LineBox[{{1, 1.5}, {1.25, 1.5}}], LineBox[{{1, 2.5}, {1.25, 2.5}}], 
     LineBox[{{1, 3.5}, {1.25, 3.5}}], LineBox[{{1, 4.5}, {1.25, 4.5}}]}, {
     LineBox[{{1.25, 0.5}, {2.25, 0.5}}], LineBox[{{1.25, 1.5}, {2.25, 1.5}}],
      LineBox[{{1.25, 2.5}, {2.25, 2.5}}], 
     LineBox[{{1.25, 3.5}, {2.25, 3.5}}], 
     LineBox[{{1.25, 4.5}, {2.25, 4.5}}]}, {
     LineBox[{{2.25, 0.5}, {2.5, 0.5}}], LineBox[{{2.25, 1.5}, {2.5, 1.5}}], 
     LineBox[{{2.25, 2.5}, {2.5, 2.5}}], LineBox[{{2.25, 3.5}, {2.5, 3.5}}], 
     LineBox[{{2.25, 4.5}, {2.5, 4.5}}]}, {LineBox[{{2.5, 0.5}, {3.5, 0.5}}], 
     LineBox[{{2.5, 1.5}, {3.5, 1.5}}], LineBox[{{2.5, 2.5}, {3.5, 2.5}}], 
     LineBox[{{2.5, 3.5}, {3.5, 3.5}}], LineBox[{{2.5, 4.5}, {3.5, 4.5}}]}, {
     LineBox[{{3.5, 0.5}, {3.75, 0.5}}], LineBox[{{3.5, 1.5}, {3.75, 1.5}}], 
     LineBox[{{3.5, 2.5}, {3.75, 2.5}}], LineBox[{{3.5, 3.5}, {3.75, 3.5}}], 
     LineBox[{{3.5, 4.5}, {3.75, 4.5}}]}, {
     LineBox[{{3.75, 0.5}, {4.75, 0.5}}], LineBox[{{3.75, 1.5}, {4.75, 1.5}}],
      LineBox[{{3.75, 2.5}, {4.75, 2.5}}], 
     LineBox[{{3.75, 3.5}, {4.75, 3.5}}], 
     LineBox[{{3.75, 4.5}, {4.75, 4.5}}]}, {LineBox[{{4.75, 0.5}, {5., 0.5}}],
      LineBox[{{4.75, 1.5}, {5., 1.5}}], LineBox[{{4.75, 2.5}, {5., 2.5}}], 
     LineBox[{{4.75, 3.5}, {5., 3.5}}], LineBox[{{4.75, 4.5}, {5., 4.5}}]}, {
     LineBox[{{5., 0.5}, {6., 0.5}}], LineBox[{{5., 1.5}, {6., 1.5}}], 
     LineBox[{{5., 2.5}, {6., 2.5}}], LineBox[{{5., 3.5}, {6., 3.5}}], 
     LineBox[{{5., 4.5}, {6., 4.5}}]}, {LineBox[{{6., 0.5}, {6.25, 0.5}}], 
     LineBox[{{6., 1.5}, {6.25, 1.5}}], LineBox[{{6., 2.5}, {6.25, 2.5}}], 
     LineBox[{{6., 3.5}, {6.25, 3.5}}], LineBox[{{6., 4.5}, {6.25, 4.5}}]}, {
     LineBox[{{6.25, 0.5}, {7.25, 0.5}}], LineBox[{{6.25, 1.5}, {7.25, 1.5}}],
      LineBox[{{6.25, 2.5}, {7.25, 2.5}}], 
     LineBox[{{6.25, 3.5}, {7.25, 3.5}}], 
     LineBox[{{6.25, 4.5}, {7.25, 4.5}}]}, {
     LineBox[{{7.25, 0.5}, {7.5, 0.5}}], LineBox[{{7.25, 1.5}, {7.5, 1.5}}], 
     LineBox[{{7.25, 2.5}, {7.5, 2.5}}], LineBox[{{7.25, 3.5}, {7.5, 3.5}}], 
     LineBox[{{7.25, 4.5}, {7.5, 4.5}}]}, {LineBox[{{7.5, 0.5}, {8.5, 0.5}}], 
     LineBox[{{7.5, 1.5}, {8.5, 1.5}}], LineBox[{{7.5, 2.5}, {8.5, 2.5}}], 
     LineBox[{{7.5, 3.5}, {8.5, 3.5}}], LineBox[{{7.5, 4.5}, {8.5, 4.5}}]}, {
     LineBox[{{8.5, 0.5}, {8.75, 0.5}}], LineBox[{{8.5, 1.5}, {8.75, 1.5}}], 
     LineBox[{{8.5, 2.5}, {8.75, 2.5}}], LineBox[{{8.5, 3.5}, {8.75, 3.5}}], 
     LineBox[{{8.5, 4.5}, {8.75, 4.5}}]}, {
     LineBox[{{8.75, 0.5}, {9.75, 0.5}}], LineBox[{{8.75, 1.5}, {9.75, 1.5}}],
      LineBox[{{8.75, 2.5}, {9.75, 2.5}}], 
     LineBox[{{8.75, 3.5}, {9.75, 3.5}}], 
     LineBox[{{8.75, 4.5}, {9.75, 4.5}}]}, {
     LineBox[{{9.75, 0.5}, {10., 0.5}}], LineBox[{{9.75, 1.5}, {10., 1.5}}], 
     LineBox[{{9.75, 2.5}, {10., 2.5}}], LineBox[{{9.75, 3.5}, {10., 3.5}}], 
     LineBox[{{9.75, 4.5}, {10., 4.5}}]}, {LineBox[{{10., 0.5}, {11., 0.5}}], 
     LineBox[{{10., 1.5}, {11., 1.5}}], LineBox[{{10., 2.5}, {11., 2.5}}], 
     LineBox[{{10., 3.5}, {11., 3.5}}], LineBox[{{10., 4.5}, {11., 4.5}}]}, {
     LineBox[{{11., 0.5}, {11.25, 0.5}}], LineBox[{{11., 1.5}, {11.25, 1.5}}],
      LineBox[{{11., 2.5}, {11.25, 2.5}}], 
     LineBox[{{11., 3.5}, {11.25, 3.5}}], 
     LineBox[{{11., 4.5}, {11.25, 4.5}}]}, {
     LineBox[{{11.25, 0.5}, {12.25, 0.5}}], 
     LineBox[{{11.25, 1.5}, {12.25, 1.5}}], 
     LineBox[{{11.25, 2.5}, {12.25, 2.5}}], 
     LineBox[{{11.25, 3.5}, {12.25, 3.5}}], 
     LineBox[{{11.25, 4.5}, {12.25, 4.5}}]}, {
     LineBox[{{12.25, 0.5}, {12.5, 0.5}}], 
     LineBox[{{12.25, 1.5}, {12.5, 1.5}}], 
     LineBox[{{12.25, 2.5}, {12.5, 2.5}}], 
     LineBox[{{12.25, 3.5}, {12.5, 3.5}}], 
     LineBox[{{12.25, 4.5}, {12.5, 4.5}}]}, {
     LineBox[{{12.5, 0.5}, {13.5, 0.5}}], LineBox[{{12.5, 1.5}, {13.5, 1.5}}],
      LineBox[{{12.5, 2.5}, {13.5, 2.5}}], 
     LineBox[{{12.5, 3.5}, {13.5, 3.5}}], 
     LineBox[{{12.5, 4.5}, {13.5, 4.5}}]}, {
     LineBox[{{13.5, 0.5}, {13.75, 0.5}}], 
     LineBox[{{13.5, 1.5}, {13.75, 1.5}}], 
     LineBox[{{13.5, 2.5}, {13.75, 2.5}}], 
     LineBox[{{13.5, 3.5}, {13.75, 3.5}}], 
     LineBox[{{13.5, 4.5}, {13.75, 4.5}}]}, {
     LineBox[{{13.75, 0.5}, {14.75, 0.5}}], 
     LineBox[{{13.75, 1.5}, {14.75, 1.5}}], 
     LineBox[{{13.75, 2.5}, {14.75, 2.5}}], 
     LineBox[{{13.75, 3.5}, {14.75, 3.5}}], 
     LineBox[{{13.75, 4.5}, {14.75, 4.5}}]}, {
     LineBox[{{14.75, 0.5}, {15., 0.5}}], LineBox[{{14.75, 1.5}, {15., 1.5}}],
      LineBox[{{14.75, 2.5}, {15., 2.5}}], 
     LineBox[{{14.75, 3.5}, {15., 3.5}}], 
     LineBox[{{14.75, 4.5}, {15., 4.5}}]}, {LineBox[{{15., 0.5}, {16., 0.5}}],
      LineBox[{{15., 1.5}, {16., 1.5}}], LineBox[{{15., 2.5}, {16., 2.5}}], 
     LineBox[{{15., 3.5}, {16., 3.5}}], LineBox[{{15., 4.5}, {16., 4.5}}]}, {
     LineBox[{{16., 0.5}, {16.25, 0.5}}], LineBox[{{16., 1.5}, {16.25, 1.5}}],
      LineBox[{{16., 2.5}, {16.25, 2.5}}], 
     LineBox[{{16., 3.5}, {16.25, 3.5}}], 
     LineBox[{{16., 4.5}, {16.25, 4.5}}]}, {
     LineBox[{{16.25, 0.5}, {17.25, 0.5}}], 
     LineBox[{{16.25, 1.5}, {17.25, 1.5}}], 
     LineBox[{{16.25, 2.5}, {17.25, 2.5}}], 
     LineBox[{{16.25, 3.5}, {17.25, 3.5}}], 
     LineBox[{{16.25, 4.5}, {17.25, 4.5}}]}}, {{
     RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
     InsetBox["\<\"Rx\"\>", {0.5, 0.5}]}, {
     RectangleBox[{0.1, 1.1}, {0.9, 1.9}], 
     InsetBox["\<\"Rx\"\>", {0.5, 1.5}]}, {
     RectangleBox[{0.1, 2.1}, {0.9, 2.9}], 
     InsetBox["\<\"Rx\"\>", {0.5, 2.5}]}, {
     RectangleBox[{0.1, 3.1}, {0.9, 3.9}], 
     InsetBox["\<\"Rx\"\>", {0.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{1.125, 0}, {1.125, 5}}]}, {
     RectangleBox[{1.35, 0.1}, {2.15, 0.9}], 
     InsetBox["\<\"Ry\"\>", {1.75, 0.5}]}, {
     RectangleBox[{1.35, 1.1}, {2.15, 1.9}], 
     InsetBox["\<\"Ry\"\>", {1.75, 1.5}]}, {
     RectangleBox[{1.35, 2.1}, {2.15, 2.9}], 
     InsetBox["\<\"Ry\"\>", {1.75, 2.5}]}, {
     RectangleBox[{1.35, 3.1}, {2.15, 3.9}], 
     InsetBox["\<\"Ry\"\>", {1.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{2.375, 0}, {2.375, 5}}]}, {
     RectangleBox[{2.6, 0.1}, {3.4, 0.9}], 
     InsetBox["\<\"Rx\"\>", {3., 0.5}]}, {
     RectangleBox[{2.6, 1.1}, {3.4, 1.9}], 
     InsetBox["\<\"Rx\"\>", {3., 1.5}]}, {
     RectangleBox[{2.6, 2.1}, {3.4, 2.9}], 
     InsetBox["\<\"Rx\"\>", {3., 2.5}]}, {
     RectangleBox[{2.6, 3.1}, {3.4, 3.9}], InsetBox["\<\"Rx\"\>", {3., 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{3.625, 0}, {3.625, 5}}]}, {
     RectangleBox[{3.85, 0.1}, {4.65, 1.9}], 
     InsetBox["\<\"CZARPPar\"\>", {4.25, 1.}]}, {
     RectangleBox[{3.85, 2.1}, {4.65, 3.9}], 
     InsetBox["\<\"CZARPPar\"\>", {4.25, 3.}]}, {
     RectangleBox[{3.85, 4.1}, {4.65, 4.9}], 
     InsetBox["\<\"SpareARP\"\>", {4.25, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{4.875, 0}, {4.875, 5}}]}, {
     RectangleBox[{5.1, 0.1}, {5.9, 0.9}], 
     InsetBox["\<\"Rx\"\>", {5.5, 0.5}]}, {
     RectangleBox[{5.1, 1.1}, {5.9, 1.9}], 
     InsetBox["\<\"Rx\"\>", {5.5, 1.5}]}, {
     RectangleBox[{5.1, 2.1}, {5.9, 2.9}], 
     InsetBox["\<\"Rx\"\>", {5.5, 2.5}]}, {
     RectangleBox[{5.1, 3.1}, {5.9, 3.9}], 
     InsetBox["\<\"Rx\"\>", {5.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{6.125, 0}, {6.125, 5}}]}, {
     RectangleBox[{6.35, 0.1}, {7.15, 0.9}], 
     InsetBox["\<\"Ry\"\>", {6.75, 0.5}]}, {
     RectangleBox[{6.35, 1.1}, {7.15, 1.9}], 
     InsetBox["\<\"Ry\"\>", {6.75, 1.5}]}, {
     RectangleBox[{6.35, 2.1}, {7.15, 2.9}], 
     InsetBox["\<\"Ry\"\>", {6.75, 2.5}]}, {
     RectangleBox[{6.35, 3.1}, {7.15, 3.9}], 
     InsetBox["\<\"Ry\"\>", {6.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{7.375, 0}, {7.375, 5}}]}, {
     RectangleBox[{7.6, 0.1}, {8.4, 1.9}], 
     InsetBox["\<\"CZARPPar\"\>", {8., 1.}]}, {
     RectangleBox[{7.6, 2.1}, {8.4, 3.9}], 
     InsetBox["\<\"CZARPPar\"\>", {8., 3.}]}, {
     RectangleBox[{7.6, 4.1}, {8.4, 4.9}], 
     InsetBox["\<\"SpareARP\"\>", {8., 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{8.625, 0}, {8.625, 5}}]}, {
     RectangleBox[{8.85, 0.1}, {9.65, 0.9}], 
     InsetBox["\<\"Rx\"\>", {9.25, 0.5}]}, {
     RectangleBox[{8.85, 1.1}, {9.65, 1.9}], 
     InsetBox["\<\"Rx\"\>", {9.25, 1.5}]}, {
     RectangleBox[{8.85, 2.1}, {9.65, 2.9}], 
     InsetBox["\<\"Rx\"\>", {9.25, 2.5}]}, {
     RectangleBox[{8.85, 3.1}, {9.65, 3.9}], 
     InsetBox["\<\"Rx\"\>", {9.25, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{9.875, 0}, {9.875, 5}}]}, {
     RectangleBox[{10.1, 0.1}, {10.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 0.5}]}, {
     RectangleBox[{10.1, 1.1}, {10.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 1.5}]}, {
     RectangleBox[{10.1, 2.1}, {10.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 2.5}]}, {
     RectangleBox[{10.1, 3.1}, {10.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {10.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{11.125, 0}, {11.125, 5}}]}, {
     RectangleBox[{11.35, 0.1}, {12.15, 0.9}], 
     InsetBox["\<\"Rx\"\>", {11.75, 0.5}]}, {
     RectangleBox[{11.35, 2.1}, {12.15, 2.9}], 
     InsetBox["\<\"Rx\"\>", {11.75, 2.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{12.375, 0}, {12.375, 5}}]}, {
     RectangleBox[{12.6, 0.1}, {13.4, 1.9}], 
     InsetBox["\<\"CZARPPar\"\>", {13., 1.}]}, {
     RectangleBox[{12.6, 2.1}, {13.4, 3.9}], 
     InsetBox["\<\"CZARPPar\"\>", {13., 3.}]}, {
     RectangleBox[{12.6, 4.1}, {13.4, 4.9}], 
     InsetBox["\<\"SpareARP\"\>", {13., 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{13.625, 0}, {13.625, 5}}]}, {
     RectangleBox[{13.85, 0.1}, {14.65, 0.9}], 
     InsetBox["\<\"Rx\"\>", {14.25, 0.5}]}, {
     RectangleBox[{13.85, 1.1}, {14.65, 1.9}], 
     InsetBox["\<\"Rx\"\>", {14.25, 1.5}]}, {
     RectangleBox[{13.85, 2.1}, {14.65, 2.9}], 
     InsetBox["\<\"Rx\"\>", {14.25, 2.5}]}, {
     RectangleBox[{13.85, 3.1}, {14.65, 3.9}], 
     InsetBox["\<\"Rx\"\>", {14.25, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{14.875, 0}, {14.875, 5}}]}, {
     RectangleBox[{15.1, 0.1}, {15.9, 0.9}], 
     InsetBox["\<\"Ry\"\>", {15.5, 0.5}]}, {
     RectangleBox[{15.1, 1.1}, {15.9, 1.9}], 
     InsetBox["\<\"Ry\"\>", {15.5, 1.5}]}, {
     RectangleBox[{15.1, 2.1}, {15.9, 2.9}], 
     InsetBox["\<\"Ry\"\>", {15.5, 2.5}]}, {
     RectangleBox[{15.1, 3.1}, {15.9, 3.9}], 
     InsetBox["\<\"Ry\"\>", {15.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{16.125, 0}, {16.125, 5}}]}, {
     RectangleBox[{16.35, 0.1}, {17.15, 0.9}], 
     InsetBox["\<\"Rx\"\>", {16.75, 0.5}]}, {
     RectangleBox[{16.35, 1.1}, {17.15, 1.9}], 
     InsetBox["\<\"Rx\"\>", {16.75, 1.5}]}, {
     RectangleBox[{16.35, 2.1}, {17.15, 2.9}], 
     InsetBox["\<\"Rx\"\>", {16.75, 2.5}]}, {
     RectangleBox[{16.35, 3.1}, {17.15, 3.9}], 
     InsetBox["\<\"Rx\"\>", {16.75, 3.5}]}}},
  ImageSize->547.5,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.903504049698834*^9}, 3.903504142397624*^9, 3.9035930424345284`*^9, {
   3.9035932351227856`*^9, 3.903593244440569*^9}},
 CellLabel->
  "Out[747]=",ExpressionUUID->"3f17675e-012b-4c68-bfe8-0f632d8420f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9035040541730084`*^9, 3.9035040625408487`*^9}, {
  3.9035041154388046`*^9, 
  3.903504130504961*^9}},ExpressionUUID->"616f91b2-ed16-4d18-951f-\
ab4aeef4d5ec"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{
  3.9035018456363297`*^9, {3.9035019320314255`*^9, 3.9035019531078806`*^9}, 
   3.903502033065199*^9, 3.9035021443743277`*^9, 3.903502632858965*^9, 
   3.9035032355936947`*^9, 3.903503403697445*^9, {3.903503817366457*^9, 
   3.903503896406361*^9}, 3.9035039888898892`*^9, {3.903504020508437*^9, 
   3.9035040632731657`*^9}, 3.9035041162671285`*^9},
 CellLabel->
  "Out[723]=",ExpressionUUID->"abc2feff-8969-4abb-9cd4-a9d7f6b2d662"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.7900363404195456`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "1.8861283750123876`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.800315039289523`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "2.3115020985994335`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3115020985994335`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "1.4670430226234354`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "2.5569424815452573`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "1.2718519181503427`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "1.5727767539363633`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.868444580144691`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "2.484570045260593`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "2.509739273829867`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.008282709541314`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", 
        RowBox[{"-", "1.2363677858856938`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.378183853974558`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"0", ",", "1"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"2", ",", "3"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       SubscriptBox["Id", "4"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.378183853974558`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "2.2117766315814684`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "0.37769195058327476`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "2.1838751507695022`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "0.08047640854824678`", "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.589960485556027`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "3.141592653589793`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", 
        RowBox[{"-", "1.5707963267948968`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.73155313914582`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"0", ",", "1"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"2", ",", "3"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       SubscriptBox["Id", "4"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.73155313914582`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.2196690476758798`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "1.8392828206538194`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.57083595979964`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "1.5707963267948963`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.141632286594536`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.712428613389434`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"0", ",", "1"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["U", 
         RowBox[{"2", ",", "3"}]], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
       SubscriptBox["Id", "4"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.712428613389434`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.672338589319752`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "0.6372743114520656`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.9660531239738477`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", 
        RowBox[{"-", "2.488052553022853`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.20048116641229`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "0.7530375632248356`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "2.3118928078424674`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "1.7008475322590162`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "2.485809942797934`", "]"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.686291109210224`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "2.653585823624521`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", 
        RowBox[{"-", "2.1244988388046213`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "2.552028929075849`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "2.1499700971619315`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.339876932834745`", ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.903503880250921*^9},
 CellLabel->
  "In[697]:=",ExpressionUUID->"a35e5726-c563-4c7d-b5e9-739ed4dc5ce8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InsertCircuitNoise", "[", 
  RowBox[{
   RowBox[{"{", 
    SubscriptBox["SpareARP", "0"], "}"}], ",", "RydDev", ",", 
   RowBox[{"ReplaceAliases", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9035021011023235`*^9, 3.9035021727375283`*^9}, {
  3.9035022904857073`*^9, 3.9035024282726107`*^9}, {3.9035024624720955`*^9, 
  3.9035025137800217`*^9}, {3.903502559016129*^9, 3.903502586557233*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"dfd1b414-79c8-4639-b63c-fbfb472e82f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["Deph", "0"], "[", "4.3624142043174885`*^-7", "]"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Deph", "0"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "1"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "2"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "3"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "4"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "5"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "6"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "7"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "8"], "[", "0.`", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.903502105364645*^9, {3.903502149778014*^9, 3.903502173274914*^9}, {
   3.903502299770335*^9, 3.903502380841237*^9}, {3.9035024144409494`*^9, 
   3.903502458615303*^9}, {3.903502489431921*^9, 3.903502514237566*^9}, {
   3.9035025599602976`*^9, 3.90350258742031*^9}, 3.903502638428414*^9, 
   3.903503280141776*^9},
 CellLabel->
  "Out[660]=",ExpressionUUID->"ecef8919-c475-4fb8-9f25-a9857f07af44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InsertCircuitNoise"}]], "Input",
 CellChangeTimes->{{3.9035025180885196`*^9, 3.9035025219011307`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"8e485f2a-029d-4348-af9d-1d06365b063a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InsertCircuitNoise[circuit, spec] divides the \
circuit into scheduled subcircuits, then replaces them with rounds of active \
and passive noise, according to the given device specification. Scheduling is \
performed by GetCircuitSchedule[]. The output format is {{t1, active, \
passive}, ...}, which can be given directly to DrawCircuit[], \
ViewCircuitSchedule[] or ExtractCircuit[].\\nInsertCircuitNoise[{circ1, \
circ2, ...}, spec] uses the given list of sub-circuits (output format of \
GetCircuitColumns[]), assuming each contain gates which can be simultaneously \
performed.\\nInsertCircuitNoise[{{t1, circ1}, {t2, circ2}, ...} assumes the \
given schedule (output format of GetCircuitSchedule[]) of {t1,t2,...} for the \
rounds of gates and noise. These times can be symbolic.\\nInsertCircuitNoise \
accepts optional argument ReplaceAliases.\\nInsertCircuitNoise can handle \
gates with time-dependent noise operators and durations.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"InsertCircuitNoise", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`schedule", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_List"}], "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"QuEST`Private`areMonotonicTimes", "[", 
                    RowBox[{"QuEST`Private`schedule", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Throw", "[", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"InsertCircuitNoise", "::", "error"}], 
                    "MessageName"], ",", 
                    "\"The scheduled subcircuit times are not monotonic (and \
cannot be for any substitution of any symbolic times).\""}], "]"}], ";", 
                    "$Failed"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`times", ",", 
                    "QuEST`Private`subcircs", ",", "QuEST`Private`actives", 
                    ",", "QuEST`Private`passives"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`times", ",", 
                    "QuEST`Private`subcircs"}], "}"}], "=", 
                    
                    RowBox[{"Transpose", "[", "QuEST`Private`schedule", 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`actives", ",", 
                    "QuEST`Private`passives"}], "}"}], "=", 
                    RowBox[{"QuEST`Private`getNoiseFromSched", "[", 
                    
                    RowBox[{"QuEST`Private`subcircs", ",", 
                    "QuEST`Private`times", ",", "QuEST`Private`spec"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "QuEST`Private`times", "]"}], "=!=",
                     "0"}], ",", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"QuEST`Private`times", ",", "0"}], "]"}]}], "]"}],
                     ";", 
                    RowBox[{
                    RowBox[{"QuEST`Private`optionalReplaceAliases", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ReplaceAliases", "]"}], ",", 
                    "QuEST`Private`spec"}], "]"}], "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"QuEST`Private`times", ",", 
                    "QuEST`Private`actives", ",", "QuEST`Private`passives"}], 
                    "}"}], "]"}], "]"}]}]}], "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"InsertCircuitNoise", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`subcircs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__", "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`optionalReplaceAliases", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ReplaceAliases", "]"}], ",", 
                    "QuEST`Private`spec"}], "]"}], "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"QuEST`Private`getSchedAndNoiseFromSubcircs", "[", 
                    
                    RowBox[{"QuEST`Private`subcircs", ",", 
                    "QuEST`Private`spec"}], "]"}], "]"}], "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"InsertCircuitNoise", "[", 
                    
                    RowBox[{
                    "QuEST`Private`circ_List", ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`optionalReplaceAliases", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ReplaceAliases", "]"}], ",", 
                    "QuEST`Private`spec"}], "]"}], "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"QuEST`Private`getSchedAndNoiseFromSubcircs", "[", 
                    RowBox[{
                    
                    RowBox[{"GetCircuitColumns", "[", "QuEST`Private`circ", 
                    "]"}], ",", "QuEST`Private`spec"}], "]"}], "]"}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"InsertCircuitNoise", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", 
                    "InsertCircuitNoise", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"ReplaceAliases", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`InsertCircuitNoise\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InsertCircuitNoise[circuit, spec] divides the \
circuit into scheduled subcircuits, then replaces them with rounds of active \
and passive noise, according to the given device specification. Scheduling is \
performed by GetCircuitSchedule[]. The output format is {{t1, active, \
passive}, ...}, which can be given directly to DrawCircuit[], \
ViewCircuitSchedule[] or ExtractCircuit[].\\nInsertCircuitNoise[{circ1, \
circ2, ...}, spec] uses the given list of sub-circuits (output format of \
GetCircuitColumns[]), assuming each contain gates which can be simultaneously \
performed.\\nInsertCircuitNoise[{{t1, circ1}, {t2, circ2}, ...} assumes the \
given schedule (output format of GetCircuitSchedule[]) of {t1,t2,...} for the \
rounds of gates and noise. These times can be symbolic.\\nInsertCircuitNoise \
accepts optional argument ReplaceAliases.\\nInsertCircuitNoise can handle \
gates with time-dependent noise operators and durations.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "InsertCircuitNoise[circuit, spec] divides the circuit into scheduled \
subcircuits, then replaces them with rounds of active and passive noise, \
according to the given device specification. Scheduling is performed by \
GetCircuitSchedule[]. The output format is {{t1, active, passive}, ...}, \
which can be given directly to DrawCircuit[], ViewCircuitSchedule[] or \
ExtractCircuit[].\nInsertCircuitNoise[{circ1, circ2, ...}, spec] uses the \
given list of sub-circuits (output format of GetCircuitColumns[]), assuming \
each contain gates which can be simultaneously performed.\n\
InsertCircuitNoise[{{t1, circ1}, {t2, circ2}, ...} assumes the given schedule \
(output format of GetCircuitSchedule[]) of {t1,t2,...} for the rounds of \
gates and noise. These times can be symbolic.\nInsertCircuitNoise accepts \
optional argument ReplaceAliases.\nInsertCircuitNoise can handle gates with \
time-dependent noise operators and durations.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`InsertCircuitNoise, {QuEST`InsertCircuitNoise[
         Pattern[QuEST`Private`schedule, {
           Repeated[{
             Blank[], 
             Blank[List]}]}], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Catch[If[
           Not[
            QuEST`Private`areMonotonicTimes[
             Part[QuEST`Private`schedule, All, 1]]], 
           Throw[Message[
              MessageName[QuEST`InsertCircuitNoise, "error"], 
              "The scheduled subcircuit times are not monotonic (and cannot \
be for any substitution of any symbolic times)."]; $Failed]]; 
         Module[{QuEST`Private`times, QuEST`Private`subcircs, 
            QuEST`Private`actives, 
            QuEST`Private`passives}, {
             QuEST`Private`times, QuEST`Private`subcircs} = 
            Transpose[QuEST`Private`schedule]; {
             QuEST`Private`actives, QuEST`Private`passives} = 
            QuEST`Private`getNoiseFromSched[
             QuEST`Private`subcircs, QuEST`Private`times, QuEST`Private`spec]; 
           If[First[QuEST`Private`times] =!= 0, 
             PrependTo[QuEST`Private`times, 0]]; 
           QuEST`Private`optionalReplaceAliases[
             OptionValue[QuEST`Option`ReplaceAliases], QuEST`Private`spec][
             
             Transpose[{
              QuEST`Private`times, QuEST`Private`actives, 
               QuEST`Private`passives}]]]], QuEST`InsertCircuitNoise[
         Pattern[QuEST`Private`subcircs, {
           Repeated[{
             BlankSequence[]}]}], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Catch[
         QuEST`Private`optionalReplaceAliases[
          OptionValue[QuEST`Option`ReplaceAliases], QuEST`Private`spec][
          Transpose[
           QuEST`Private`getSchedAndNoiseFromSubcircs[
           QuEST`Private`subcircs, QuEST`Private`spec]]]], 
       QuEST`InsertCircuitNoise[
         Pattern[QuEST`Private`circ, 
          Blank[List]], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Catch[
         QuEST`Private`optionalReplaceAliases[
          OptionValue[QuEST`Option`ReplaceAliases], QuEST`Private`spec][
          Transpose[
           QuEST`Private`getSchedAndNoiseFromSubcircs[
            QuEST`GetCircuitColumns[QuEST`Private`circ], 
            QuEST`Private`spec]]]], QuEST`InsertCircuitNoise[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`InsertCircuitNoise]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {QuEST`Option`ReplaceAliases -> False}, "Attributes" -> {}, 
    "FullName" -> "QuEST`InsertCircuitNoise"], False]]], "Output",
 CellChangeTimes->{3.9035025225758486`*^9},
 CellLabel->
  "Out[605]=",ExpressionUUID->"addc4d30-a9db-4d78-b058-a401959b1d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.903500669109893*^9},ExpressionUUID->"4a2b0db6-b59f-49e9-973a-\
0156fdd4a199"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478478554926`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"30fe3808-004f-4e00-8f37-b1263b73db8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478478634987`*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"dc5dd977-ede7-4a90-829e-7e3fe6dd3b9e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478478717413`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"c87c1d41-3d13-483a-9ff7-ad862d324aa1"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"671140.9395973155`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 236, 350, 
   21846704208651438656, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9034474528025885`*^9, 3.9034474605593143`*^9}, 
   3.9034475217774367`*^9, 3.903447614756733*^9, {3.9034477972328987`*^9, 
   3.9034478048250017`*^9}, 3.9034478478717413`*^9},
 CellLabel->
  "During evaluation of \
In[233]:=",ExpressionUUID->"968482a6-2b67-4162-8ecb-70798750f8ca"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"671140.9395973155`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 236, 351, 
   21846704208651438656, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9034474528025885`*^9, 3.9034474605593143`*^9}, 
   3.9034475217774367`*^9, 3.903447614756733*^9, {3.9034477972328987`*^9, 
   3.9034478048250017`*^9}, 3.903447847888022*^9},
 CellLabel->
  "During evaluation of \
In[233]:=",ExpressionUUID->"20fcd962-c326-41b8-9c35-204500717440"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"671140.9395973155`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 236, 352, 
   21846704208651438656, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9034474528025885`*^9, 3.9034474605593143`*^9}, 
   3.9034475217774367`*^9, 3.903447614756733*^9, {3.9034477972328987`*^9, 
   3.9034478048250017`*^9}, 3.9034478479037275`*^9},
 CellLabel->
  "During evaluation of \
In[233]:=",ExpressionUUID->"76659f77-2cdd-4eae-9bc6-2e6d14480e38"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 236, 353, 21846704208651438656, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9034474528025885`*^9, 3.9034474605593143`*^9}, 
   3.9034475217774367`*^9, 3.903447614756733*^9, {3.9034477972328987`*^9, 
   3.9034478048250017`*^9}, 3.9034478479195137`*^9},
 CellLabel->
  "During evaluation of \
In[233]:=",ExpressionUUID->"a2199256-dbac-4265-bf1a-61d84dffad7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "1.3989809205263075`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "2.350079096185885`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "0.2612821996352501`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", 
      RowBox[{"-", "1.2870948537805322`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.6286694829210095`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "0.9417575652927733`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "0.7920344038974787`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "0.9369944126590588`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.4582743279798782`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", 
      RowBox[{"-", "0.4670454501857453`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "2.4638217016707067`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", 
      RowBox[{"-", "2.282061345169107`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARP", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARP", 
      RowBox[{"2", ",", "3"}]], ",", 
     RowBox[{
      SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.9610560811907893`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "0.23188796522997812`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "2.2523896564278445`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "0.02293980076294666`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "3.141592653589793`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARP", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARP", 
      RowBox[{"2", ",", "3"}]], ",", 
     RowBox[{
      SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.818616352496253`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "1.3325358109501853`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.5707963267948963`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["CZARP", 
      RowBox[{"0", ",", "1"}]], ",", 
     SubscriptBox["CZARP", 
      RowBox[{"2", ",", "3"}]], ",", 
     RowBox[{
      SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.1358634952615594`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", 
      RowBox[{"-", "1.3095085248260379`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", 
      RowBox[{"-", "1.5495843874831579`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", "3.0728462347877024`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.3070142729745833`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "1.5726688852836248`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "2"], "[", "2.114918590749836`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "3"], "[", "2.7263249754431227`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "0.41778418150726804`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "2.887656560467768`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "2"], "[", "1.0990951016705335`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "3"], "[", 
      RowBox[{"-", "1.0163927571583855`"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478479351416`*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"5eebe66d-34b0-4c1e-9240-e7c814db4d5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "1.3989809205263075`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "2.350079096185885`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "0.2612821996352501`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", 
        RowBox[{"-", "1.2870948537805322`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.350079096185885`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "1.6286694829210095`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "0.9417575652927733`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "0.7920344038974787`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "0.9369944126590588`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.9787485791068944`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.4582743279798782`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", 
        RowBox[{"-", "0.4670454501857453`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "2.4638217016707067`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", 
        RowBox[{"-", "2.282061345169107`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.442570280777601`", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["CZARP", 
        RowBox[{"0", ",", "1"}]], ",", 
       SubscriptBox["CZARP", 
        RowBox[{"2", ",", "3"}]], ",", 
       RowBox[{
        SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.742570280777601`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.9610560811907893`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "0.23188796522997812`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "2.2523896564278445`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "0.02293980076294666`", "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.994959937205445`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "3.141592653589793`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.136552590795239`", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["CZARP", 
        RowBox[{"0", ",", "1"}]], ",", 
       SubscriptBox["CZARP", 
        RowBox[{"2", ",", "3"}]], ",", 
       RowBox[{
        SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.43655259079524`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.818616352496253`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "1.3325358109501853`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.255168943291494`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "1.5707963267948963`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "1.5707963267948966`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "1.5707963267948966`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.825965270086392`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.39676159688129`", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["CZARP", 
        RowBox[{"0", ",", "1"}]], ",", 
       SubscriptBox["CZARP", 
        RowBox[{"2", ",", "3"}]], ",", 
       RowBox[{
        SubscriptBox["Wait", "4"], "[", "0.5`", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.69676159688129`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "1.1358634952615594`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", 
        RowBox[{"-", "1.3095085248260379`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", 
        RowBox[{"-", "1.5495843874831579`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", "3.0728462347877024`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23.769607831668992`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Ry", "0"], "[", "1.3070142729745833`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "1"], "[", "1.5726688852836248`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "2"], "[", "2.114918590749836`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Ry", "3"], "[", "2.7263249754431227`", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26.495932807112116`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", 
        RowBox[{"-", "0.41778418150726804`"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "2.887656560467768`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "2"], "[", "1.0990951016705335`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "3"], "[", 
        RowBox[{"-", "1.0163927571583855`"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29.383589367579884`", ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478479508233`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"15253824-3325-4b8a-ba2b-2c9637682d98"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0.125, 0.5}, {0.25, 0.5}}], 
     LineBox[{{0.125, 1.5}, {0.25, 1.5}}], 
     LineBox[{{0.125, 2.5}, {0.25, 2.5}}], 
     LineBox[{{0.125, 3.5}, {0.25, 3.5}}], 
     LineBox[{{0.125, 4.5}, {0.25, 4.5}}]}, {
     LineBox[{{0.25, 0.5}, {1.25, 0.5}}], LineBox[{{0.25, 1.5}, {1.25, 1.5}}],
      LineBox[{{0.25, 2.5}, {1.25, 2.5}}], 
     LineBox[{{0.25, 3.5}, {1.25, 3.5}}], 
     LineBox[{{0.25, 4.5}, {1.25, 4.5}}]}, {
     LineBox[{{1.25, 0.5}, {1.5, 0.5}}], LineBox[{{1.25, 1.5}, {1.5, 1.5}}], 
     LineBox[{{1.25, 2.5}, {1.5, 2.5}}], LineBox[{{1.25, 3.5}, {1.5, 3.5}}], 
     LineBox[{{1.25, 4.5}, {1.5, 4.5}}]}, {LineBox[{{1.5, 0.5}, {2.5, 0.5}}], 
     LineBox[{{1.5, 1.5}, {2.5, 1.5}}], LineBox[{{1.5, 2.5}, {2.5, 2.5}}], 
     LineBox[{{1.5, 3.5}, {2.5, 3.5}}], LineBox[{{1.5, 4.5}, {2.5, 4.5}}]}, {
     LineBox[{{2.5, 0.5}, {2.75, 0.5}}], LineBox[{{2.5, 1.5}, {2.75, 1.5}}], 
     LineBox[{{2.5, 2.5}, {2.75, 2.5}}], LineBox[{{2.5, 3.5}, {2.75, 3.5}}], 
     LineBox[{{2.5, 4.5}, {2.75, 4.5}}]}, {
     LineBox[{{2.75, 0.5}, {3.75, 0.5}}], LineBox[{{2.75, 1.5}, {3.75, 1.5}}],
      LineBox[{{2.75, 2.5}, {3.75, 2.5}}], 
     LineBox[{{2.75, 3.5}, {3.75, 3.5}}], 
     LineBox[{{2.75, 4.5}, {3.75, 4.5}}]}, {LineBox[{{3.75, 0.5}, {4., 0.5}}],
      LineBox[{{3.75, 1.5}, {4., 1.5}}], LineBox[{{3.75, 2.5}, {4., 2.5}}], 
     LineBox[{{3.75, 3.5}, {4., 3.5}}], LineBox[{{3.75, 4.5}, {4., 4.5}}]}, {
     LineBox[{{4., 0.5}, {5., 0.5}}], LineBox[{{4., 1.5}, {5., 1.5}}], 
     LineBox[{{4., 2.5}, {5., 2.5}}], LineBox[{{4., 3.5}, {5., 3.5}}], 
     LineBox[{{4., 4.5}, {5., 4.5}}]}, {LineBox[{{5., 0.5}, {5.25, 0.5}}], 
     LineBox[{{5., 1.5}, {5.25, 1.5}}], LineBox[{{5., 2.5}, {5.25, 2.5}}], 
     LineBox[{{5., 3.5}, {5.25, 3.5}}], LineBox[{{5., 4.5}, {5.25, 4.5}}]}, {
     LineBox[{{5.25, 0.5}, {6.25, 0.5}}], LineBox[{{5.25, 1.5}, {6.25, 1.5}}],
      LineBox[{{5.25, 2.5}, {6.25, 2.5}}], 
     LineBox[{{5.25, 3.5}, {6.25, 3.5}}], 
     LineBox[{{5.25, 4.5}, {6.25, 4.5}}]}, {
     LineBox[{{6.25, 0.5}, {6.5, 0.5}}], LineBox[{{6.25, 1.5}, {6.5, 1.5}}], 
     LineBox[{{6.25, 2.5}, {6.5, 2.5}}], LineBox[{{6.25, 3.5}, {6.5, 3.5}}], 
     LineBox[{{6.25, 4.5}, {6.5, 4.5}}]}, {LineBox[{{6.5, 0.5}, {7.5, 0.5}}], 
     LineBox[{{6.5, 1.5}, {7.5, 1.5}}], LineBox[{{6.5, 2.5}, {7.5, 2.5}}], 
     LineBox[{{6.5, 3.5}, {7.5, 3.5}}], LineBox[{{6.5, 4.5}, {7.5, 4.5}}]}, {
     LineBox[{{7.5, 0.5}, {7.75, 0.5}}], LineBox[{{7.5, 1.5}, {7.75, 1.5}}], 
     LineBox[{{7.5, 2.5}, {7.75, 2.5}}], LineBox[{{7.5, 3.5}, {7.75, 3.5}}], 
     LineBox[{{7.5, 4.5}, {7.75, 4.5}}]}, {
     LineBox[{{7.75, 0.5}, {8.75, 0.5}}], LineBox[{{7.75, 1.5}, {8.75, 1.5}}],
      LineBox[{{7.75, 2.5}, {8.75, 2.5}}], 
     LineBox[{{7.75, 3.5}, {8.75, 3.5}}], 
     LineBox[{{7.75, 4.5}, {8.75, 4.5}}]}, {LineBox[{{8.75, 0.5}, {9., 0.5}}],
      LineBox[{{8.75, 1.5}, {9., 1.5}}], LineBox[{{8.75, 2.5}, {9., 2.5}}], 
     LineBox[{{8.75, 3.5}, {9., 3.5}}], LineBox[{{8.75, 4.5}, {9., 4.5}}]}, {
     LineBox[{{9., 0.5}, {10., 0.5}}], LineBox[{{9., 1.5}, {10., 1.5}}], 
     LineBox[{{9., 2.5}, {10., 2.5}}], LineBox[{{9., 3.5}, {10., 3.5}}], 
     LineBox[{{9., 4.5}, {10., 4.5}}]}, {LineBox[{{10., 0.5}, {10.25, 0.5}}], 
     LineBox[{{10., 1.5}, {10.25, 1.5}}], LineBox[{{10., 2.5}, {10.25, 2.5}}],
      LineBox[{{10., 3.5}, {10.25, 3.5}}], 
     LineBox[{{10., 4.5}, {10.25, 4.5}}]}, {
     LineBox[{{10.25, 0.5}, {11.25, 0.5}}], 
     LineBox[{{10.25, 1.5}, {11.25, 1.5}}], 
     LineBox[{{10.25, 2.5}, {11.25, 2.5}}], 
     LineBox[{{10.25, 3.5}, {11.25, 3.5}}], 
     LineBox[{{10.25, 4.5}, {11.25, 4.5}}]}, {
     LineBox[{{11.25, 0.5}, {11.5, 0.5}}], 
     LineBox[{{11.25, 1.5}, {11.5, 1.5}}], 
     LineBox[{{11.25, 2.5}, {11.5, 2.5}}], 
     LineBox[{{11.25, 3.5}, {11.5, 3.5}}], 
     LineBox[{{11.25, 4.5}, {11.5, 4.5}}]}, {
     LineBox[{{11.5, 0.5}, {12.5, 0.5}}], LineBox[{{11.5, 1.5}, {12.5, 1.5}}],
      LineBox[{{11.5, 2.5}, {12.5, 2.5}}], 
     LineBox[{{11.5, 3.5}, {12.5, 3.5}}], 
     LineBox[{{11.5, 4.5}, {12.5, 4.5}}]}, {
     LineBox[{{12.5, 0.5}, {12.75, 0.5}}], 
     LineBox[{{12.5, 1.5}, {12.75, 1.5}}], 
     LineBox[{{12.5, 2.5}, {12.75, 2.5}}], 
     LineBox[{{12.5, 3.5}, {12.75, 3.5}}], 
     LineBox[{{12.5, 4.5}, {12.75, 4.5}}]}, {
     LineBox[{{12.75, 0.5}, {13.75, 0.5}}], 
     LineBox[{{12.75, 1.5}, {13.75, 1.5}}], 
     LineBox[{{12.75, 2.5}, {13.75, 2.5}}], 
     LineBox[{{12.75, 3.5}, {13.75, 3.5}}], 
     LineBox[{{12.75, 4.5}, {13.75, 4.5}}]}, {
     LineBox[{{13.75, 0.5}, {14., 0.5}}], LineBox[{{13.75, 1.5}, {14., 1.5}}],
      LineBox[{{13.75, 2.5}, {14., 2.5}}], 
     LineBox[{{13.75, 3.5}, {14., 3.5}}], 
     LineBox[{{13.75, 4.5}, {14., 4.5}}]}, {LineBox[{{14., 0.5}, {15., 0.5}}],
      LineBox[{{14., 1.5}, {15., 1.5}}], LineBox[{{14., 2.5}, {15., 2.5}}], 
     LineBox[{{14., 3.5}, {15., 3.5}}], LineBox[{{14., 4.5}, {15., 4.5}}]}, {
     LineBox[{{15., 0.5}, {15.25, 0.5}}], LineBox[{{15., 1.5}, {15.25, 1.5}}],
      LineBox[{{15., 2.5}, {15.25, 2.5}}], 
     LineBox[{{15., 3.5}, {15.25, 3.5}}], 
     LineBox[{{15., 4.5}, {15.25, 4.5}}]}, {
     LineBox[{{15.25, 0.5}, {16.25, 0.5}}], 
     LineBox[{{15.25, 1.5}, {16.25, 1.5}}], 
     LineBox[{{15.25, 2.5}, {16.25, 2.5}}], 
     LineBox[{{15.25, 3.5}, {16.25, 3.5}}], 
     LineBox[{{15.25, 4.5}, {16.25, 4.5}}]}, {
     LineBox[{{16.25, 0.5}, {16.5, 0.5}}], 
     LineBox[{{16.25, 1.5}, {16.5, 1.5}}], 
     LineBox[{{16.25, 2.5}, {16.5, 2.5}}], 
     LineBox[{{16.25, 3.5}, {16.5, 3.5}}], 
     LineBox[{{16.25, 4.5}, {16.5, 4.5}}]}, {
     LineBox[{{16.5, 0.5}, {17.5, 0.5}}], LineBox[{{16.5, 1.5}, {17.5, 1.5}}],
      LineBox[{{16.5, 2.5}, {17.5, 2.5}}], 
     LineBox[{{16.5, 3.5}, {17.5, 3.5}}], 
     LineBox[{{16.5, 4.5}, {17.5, 4.5}}]}, {
     LineBox[{{17.5, 0.5}, {17.625, 0.5}}], 
     LineBox[{{17.5, 1.5}, {17.625, 1.5}}], 
     LineBox[{{17.5, 2.5}, {17.625, 2.5}}], 
     LineBox[{{17.5, 3.5}, {17.625, 3.5}}], 
     LineBox[{{17.5, 4.5}, {17.625, 4.5}}]}}, {
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{0.125, 0}, {0.125, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "0"}],
       DisplayForm], {0.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{0.35, 0.1}, {1.15, 0.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 0.5}]}, {
     RectangleBox[{0.35, 1.1}, {1.15, 1.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 1.5}]}, {
     RectangleBox[{0.35, 2.1}, {1.15, 2.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 2.5}]}, {
     RectangleBox[{0.35, 3.1}, {1.15, 3.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{1.375, 0}, {1.375, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "2.350079096185885`"}],
       DisplayForm], {1.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{1.6, 0.1}, {2.4, 0.9}], 
     InsetBox["\<\"Ry\"\>", {2., 0.5}]}, {
     RectangleBox[{1.6, 1.1}, {2.4, 1.9}], 
     InsetBox["\<\"Ry\"\>", {2., 1.5}]}, {
     RectangleBox[{1.6, 2.1}, {2.4, 2.9}], 
     InsetBox["\<\"Ry\"\>", {2., 2.5}]}, {
     RectangleBox[{1.6, 3.1}, {2.4, 3.9}], InsetBox["\<\"Ry\"\>", {2., 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{2.625, 0}, {2.625, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "3.9787485791068944`"}],
       DisplayForm], {2.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{2.85, 0.1}, {3.65, 0.9}], 
     InsetBox["\<\"Rx\"\>", {3.25, 0.5}]}, {
     RectangleBox[{2.85, 1.1}, {3.65, 1.9}], 
     InsetBox["\<\"Rx\"\>", {3.25, 1.5}]}, {
     RectangleBox[{2.85, 2.1}, {3.65, 2.9}], 
     InsetBox["\<\"Rx\"\>", {3.25, 2.5}]}, {
     RectangleBox[{2.85, 3.1}, {3.65, 3.9}], 
     InsetBox["\<\"Rx\"\>", {3.25, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{3.875, 0}, {3.875, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "6.442570280777601`"}],
       DisplayForm], {3.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{4.1, 0.1}, {4.9, 1.9}], 
     InsetBox["\<\"CZARP\"\>", {4.5, 1.}]}, {
     RectangleBox[{4.1, 2.1}, {4.9, 3.9}], 
     InsetBox["\<\"CZARP\"\>", {4.5, 3.}]}, {
     RectangleBox[{4.1, 4.1}, {4.9, 4.9}], 
     InsetBox["\<\"Wait\"\>", {4.5, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{5.125, 0}, {5.125, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "7.742570280777601`"}],
       DisplayForm], {5.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{5.35, 0.1}, {6.15, 0.9}], 
     InsetBox["\<\"Rx\"\>", {5.75, 0.5}]}, {
     RectangleBox[{5.35, 1.1}, {6.15, 1.9}], 
     InsetBox["\<\"Rx\"\>", {5.75, 1.5}]}, {
     RectangleBox[{5.35, 2.1}, {6.15, 2.9}], 
     InsetBox["\<\"Rx\"\>", {5.75, 2.5}]}, {
     RectangleBox[{5.35, 3.1}, {6.15, 3.9}], 
     InsetBox["\<\"Rx\"\>", {5.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{6.375, 0}, {6.375, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "9.994959937205445`"}],
       DisplayForm], {6.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{6.6, 0.1}, {7.4, 0.9}], 
     InsetBox["\<\"Ry\"\>", {7., 0.5}]}, {
     RectangleBox[{6.6, 1.1}, {7.4, 1.9}], 
     InsetBox["\<\"Ry\"\>", {7., 1.5}]}, {
     RectangleBox[{6.6, 2.1}, {7.4, 2.9}], 
     InsetBox["\<\"Ry\"\>", {7., 2.5}]}, {
     RectangleBox[{6.6, 3.1}, {7.4, 3.9}], InsetBox["\<\"Ry\"\>", {7., 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{7.625, 0}, {7.625, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "13.136552590795239`"}],
       DisplayForm], {7.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{7.85, 0.1}, {8.65, 1.9}], 
     InsetBox["\<\"CZARP\"\>", {8.25, 1.}]}, {
     RectangleBox[{7.85, 2.1}, {8.65, 3.9}], 
     InsetBox["\<\"CZARP\"\>", {8.25, 3.}]}, {
     RectangleBox[{7.85, 4.1}, {8.65, 4.9}], 
     InsetBox["\<\"Wait\"\>", {8.25, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{8.875, 0}, {8.875, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "14.43655259079524`"}],
       DisplayForm], {8.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{9.1, 0.1}, {9.9, 0.9}], 
     InsetBox["\<\"Rx\"\>", {9.5, 0.5}]}, {
     RectangleBox[{9.1, 1.1}, {9.9, 1.9}], 
     InsetBox["\<\"Rx\"\>", {9.5, 1.5}]}, {
     RectangleBox[{9.1, 2.1}, {9.9, 2.9}], 
     InsetBox["\<\"Rx\"\>", {9.5, 2.5}]}, {
     RectangleBox[{9.1, 3.1}, {9.9, 3.9}], 
     InsetBox["\<\"Rx\"\>", {9.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{10.125, 0}, {10.125, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "16.255168943291494`"}],
       DisplayForm], {10.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{10.35, 0.1}, {11.15, 0.9}], 
     InsetBox["\<\"Ry\"\>", {10.75, 0.5}]}, {
     RectangleBox[{10.35, 1.1}, {11.15, 1.9}], 
     InsetBox["\<\"Ry\"\>", {10.75, 1.5}]}, {
     RectangleBox[{10.35, 2.1}, {11.15, 2.9}], 
     InsetBox["\<\"Ry\"\>", {10.75, 2.5}]}, {
     RectangleBox[{10.35, 3.1}, {11.15, 3.9}], 
     InsetBox["\<\"Ry\"\>", {10.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{11.375, 0}, {11.375, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "17.825965270086392`"}],
       DisplayForm], {11.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{11.6, 0.1}, {12.4, 0.9}], 
     InsetBox["\<\"Rx\"\>", {12., 0.5}]}, {
     RectangleBox[{11.6, 2.1}, {12.4, 2.9}], 
     InsetBox["\<\"Rx\"\>", {12., 2.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{12.625, 0}, {12.625, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "19.39676159688129`"}],
       DisplayForm], {12.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{12.85, 0.1}, {13.65, 1.9}], 
     InsetBox["\<\"CZARP\"\>", {13.25, 1.}]}, {
     RectangleBox[{12.85, 2.1}, {13.65, 3.9}], 
     InsetBox["\<\"CZARP\"\>", {13.25, 3.}]}, {
     RectangleBox[{12.85, 4.1}, {13.65, 4.9}], 
     InsetBox["\<\"Wait\"\>", {13.25, 4.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{13.875, 0}, {13.875, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "20.69676159688129`"}],
       DisplayForm], {13.875, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{14.1, 0.1}, {14.9, 0.9}], 
     InsetBox["\<\"Rx\"\>", {14.5, 0.5}]}, {
     RectangleBox[{14.1, 1.1}, {14.9, 1.9}], 
     InsetBox["\<\"Rx\"\>", {14.5, 1.5}]}, {
     RectangleBox[{14.1, 2.1}, {14.9, 2.9}], 
     InsetBox["\<\"Rx\"\>", {14.5, 2.5}]}, {
     RectangleBox[{14.1, 3.1}, {14.9, 3.9}], 
     InsetBox["\<\"Rx\"\>", {14.5, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{15.125, 0}, {15.125, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "23.769607831668992`"}],
       DisplayForm], {15.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{15.35, 0.1}, {16.15, 0.9}], 
     InsetBox["\<\"Ry\"\>", {15.75, 0.5}]}, {
     RectangleBox[{15.35, 1.1}, {16.15, 1.9}], 
     InsetBox["\<\"Ry\"\>", {15.75, 1.5}]}, {
     RectangleBox[{15.35, 2.1}, {16.15, 2.9}], 
     InsetBox["\<\"Ry\"\>", {15.75, 2.5}]}, {
     RectangleBox[{15.35, 3.1}, {16.15, 3.9}], 
     InsetBox["\<\"Ry\"\>", {15.75, 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{16.375, 0}, {16.375, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "26.495932807112116`"}],
       DisplayForm], {16.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{16.6, 0.1}, {17.4, 0.9}], 
     InsetBox["\<\"Rx\"\>", {17., 0.5}]}, {
     RectangleBox[{16.6, 1.1}, {17.4, 1.9}], 
     InsetBox["\<\"Rx\"\>", {17., 1.5}]}, {
     RectangleBox[{16.6, 2.1}, {17.4, 2.9}], 
     InsetBox["\<\"Rx\"\>", {17., 2.5}]}, {
     RectangleBox[{16.6, 3.1}, {17.4, 3.9}], 
     InsetBox["\<\"Rx\"\>", {17., 3.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{17.625, 0}, {17.625, 5}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "29.383589367579884`"}],
       DisplayForm], {17.625, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}]}},
  ImageSize->588.75,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.9034474000322647`*^9, {3.90344745270074*^9, 3.9034474605436354`*^9}, 
   3.903447521728816*^9, 3.903447614731971*^9, {3.9034477971853995`*^9, 
   3.903447804785222*^9}, 3.9034478479976387`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"85dbe73d-62d5-4d67-967b-ec41e509eba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.903447197248564*^9, 3.903447212231686*^9}, {
  3.903447260551693*^9, 
  3.9034472970776587`*^9}},ExpressionUUID->"6b0cdc38-eadb-42f4-85e4-\
b901442a0c1c"],

Cell[BoxData[
 RowBox[{"RydbergHub", "[", "T2", "]"}]], "Output",
 CellChangeTimes->{
  3.903443858377087*^9, 3.903443899503111*^9, {3.903443943829836*^9, 
   3.90344396276222*^9}, {3.903443999259202*^9, 3.903444023817441*^9}, {
   3.903444060485803*^9, 3.9034440826940427`*^9}, {3.9034442177679324`*^9, 
   3.9034442811216*^9}, {3.9034443189538765`*^9, 3.9034443651879463`*^9}, {
   3.903444434451133*^9, 3.903444452868462*^9}, 3.903444524097243*^9, 
   3.9034445563371544`*^9, {3.903444640108801*^9, 3.9034446643082676`*^9}, 
   3.903445127577179*^9, {3.9034453201119566`*^9, 3.903445346375843*^9}, {
   3.903445432184965*^9, 3.9034454501785455`*^9}, {3.9034454808991375`*^9, 
   3.9034455094638453`*^9}, 3.903445542035669*^9, {3.9034456704840097`*^9, 
   3.903445684572525*^9}, {3.9034457309828386`*^9, 3.903445744721823*^9}, 
   3.9034459578845973`*^9, 3.9034460051237507`*^9, 3.903446114052382*^9, {
   3.9034463498400135`*^9, 3.9034463856419563`*^9}, {3.903447202435405*^9, 
   3.903447212940436*^9}, {3.903447269248172*^9, 3.903447288748165*^9}},
 CellLabel->
  "Out[196]=",ExpressionUUID->"c0f96e1e-bd37-43a4-8619-d53f708d696c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QVLayerARPMove", "[", 
    RowBox[{"DataSet_", ",", "NQ_", ",", "RQs_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SU4GateARPMove", "[", 
        RowBox[{
         RowBox[{"DataSet", "[", 
          RowBox[{"[", 
           RowBox[{"n", "+", "i"}], "]"}], "]"}], ",", 
         RowBox[{"RQs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", 
         RowBox[{"RQs", "[", 
          RowBox[{"[", 
           RowBox[{"n", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"2", "*", 
          RowBox[{"Quotient", "[", 
           RowBox[{"NQ", ",", "2"}], "]"}]}], ",", "2"}], "}"}]}], "]"}], ",",
      "2"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"875af7b5-846a-4662-bb71-49b66de06b87"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SU4GateARPMove", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SU4GateARPMove", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", "0", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9034246898917475`*^9, 3.903424698669952*^9}, {
  3.9034403783700037`*^9, 3.9034404028640833`*^9}, {3.903440690948494*^9, 
  3.9034406966362934`*^9}},ExpressionUUID->"2b1f70c9-18ef-4046-bb46-\
910c03259f2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "1.3989809205263075`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.6286694829210095`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.4582743279798782`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "2.350079096185885`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "0.9417575652927733`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", 
      RowBox[{"-", "0.4670454501857453`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["CZARP", 
     RowBox[{"0", ",", "1"}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.9610560811907893`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "3.141592653589793`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "0.23188796522997812`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    SubscriptBox["CZARP", 
     RowBox[{"0", ",", "1"}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.818616352496253`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.5707963267948963`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "1.5707963267948966`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "1.5707963267948966`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "1.5707963267948966`", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    SubscriptBox["CZARP", 
     RowBox[{"0", ",", "1"}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Rx", "0"], "[", "1.1358634952615594`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "0"], "[", "1.3070142729745833`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "0"], "[", 
      RowBox[{"-", "0.41778418150726804`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", 
      RowBox[{"-", "1.3095085248260379`"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["Ry", "1"], "[", "1.5726688852836248`", "]"}], ",", 
     RowBox[{
      SubscriptBox["Rx", "1"], "[", "2.887656560467768`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9034246940890493`*^9, 3.90344038245748*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"ec9060b4-27e6-4076-8774-1a97bcdaf88e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Join"}]], "Input",
 CellChangeTimes->{{3.903442087485752*^9, 3.9034420889810286`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"37842eac-50db-4b5a-9071-c4b838257eee"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Join",
              ButtonNote->"paclet:ref/Join"],
             "\"paclet:ref/Join\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\) concatenates lists or other expressions that \
share the same head.\\n\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) joins \
the objects at level \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) in each of \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Join", 
                    "paclet:ref/Join", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Join.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Join.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Flat", ",", "OneIdentity", ",", "Protected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Join\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Join",
              ButtonNote->"paclet:ref/Join"],
             "\"paclet:ref/Join\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\) concatenates lists or other expressions that \
share the same head.\\n\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) joins \
the objects at level \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) in each of \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Join\", \"[\", RowBox[{SubscriptBox[StyleBox[\"list\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) concatenates lists or other expressions that share the \
same head.\n\!\(\*RowBox[{\"Join\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) joins the objects at level \!\(\*StyleBox[\"n\", \"TI\"]\) in each \
of the \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Join", "Web" -> 
      "http://reference.wolfram.com/language/ref/Join.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Flat, OneIdentity, Protected}, 
    "FullName" -> "System`Join"], False]]], "Output",
 CellChangeTimes->{3.9034420896606455`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"78f3ae05-93e4-462e-808e-1fb512eb079b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetCircuitSchedule"}]], "Input",
 CellChangeTimes->{{3.9034446735371656`*^9, 3.903444678069595*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"e477192d-4188-4f87-a315-b7412a2e051c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetCircuitSchedule[circuit, spec] divides circuit \
into sub-circuits of simultaneously-applied gates (filled from the left), and \
assigns each a start-time based on the duration of the slowest gate according \
to the given device specification. The returned structure is {{t1, \
sub-circuit1}, {t2, sub-circuit2}, ...}, which can be given directly to \
DrawCircuit[] or ViewCircuitSchedule[].\\nGetCircuitSchedule[subcircuits, \
spec] uses the given division (lists of circuits), assumes the gates in each \
can be performed simultaneously, and performs the same \
scheduling.\\nGetCircuitSchedule accepts optional argument \
ReplaceAliases.\\nGetCircuitSchedule will take into consideration gates with \
durations dependent on their scheduled start time.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`cols", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__", "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`times", "=", 
                    RowBox[{"First", "[", 
                    RowBox[{"QuEST`Private`getSchedAndNoiseFromSubcircs", "[", 
                    RowBox[{"QuEST`Private`cols", ",", "QuEST`Private`spec"}],
                     "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`optionalReplaceAliases", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ReplaceAliases", "]"}], ",", 
                    "QuEST`Private`spec"}], "]"}], "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`times", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"QuEST`Private`cols", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}], "]"}]}], 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", 
                    
                    RowBox[{
                    "QuEST`Private`circ_List", ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"GetCircuitSchedule", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "GetCircuitColumns", "[", "QuEST`Private`circ", "]"}], 
                    ",", "QuEST`Private`spec", ",", "QuEST`Private`opts"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", 
                    "GetCircuitSchedule", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"ReplaceAliases", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`GetCircuitSchedule\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetCircuitSchedule[circuit, spec] divides circuit \
into sub-circuits of simultaneously-applied gates (filled from the left), and \
assigns each a start-time based on the duration of the slowest gate according \
to the given device specification. The returned structure is {{t1, \
sub-circuit1}, {t2, sub-circuit2}, ...}, which can be given directly to \
DrawCircuit[] or ViewCircuitSchedule[].\\nGetCircuitSchedule[subcircuits, \
spec] uses the given division (lists of circuits), assumes the gates in each \
can be performed simultaneously, and performs the same \
scheduling.\\nGetCircuitSchedule accepts optional argument \
ReplaceAliases.\\nGetCircuitSchedule will take into consideration gates with \
durations dependent on their scheduled start time.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "GetCircuitSchedule[circuit, spec] divides circuit into sub-circuits of \
simultaneously-applied gates (filled from the left), and assigns each a \
start-time based on the duration of the slowest gate according to the given \
device specification. The returned structure is {{t1, sub-circuit1}, {t2, \
sub-circuit2}, ...}, which can be given directly to DrawCircuit[] or \
ViewCircuitSchedule[].\nGetCircuitSchedule[subcircuits, spec] uses the given \
division (lists of circuits), assumes the gates in each can be performed \
simultaneously, and performs the same scheduling.\nGetCircuitSchedule accepts \
optional argument ReplaceAliases.\nGetCircuitSchedule will take into \
consideration gates with durations dependent on their scheduled start time.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`GetCircuitSchedule, {QuEST`GetCircuitSchedule[
         Pattern[QuEST`Private`cols, {
           Repeated[{
             BlankSequence[]}]}], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Catch[
         With[{QuEST`Private`times = First[
             QuEST`Private`getSchedAndNoiseFromSubcircs[
             QuEST`Private`cols, QuEST`Private`spec]]}, 
          QuEST`Private`optionalReplaceAliases[
           OptionValue[QuEST`Option`ReplaceAliases], QuEST`Private`spec][
           Transpose[{QuEST`Private`times, 
             Append[QuEST`Private`cols, {}]}]]]], QuEST`GetCircuitSchedule[
         Pattern[QuEST`Private`circ, 
          Blank[List]], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> QuEST`GetCircuitSchedule[
         QuEST`GetCircuitColumns[QuEST`Private`circ], QuEST`Private`spec, 
         QuEST`Private`opts], QuEST`GetCircuitSchedule[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`GetCircuitSchedule]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {QuEST`Option`ReplaceAliases -> False}, "Attributes" -> {}, 
    "FullName" -> "QuEST`GetCircuitSchedule"], False]]], "Output",
 CellChangeTimes->{3.90344467896844*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"7750886b-8fae-40c5-b7b7-21b6bbeed0d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Wait"}]], "Input",
 CellChangeTimes->{{3.903448366468378*^9, 3.903448367466848*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"64756d1b-367b-4ac3-9dd4-9263af837c96"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Wait[\[CapitalDelta]t] gate, doing nothing/identity \
operation for duration \[CapitalDelta]t.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VQD`CustomGates`Wait\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Wait[\[CapitalDelta]t] gate, doing nothing/identity \
operation for duration \[CapitalDelta]t.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Wait[\[CapitalDelta]t] gate, doing nothing/identity operation for \
duration \[CapitalDelta]t.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "VQD`CustomGates`Wait"], False]]], "Output",
 CellChangeTimes->{3.9034483681037884`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"422c5708-3a7d-4ba3-bbb8-cfc6614ebad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InsertCircuitNoise", "[", 
  RowBox[{
   RowBox[{"CircRydbergHub", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["Wait", "0"], "[", "1000", "]"}], "}"}], ",", "RydDev", 
     ",", 
     RowBox[{"Parallel", "->", "True"}]}], "]"}], ",", "RydDev"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.903448489076089*^9, 3.9034485161694965`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"131782ff-fec6-4e26-9610-6096a30d1193"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["Deph", "0"], "[", "0.00033545788744610006`", "]"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Deph", "0"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "1"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "2"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "3"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "4"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "5"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "6"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "7"], "[", "0.00033545788744610006`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "8"], "[", "0.00033545788744610006`", "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1000", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.903448474986823*^9, 3.9034485166458187`*^9}},
 CellLabel->
  "Out[246]=",ExpressionUUID->"829af2b9-57c9-4854-8e3d-32ec953ee5c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Tes", "=", 
  RowBox[{"InsertCircuitNoise", "[", 
   RowBox[{
    RowBox[{"GetCircuitSchedule", "[", 
     RowBox[{
      RowBox[{"CircRydbergHub", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Rx", "0"], "[", "Pi", "]"}], ",", 
          RowBox[{
           SubscriptBox["Rx", "1"], "[", "Pi", "]"}]}], "}"}], ",", "RydDev", 
        ",", 
        RowBox[{"Parallel", "->", "True"}]}], "]"}], ",", "RydDev"}], "]"}], 
    ",", "RydDev"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawCircuit", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Te", "=", 
  RowBox[{"CreateDensityQureg", "[", "9", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"InitZeroState", "[", "Te", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExtractCircuit", "[", "Tes", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ApplyCircuit", "[", 
  RowBox[{"Te", ",", 
   RowBox[{"ExtractCircuit", "[", "Tes", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9034483810019608`*^9, 3.9034484453042126`*^9}, {
  3.903448481939149*^9, 3.9034484846985435`*^9}, {3.9034485408432336`*^9, 
  3.9034485419221344`*^9}, {3.9034485722070665`*^9, 3.903448623824053*^9}, {
  3.9034486610820503`*^9, 3.9034487143350606`*^9}, {3.903449224252534*^9, 
  3.903449262175253*^9}, {3.9034493129189644`*^9, 3.903449334038303*^9}, {
  3.9034493784037457`*^9, 3.903449384873743*^9}, {3.90344942205939*^9, 
  3.903449465963933*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"dc2620d3-07d1-4a8d-8fe7-c1bf3dadf9d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Rx", "0"], "[", "\[Pi]", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "0"], "[", "1.6778520672833253`*^-7", "]"}], ",", 
       RowBox[{
        SubscriptBox["Rx", "1"], "[", "\[Pi]", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "1"], "[", "1.6778520672833253`*^-7", "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Deph", "0"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "1"], "[", "0.`", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "2"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "3"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "4"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "5"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "6"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "7"], "[", "1.054224611274357`*^-6", "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "8"], "[", "1.054224611274357`*^-6", "]"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Deph", "0"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "1"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "2"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "3"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "4"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "5"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "6"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "7"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["Deph", "8"], "[", 
        RowBox[{"-", "\[Infinity]"}], "]"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.903449483796871*^9}},
 CellLabel->
  "Out[290]=",ExpressionUUID->"f839c69b-126b-4639-a17b-138dd5029ecd"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[
   1]], {{LineBox[{{0.125, 0.5}, {0.25, 0.5}}], 
     LineBox[{{0.125, 1.5}, {0.25, 1.5}}], 
     LineBox[{{0.125, 2.5}, {0.25, 2.5}}], 
     LineBox[{{0.125, 3.5}, {0.25, 3.5}}], 
     LineBox[{{0.125, 4.5}, {0.25, 4.5}}], 
     LineBox[{{0.125, 5.5}, {0.25, 5.5}}], 
     LineBox[{{0.125, 6.5}, {0.25, 6.5}}], 
     LineBox[{{0.125, 7.5}, {0.25, 7.5}}], 
     LineBox[{{0.125, 8.5}, {0.25, 8.5}}]}, {
     LineBox[{{0.25, 0.5}, {1.25, 0.5}}], LineBox[{{0.25, 1.5}, {1.25, 1.5}}],
      LineBox[{{0.25, 2.5}, {1.25, 2.5}}], 
     LineBox[{{0.25, 3.5}, {1.25, 3.5}}], LineBox[{{0.25, 4.5}, {1.25, 4.5}}],
      LineBox[{{0.25, 5.5}, {1.25, 5.5}}], 
     LineBox[{{0.25, 6.5}, {1.25, 6.5}}], LineBox[{{0.25, 7.5}, {1.25, 7.5}}],
      LineBox[{{0.25, 8.5}, {1.25, 8.5}}]}, {
     LineBox[{{1.25, 0.5}, {2.25, 0.5}}], LineBox[{{1.25, 1.5}, {2.25, 1.5}}],
      LineBox[{{1.25, 2.5}, {2.25, 2.5}}], 
     LineBox[{{1.25, 3.5}, {2.25, 3.5}}], LineBox[{{1.25, 4.5}, {2.25, 4.5}}],
      LineBox[{{1.25, 5.5}, {2.25, 5.5}}], 
     LineBox[{{1.25, 6.5}, {2.25, 6.5}}], LineBox[{{1.25, 7.5}, {2.25, 7.5}}],
      LineBox[{{1.25, 8.5}, {2.25, 8.5}}]}, {
     LineBox[{{2.25, 0.5}, {3.25, 0.5}}], LineBox[{{2.25, 1.5}, {3.25, 1.5}}],
      LineBox[{{2.25, 2.5}, {3.25, 2.5}}], 
     LineBox[{{2.25, 3.5}, {3.25, 3.5}}], LineBox[{{2.25, 4.5}, {3.25, 4.5}}],
      LineBox[{{2.25, 5.5}, {3.25, 5.5}}], 
     LineBox[{{2.25, 6.5}, {3.25, 6.5}}], LineBox[{{2.25, 7.5}, {3.25, 7.5}}],
      LineBox[{{2.25, 8.5}, {3.25, 8.5}}]}, {
     LineBox[{{3.25, 0.5}, {3.5, 0.5}}], LineBox[{{3.25, 1.5}, {3.5, 1.5}}], 
     LineBox[{{3.25, 2.5}, {3.5, 2.5}}], LineBox[{{3.25, 3.5}, {3.5, 3.5}}], 
     LineBox[{{3.25, 4.5}, {3.5, 4.5}}], LineBox[{{3.25, 5.5}, {3.5, 5.5}}], 
     LineBox[{{3.25, 6.5}, {3.5, 6.5}}], LineBox[{{3.25, 7.5}, {3.5, 7.5}}], 
     LineBox[{{3.25, 8.5}, {3.5, 8.5}}]}, {LineBox[{{3.5, 0.5}, {4.5, 0.5}}], 
     LineBox[{{3.5, 1.5}, {4.5, 1.5}}], LineBox[{{3.5, 2.5}, {4.5, 2.5}}], 
     LineBox[{{3.5, 3.5}, {4.5, 3.5}}], LineBox[{{3.5, 4.5}, {4.5, 4.5}}], 
     LineBox[{{3.5, 5.5}, {4.5, 5.5}}], LineBox[{{3.5, 6.5}, {4.5, 6.5}}], 
     LineBox[{{3.5, 7.5}, {4.5, 7.5}}], LineBox[{{3.5, 8.5}, {4.5, 8.5}}]}}, {
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{0.125, 0}, {0.125, 9}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "0"}],
       DisplayForm], {0.125, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], {RectangleBox[{0.35, 0.1}, {1.15, 0.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 0.5}]}, {
     RectangleBox[{0.35, 1.1}, {1.15, 1.9}], 
     InsetBox["\<\"Rx\"\>", {0.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 0.1}, {2.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{1.35, 1.1}, {2.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {1.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 0.1}, {3.15, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 1.1}, {3.15, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 2.1}, {3.15, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 3.1}, {3.15, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 4.1}, {3.15, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 5.1}, {3.15, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 6.1}, {3.15, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 7.1}, {3.15, 7.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 7.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], 
     RectangleBox[{2.35, 8.1}, {3.15, 8.9}], 
     InsetBox["\<\"\[Phi]\"\>", {2.75, 8.5}]}, 
    {GrayLevel[0.5], Dashing[{Small, Small}], 
     LineBox[{{3.375, 0}, {3.375, 9}}]}, GeometricTransformationBox[InsetBox[
      TagBox[
       RowBox[{
        RowBox[{"t", "="}], "\[Pi]"}],
       DisplayForm], {3.375, -0.5}], {{{0.9659258262890682, 
      0.2588190451025207}, {-0.2588190451025207, 0.9659258262890682}}, 
      Center}], 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 0.1}, {4.4, 0.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 0.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 1.1}, {4.4, 1.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 1.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 2.1}, {4.4, 2.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 2.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 3.1}, {4.4, 3.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 3.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 4.1}, {4.4, 4.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 4.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 5.1}, {4.4, 5.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 5.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 6.1}, {4.4, 6.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 6.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 7.1}, {4.4, 7.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 7.5}]}, 
    {EdgeForm[Dashing[{Small, Small}]], RectangleBox[{3.6, 8.1}, {4.4, 8.9}], 
     InsetBox["\<\"\[Phi]\"\>", {4., 8.5}]}}},
  ImageSize->165.,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.9034494838125567`*^9}},
 CellLabel->
  "Out[291]=",ExpressionUUID->"eec3eb09-4383-4781-b768-3f1406339df7"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.903449483828182*^9}},
 CellLabel->
  "Out[292]=",ExpressionUUID->"c65519bb-473a-432e-99b2-f1273c36c793"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.9034494838437986`*^9}},
 CellLabel->
  "Out[293]=",ExpressionUUID->"32bc418d-e53d-491d-bc04-7167e55dc6b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["Rx", "0"], "[", "\[Pi]", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", "1.6778520672833253`*^-7", "]"}], ",", 
   RowBox[{
    SubscriptBox["Rx", "1"], "[", "\[Pi]", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "1"], "[", "1.6778520672833253`*^-7", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", "0.`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "1"], "[", "0.`", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "2"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "3"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "4"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "5"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "6"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "7"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "8"], "[", "1.054224611274357`*^-6", "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "0"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "1"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "2"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "3"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "4"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "5"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "6"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "7"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["Deph", "8"], "[", 
    RowBox[{"-", "\[Infinity]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.903449483859422*^9}},
 CellLabel->
  "Out[294]=",ExpressionUUID->"650b1d88-154b-4ec0-b79e-4ffe7c75c126"],

Cell[BoxData[
 TemplateBox[{
  "ApplyCircuit", "error", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Circuit contains non-numerical or non-real \
parameters!\\\\\\\"\\\"}]\\)\"", 2, 295, 383, 21846704208651438656, "Local", 
   "QuEST`ApplyCircuit"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.9034492627885504`*^9, {3.9034493191578665`*^9, 3.903449334641346*^9}, 
   3.903449385458852*^9, 3.903449430008869*^9, {3.903449468926689*^9, 
   3.903449483865696*^9}},
 CellLabel->
  "During evaluation of \
In[290]:=",ExpressionUUID->"c7493136-9ccc-45e8-8b5e-49c4b6ab3114"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.9034484382866483`*^9, 3.9034484459962473`*^9}, {
   3.9034484851555123`*^9, 3.903448502476636*^9}, 3.903448542454254*^9, 
   3.9034485772738543`*^9, {3.9034486139498343`*^9, 3.9034486242649717`*^9}, 
   3.9034486793147025`*^9, 3.9034487149049044`*^9, 3.903449262741321*^9, {
   3.9034493191101475`*^9, 3.903449334586648*^9}, 3.903449385411624*^9, 
   3.903449430025318*^9, {3.903449468847487*^9, 3.9034494838815355`*^9}},
 CellLabel->
  "Out[295]=",ExpressionUUID->"dd7c7062-b32f-4724-a43b-c3b6537642c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetCircuitSchedule"}]], "Input",
 CellChangeTimes->{{3.903448545335596*^9, 3.903448549852201*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"8274a8fd-3ee2-4d46-b7fa-e1532ba50422"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetCircuitSchedule[circuit, spec] divides circuit \
into sub-circuits of simultaneously-applied gates (filled from the left), and \
assigns each a start-time based on the duration of the slowest gate according \
to the given device specification. The returned structure is {{t1, \
sub-circuit1}, {t2, sub-circuit2}, ...}, which can be given directly to \
DrawCircuit[] or ViewCircuitSchedule[].\\nGetCircuitSchedule[subcircuits, \
spec] uses the given division (lists of circuits), assumes the gates in each \
can be performed simultaneously, and performs the same \
scheduling.\\nGetCircuitSchedule accepts optional argument \
ReplaceAliases.\\nGetCircuitSchedule will take into consideration gates with \
durations dependent on their scheduled start time.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", 
                    RowBox[{
                    RowBox[{"QuEST`Private`cols", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "__", "}"}], ".."}], "}"}]}], ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`times", "=", 
                    RowBox[{"First", "[", 
                    RowBox[{"QuEST`Private`getSchedAndNoiseFromSubcircs", "[", 
                    RowBox[{"QuEST`Private`cols", ",", "QuEST`Private`spec"}],
                     "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"QuEST`Private`optionalReplaceAliases", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ReplaceAliases", "]"}], ",", 
                    "QuEST`Private`spec"}], "]"}], "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`times", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"QuEST`Private`cols", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "}"}], "]"}], "]"}]}], 
                    "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", 
                    
                    RowBox[{
                    "QuEST`Private`circ_List", ",", 
                    "QuEST`Private`spec_Association", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"GetCircuitSchedule", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "GetCircuitColumns", "[", "QuEST`Private`circ", "]"}], 
                    ",", "QuEST`Private`spec", ",", "QuEST`Private`opts"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"GetCircuitSchedule", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", 
                    "GetCircuitSchedule", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"ReplaceAliases", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`GetCircuitSchedule\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GetCircuitSchedule[circuit, spec] divides circuit \
into sub-circuits of simultaneously-applied gates (filled from the left), and \
assigns each a start-time based on the duration of the slowest gate according \
to the given device specification. The returned structure is {{t1, \
sub-circuit1}, {t2, sub-circuit2}, ...}, which can be given directly to \
DrawCircuit[] or ViewCircuitSchedule[].\\nGetCircuitSchedule[subcircuits, \
spec] uses the given division (lists of circuits), assumes the gates in each \
can be performed simultaneously, and performs the same \
scheduling.\\nGetCircuitSchedule accepts optional argument \
ReplaceAliases.\\nGetCircuitSchedule will take into consideration gates with \
durations dependent on their scheduled start time.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "GetCircuitSchedule[circuit, spec] divides circuit into sub-circuits of \
simultaneously-applied gates (filled from the left), and assigns each a \
start-time based on the duration of the slowest gate according to the given \
device specification. The returned structure is {{t1, sub-circuit1}, {t2, \
sub-circuit2}, ...}, which can be given directly to DrawCircuit[] or \
ViewCircuitSchedule[].\nGetCircuitSchedule[subcircuits, spec] uses the given \
division (lists of circuits), assumes the gates in each can be performed \
simultaneously, and performs the same scheduling.\nGetCircuitSchedule accepts \
optional argument ReplaceAliases.\nGetCircuitSchedule will take into \
consideration gates with durations dependent on their scheduled start time.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`GetCircuitSchedule, {QuEST`GetCircuitSchedule[
         Pattern[QuEST`Private`cols, {
           Repeated[{
             BlankSequence[]}]}], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> Catch[
         With[{QuEST`Private`times = First[
             QuEST`Private`getSchedAndNoiseFromSubcircs[
             QuEST`Private`cols, QuEST`Private`spec]]}, 
          QuEST`Private`optionalReplaceAliases[
           OptionValue[QuEST`Option`ReplaceAliases], QuEST`Private`spec][
           Transpose[{QuEST`Private`times, 
             Append[QuEST`Private`cols, {}]}]]]], QuEST`GetCircuitSchedule[
         Pattern[QuEST`Private`circ, 
          Blank[List]], 
         Pattern[QuEST`Private`spec, 
          Blank[Association]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[]]] :> QuEST`GetCircuitSchedule[
         QuEST`GetCircuitColumns[QuEST`Private`circ], QuEST`Private`spec, 
         QuEST`Private`opts], QuEST`GetCircuitSchedule[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`GetCircuitSchedule]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {QuEST`Option`ReplaceAliases -> False}, "Attributes" -> {}, 
    "FullName" -> "QuEST`GetCircuitSchedule"], False]]], "Output",
 CellChangeTimes->{3.90344855038585*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"ee897499-e1c5-47a8-971d-470e66d96f5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ApplyCircuit"}]], "Input",
 CellChangeTimes->{{3.9034492856794634`*^9, 3.903449291637265*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"24e16db7-99b1-4786-8c93-363b0dce9738"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyCircuit[qureg, circuit] modifies qureg by \
applying the circuit. Returns any measurement outcomes and the probabilities \
encountered by projectors, ordered and grouped by the appearance of M and P \
in the circuit.\\nApplyCircuit[inQureg, circuit, outQureg] leaves inQureg \
unchanged, but modifies outQureg to be the result of applying the circuit to \
inQureg.\\nAccepts optional arguments WithBackup and ShowProgress.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"{", "}"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"QuEST`Private`qureg_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`circuit_", "?", 
                    "QuEST`Private`isCircuitFormat"}], ",", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QuEST`Private`codes", "=", 
                    
                    RowBox[{"QuEST`Private`codifyCircuit", "[", 
                    "QuEST`Private`circuit", "]"}]}], "}"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`codes", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", 
                    
                    RowBox[{"\"Circuit contained an unrecognised gate: \"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"StandardForm", "[", 
                    RowBox[{"QuEST`Private`circuit", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`codes", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}]}], "]"}], ";", 
                    "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    
                    RowBox[{"QuEST`Private`codes", "\[LeftDoubleBracket]", 
                    "4", "\[RightDoubleBracket]"}], ",", 
                    "Internal`RealValuedNumericQ", ",", "2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", "\"Circuit contains non-numerical or non-real \
parameters!\""}], "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "WithBackup", "]"}], "===", 
                    "True"}], "||", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "WithBackup", "]"}], "===", 
                    "False"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", "\"Option WithBackup must be True or False.\""}], 
                    "]"}], ";", "$Failed"}], ",", 
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ShowProgress", "]"}], "===", 
                    "True"}], "||", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ShowProgress", "]"}], "===", 
                    "False"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", "\"Option ShowProgress must be True or False.\""}], 
                    "]"}], ";", "$Failed"}], ",", "True", ",", 
                    RowBox[{"QuEST`Private`applyCircuitInner", "[", 
                    RowBox[{"QuEST`Private`qureg", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "WithBackup", "]"}], "===", 
                    "True"}], ",", "1", ",", "0"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ShowProgress", "]"}], "===", 
                    "True"}], ",", "1", ",", "0"}], "]"}], ",", 
                    
                    RowBox[{"QuEST`Private`unpackEncodedCircuit", "[", 
                    "QuEST`Private`codes", "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"QuEST`Private`inQureg_Integer", ",", 
                    
                    RowBox[{
                    "QuEST`Private`circuit_", "?", 
                    "QuEST`Private`isCircuitFormat"}], ",", 
                    "QuEST`Private`outQureg_Integer", ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"CloneQureg", "[", 
                    
                    RowBox[{"QuEST`Private`outQureg", ",", 
                    "QuEST`Private`inQureg"}], "]"}], ";", 
                    RowBox[{"ApplyCircuit", "[", 
                    
                    RowBox[{"QuEST`Private`outQureg", ",", 
                    "QuEST`Private`circuit", ",", "QuEST`Private`opts"}], 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{"QuEST`Private`inQureg_Integer", ",", 
                    RowBox[{"{", "}"}], ",", "QuEST`Private`outQureg_Integer",
                     ",", 
                    RowBox[{"QuEST`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"CloneQureg", "[", 
                    
                    RowBox[{"QuEST`Private`outQureg", ",", 
                    "QuEST`Private`inQureg"}], "]"}], ";", 
                    RowBox[{"{", "}"}]}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"_", "?", "QuEST`Private`isCircuitFormat"}], "|", 
                    RowBox[{"{", "}"}]}], ",", "_Integer", ",", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", "\"As of v0.8, the arguments have swapped order for \
consistency. Please now use ApplyCircuit[qureg, circuit].\""}], "]"}], ";", 
                    "$Failed"}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"_", "?", "QuEST`Private`isCircuitFormat"}], "|", 
                    RowBox[{"{", "}"}]}], ",", "_Integer", ",", "_Integer", 
                    ",", 
                    RowBox[{"OptionsPattern", "[", "ApplyCircuit", "]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ApplyCircuit", "::", "error"}], "MessageName"], 
                    ",", "\"As of v0.8, the arguments have changed order for \
consistency. Please now use ApplyCircuit[inQureg, circuit, outQureg].\""}], 
                    "]"}], ";", "$Failed"}], ")"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"ApplyCircuit", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "QuEST`Private`invalidArgError", "[", "ApplyCircuit", 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"WithBackup", "\[Rule]", "True"}], ",", 
                    RowBox[{"ShowProgress", "\[Rule]", "False"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`ApplyCircuit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ApplyCircuit[qureg, circuit] modifies qureg by \
applying the circuit. Returns any measurement outcomes and the probabilities \
encountered by projectors, ordered and grouped by the appearance of M and P \
in the circuit.\\nApplyCircuit[inQureg, circuit, outQureg] leaves inQureg \
unchanged, but modifies outQureg to be the result of applying the circuit to \
inQureg.\\nAccepts optional arguments WithBackup and ShowProgress.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ApplyCircuit[qureg, circuit] modifies qureg by applying the circuit. \
Returns any measurement outcomes and the probabilities encountered by \
projectors, ordered and grouped by the appearance of M and P in the circuit.\n\
ApplyCircuit[inQureg, circuit, outQureg] leaves inQureg unchanged, but \
modifies outQureg to be the result of applying the circuit to inQureg.\n\
Accepts optional arguments WithBackup and ShowProgress.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QuEST`ApplyCircuit, {QuEST`ApplyCircuit[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], {}, 
         OptionsPattern[QuEST`ApplyCircuit]] :> {}, QuEST`ApplyCircuit[
         Pattern[QuEST`Private`qureg, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`circuit, 
           Blank[]], QuEST`Private`isCircuitFormat], 
         OptionsPattern[QuEST`ApplyCircuit]] :> 
       With[{QuEST`Private`codes = 
          QuEST`Private`codifyCircuit[QuEST`Private`circuit]}, 
         Which[
          MemberQ[
           Part[QuEST`Private`codes, 1], -1], Message[
            MessageName[QuEST`ApplyCircuit, "error"], 
            StringJoin["Circuit contained an unrecognised gate: ", 
             ToString[
              StandardForm[
               Part[QuEST`Private`circuit, 
                Part[
                 Position[
                  Part[QuEST`Private`codes, 1], -1], 1, 1]]]]]]; $Failed, 
          Not[
           AllTrue[
            Part[QuEST`Private`codes, 4], Internal`RealValuedNumericQ, 2]], 
          Message[
            MessageName[QuEST`ApplyCircuit, "error"], 
            "Circuit contains non-numerical or non-real parameters!"]; \
$Failed, 
          Not[
           Or[
           OptionValue[QuEST`Option`WithBackup] === True, 
            OptionValue[QuEST`Option`WithBackup] === False]], Message[
            MessageName[QuEST`ApplyCircuit, "error"], 
            "Option WithBackup must be True or False."]; $Failed, 
          Not[
           Or[
           OptionValue[QuEST`Option`ShowProgress] === True, 
            OptionValue[QuEST`Option`ShowProgress] === False]], Message[
            MessageName[QuEST`ApplyCircuit, "error"], 
            "Option ShowProgress must be True or False."]; $Failed, True, 
          QuEST`Private`applyCircuitInner[QuEST`Private`qureg, 
           If[OptionValue[QuEST`Option`WithBackup] === True, 1, 0], 
           If[OptionValue[QuEST`Option`ShowProgress] === True, 1, 0], 
           QuEST`Private`unpackEncodedCircuit[QuEST`Private`codes]]]], 
       QuEST`ApplyCircuit[
         Pattern[QuEST`Private`inQureg, 
          Blank[Integer]], 
         PatternTest[
          Pattern[QuEST`Private`circuit, 
           Blank[]], QuEST`Private`isCircuitFormat], 
         Pattern[QuEST`Private`outQureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[QuEST`ApplyCircuit]]] :> 
       Block[{}, 
         QuEST`CloneQureg[QuEST`Private`outQureg, QuEST`Private`inQureg]; 
         QuEST`ApplyCircuit[
          QuEST`Private`outQureg, QuEST`Private`circuit, QuEST`Private`opts]],
        QuEST`ApplyCircuit[
         Pattern[QuEST`Private`inQureg, 
          Blank[Integer]], {}, 
         Pattern[QuEST`Private`outQureg, 
          Blank[Integer]], 
         Pattern[QuEST`Private`opts, 
          OptionsPattern[QuEST`ApplyCircuit]]] :> (
        QuEST`CloneQureg[QuEST`Private`outQureg, QuEST`Private`inQureg]; {}), 
       QuEST`ApplyCircuit[
         Alternatives[
          PatternTest[
           Blank[], QuEST`Private`isCircuitFormat], {}], 
         Blank[Integer], 
         OptionsPattern[QuEST`ApplyCircuit]] :> (Message[
          MessageName[QuEST`ApplyCircuit, "error"], 
          "As of v0.8, the arguments have swapped order for consistency. \
Please now use ApplyCircuit[qureg, circuit]."]; $Failed), QuEST`ApplyCircuit[
         Alternatives[
          PatternTest[
           Blank[], QuEST`Private`isCircuitFormat], {}], 
         Blank[Integer], 
         Blank[Integer], 
         OptionsPattern[QuEST`ApplyCircuit]] :> (Message[
          MessageName[QuEST`ApplyCircuit, "error"], 
          "As of v0.8, the arguments have changed order for consistency. \
Please now use ApplyCircuit[inQureg, circuit, outQureg]."]; $Failed), 
       QuEST`ApplyCircuit[
         BlankNullSequence[]] :> 
       QuEST`Private`invalidArgError[QuEST`ApplyCircuit]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     QuEST`Option`WithBackup -> True, QuEST`Option`ShowProgress -> False}, 
    "Attributes" -> {}, "FullName" -> "QuEST`ApplyCircuit"], 
   False]]], "Output",
 CellChangeTimes->{3.903449292206058*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"d736782b-e959-4fff-8639-6ee63ae6f11e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QuEST`Gate`*"}]], "Input",
 CellChangeTimes->{{3.9035002625132613`*^9, 3.903500371521628*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"1131d437-67be-4266-8448-94bb2783ec7b"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["QuEST`Gate`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["QuEST`Gate`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["Damp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Damp", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Fac", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Fac", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Id", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Id", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "M", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Ph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Ph", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Ry", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Ry", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SWAP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "SWAP", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UNonNorm", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "UNonNorm", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Z", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Z", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Deph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Deph", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["G", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "G", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Kraus", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Kraus", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Matr", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Matr", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["R", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "R", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Rz", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Rz", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["T", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "T", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["X", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "X", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["Depol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Depol", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["H", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "H", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KrausNonTP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "KrausNonTP", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["P", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "P", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Rx", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Rx", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["S", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "S", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["U", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "U", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Y", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", {
                   "Y", "QuEST`Gate`"}, False},
                 ButtonNote->"QuEST`Gate`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.10555555555555554`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{{3.903500270838846*^9, 3.9035003719784527`*^9}},
 CellLabel->
  "Out[310]=",ExpressionUUID->"00df85a6-140d-4dbc-a095-244ff26de407"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Id is an identity gate which effects no change, but \
can be used for forcing gate alignment in DrawCircuit, or as an alternative \
to removing gates in ApplyCircuit.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QuEST`Gate`Id\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Id is an identity gate which effects no change, but \
can be used for forcing gate alignment in DrawCircuit, or as an alternative \
to removing gates in ApplyCircuit.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Id is an identity gate which effects no change, but can be used for \
forcing gate alignment in DrawCircuit, or as an alternative to removing gates \
in ApplyCircuit.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "QuEST`Gate`Id"], 
   False]]], "Print",
 CellTags->
  "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e",ExpressionUUID->"649f6fa9-0e56-\
4c38-8f02-ef640fd5ca3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalcCircuitMatrix", "[", 
  RowBox[{"{", 
   SubscriptBox["Id", "0"], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.903500414159348*^9, 3.9035004260941153`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"07784ccc-6045-46d8-9541-af87ef92e445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.903500427893941*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"58b1e587-6b16-4314-8b7c-7008221229a4"]
}, Open  ]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"97063110-2bef-4ee8-b7c9-b00f5cc225f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e"->{
  Cell[299996, 7178, 8973, 223, 82, "Print",ExpressionUUID->"649f6fa9-0e56-4c38-8f02-ef640fd5ca3b",
   CellTags->"Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e", 310023, 7438}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 668, 18, 86, "Input",ExpressionUUID->"d855bdca-4d56-40ea-ba6d-4b252baa9a80"],
Cell[1251, 42, 383, 9, 28, "Message",ExpressionUUID->"1fcf34cd-13e1-47e0-8fc0-f716940e51cd"]
}, Open  ]],
Cell[1649, 54, 279, 8, 28, "Input",ExpressionUUID->"5027551a-3088-4742-a531-8d292fa4f707"],
Cell[1931, 64, 1319, 38, 105, "Input",ExpressionUUID->"49b247da-0332-4103-8a0e-d3bf988c86fa"],
Cell[CellGroupData[{
Cell[3275, 106, 9312, 210, 1023, "Input",ExpressionUUID->"3137d4a1-e69b-4fa3-ab75-76524c925fdc"],
Cell[12590, 318, 3171, 93, 246, "Output",ExpressionUUID->"ae031583-6c8a-4c10-ba16-fe2fea03ba9b"]
}, Open  ]],
Cell[15776, 414, 3353, 93, 200, "Input",ExpressionUUID->"c9c94bdf-c028-4e0f-9d9e-0a5c768ec1c1"],
Cell[19132, 509, 6972, 174, 230, "Input",ExpressionUUID->"290df099-ece3-4b61-bb6b-ece1925cb0e8"],
Cell[CellGroupData[{
Cell[26129, 687, 19597, 498, 711, "Input",ExpressionUUID->"160f339b-1ccf-4ffa-b529-a53ed265e97a"],
Cell[45729, 1187, 299, 5, 32, "Output",ExpressionUUID->"814d5e60-2c6a-453c-8eb3-6bb1035a3be7"],
Cell[46031, 1194, 374, 7, 32, "Output",ExpressionUUID->"3a629f56-44d3-45bd-b35b-1bafd9ff9833"],
Cell[46408, 1203, 299, 5, 32, "Output",ExpressionUUID->"f5c7db73-b66b-4ec2-912f-1aa2aa354e6e"],
Cell[46710, 1210, 299, 5, 32, "Output",ExpressionUUID->"39b0e2ba-0091-44f0-a1bf-5ee85fc9c369"]
}, Open  ]],
Cell[47024, 1218, 1217, 30, 48, "Input",ExpressionUUID->"d0bd97a7-802b-4922-b5a6-236210d0ea0e"],
Cell[48244, 1250, 5902, 151, 371, "Input",ExpressionUUID->"8f5bd6d7-e061-4ee3-ac90-075487e82e1a"],
Cell[54149, 1403, 11320, 270, 844, "Input",ExpressionUUID->"12f1ca1b-be95-44a2-b5ab-ff7b7b163c8a"],
Cell[CellGroupData[{
Cell[65494, 1677, 474, 9, 28, "Input",ExpressionUUID->"2ceaf464-7a3b-4f6a-91c4-c75ef543f85e"],
Cell[CellGroupData[{
Cell[65993, 1690, 698, 12, 22, "Print",ExpressionUUID->"abf40d32-30ca-42ff-a422-2ebbc6ab5bdb"],
Cell[66694, 1704, 698, 12, 22, "Print",ExpressionUUID->"24a83fda-6755-4d3f-8d81-8e12ef5c03f9"],
Cell[67395, 1718, 698, 12, 22, "Print",ExpressionUUID->"f27066dc-b524-4566-9a7f-5e65a20b2e47"],
Cell[68096, 1732, 702, 12, 22, "Print",ExpressionUUID->"e31e751f-7a5d-43a3-8283-c5185620de22"],
Cell[68801, 1746, 702, 12, 22, "Print",ExpressionUUID->"830132ef-3fef-4d86-b75e-527e7ffdfbf5"],
Cell[69506, 1760, 702, 12, 22, "Print",ExpressionUUID->"9584cab3-12a0-4b93-827a-580a3bcfaa9c"],
Cell[70211, 1774, 704, 12, 22, "Print",ExpressionUUID->"fddf8ada-834d-4bfb-941a-7672d80abbcc"],
Cell[70918, 1788, 702, 12, 22, "Print",ExpressionUUID->"05b4ecfd-576d-43a9-872b-099424ecccb8"]
}, Open  ]],
Cell[71635, 1803, 3649, 110, 215, "Output",ExpressionUUID->"f0d85bb5-1415-4041-af79-cd419aeeda87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75321, 1918, 477, 11, 30, "Input",ExpressionUUID->"33e1a8fa-925e-40a6-ac33-6e2cdf8c62e0"],
Cell[75801, 1931, 960, 17, 46, "Message",ExpressionUUID->"3be6d038-a136-4168-af49-3d4951e22adc"],
Cell[76764, 1950, 568, 12, 28, "Message",ExpressionUUID->"1ea2abb1-64aa-4921-8b45-fc1938052930"],
Cell[77335, 1964, 679, 14, 28, "Message",ExpressionUUID->"aba7313c-8a5e-4188-83f1-7795cf88e5c4"],
Cell[78017, 1980, 262, 5, 32, "Output",ExpressionUUID->"a2b00c62-acd2-4b98-90b6-32a24fe15889"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78316, 1990, 4816, 83, 162, "Input",ExpressionUUID->"7a548349-74fa-4c9a-8079-eadf4b6f3eb8"],
Cell[83135, 2075, 4218, 75, 280, "Output",ExpressionUUID->"6068c8e5-e241-465b-b103-8795b4ec8d4e"],
Cell[87356, 2152, 507, 12, 28, "Message",ExpressionUUID->"748e9be4-e4ae-4d2b-becb-2621e3c843dc"],
Cell[87866, 2166, 1148, 17, 32, "Output",ExpressionUUID->"63b1d30c-665f-4c52-9001-33a38677e86f"],
Cell[89017, 2185, 505, 12, 28, "Message",ExpressionUUID->"99ca9cc0-57ae-4577-95ad-44ab904c59a8"],
Cell[89525, 2199, 1148, 17, 32, "Output",ExpressionUUID->"2cab142e-571b-463a-9918-7d7dc33c2cf6"],
Cell[90676, 2218, 486, 12, 28, "Message",ExpressionUUID->"3f567afc-f4f9-4b01-a8c3-78937544b63e"],
Cell[91165, 2232, 1146, 17, 32, "Output",ExpressionUUID->"bddf0f0f-f716-41d4-b18a-d7a1566a8df7"],
Cell[92314, 2251, 492, 12, 28, "Message",ExpressionUUID->"c9f0a800-c0b9-47e4-8f79-4215cde1b97e"],
Cell[92809, 2265, 487, 12, 28, "Message",ExpressionUUID->"968431c9-6fc2-4f2d-a9b9-4afbdc667e5d"],
Cell[93299, 2279, 1148, 17, 32, "Output",ExpressionUUID->"9d0fcaec-f210-4a92-b839-95f4a5e1eb8e"]
}, Open  ]],
Cell[94462, 2299, 156, 3, 28, "Input",ExpressionUUID->"d7bebbc9-1051-4b8b-b6ed-dd6bb4c78f65"],
Cell[CellGroupData[{
Cell[94643, 2306, 5507, 155, 243, "Input",ExpressionUUID->"39029e0e-2216-4a5e-b49f-d71f3de2b0d9"],
Cell[100153, 2463, 5575, 157, 132, "Output",ExpressionUUID->"b1f1e8f0-6f0d-4a64-8309-5dedc7e81402"],
Cell[105731, 2622, 11979, 232, 176, "Output",ExpressionUUID->"3f17675e-012b-4c68-bfe8-0f632d8420f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117747, 2859, 207, 4, 28, "Input",ExpressionUUID->"616f91b2-ed16-4d18-951f-ab4aeef4d5ec"],
Cell[117957, 2865, 480, 8, 32, "Output",ExpressionUUID->"abc2feff-8969-4abb-9cd4-a9d7f6b2d662"]
}, Open  ]],
Cell[118452, 2876, 9599, 267, 300, "Input",ExpressionUUID->"a35e5726-c563-4c7d-b5e9-739ed4dc5ce8"],
Cell[CellGroupData[{
Cell[128076, 3147, 510, 10, 29, "Input",ExpressionUUID->"dfd1b414-79c8-4639-b63c-fbfb472e82f3"],
Cell[128589, 3159, 1488, 40, 35, "Output",ExpressionUUID->"ecef8919-c475-4fb8-9f25-a9857f07af44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130114, 3204, 214, 4, 28, "Input",ExpressionUUID->"8e485f2a-029d-4348-af9d-1d06365b063a"],
Cell[130331, 3210, 21256, 469, 220, "Output",ExpressionUUID->"addc4d30-a9db-4d78-b058-a401959b1d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151624, 3684, 128, 3, 28, "Input",ExpressionUUID->"4a2b0db6-b59f-49e9-973a-0156fdd4a199"],
Cell[151755, 3689, 329, 6, 32, "Output",ExpressionUUID->"30fe3808-004f-4e00-8f37-b1263b73db8f"],
Cell[152087, 3697, 404, 8, 32, "Output",ExpressionUUID->"dc5dd977-ede7-4a90-829e-7e3fe6dd3b9e"],
Cell[152494, 3707, 329, 6, 32, "Output",ExpressionUUID->"c87c1d41-3d13-483a-9ff7-ad862d324aa1"],
Cell[152826, 3715, 645, 13, 28, "Message",ExpressionUUID->"968482a6-2b67-4162-8ecb-70798750f8ca"],
Cell[153474, 3730, 643, 13, 28, "Message",ExpressionUUID->"20fcd962-c326-41b8-9c35-204500717440"],
Cell[154120, 3745, 645, 13, 28, "Message",ExpressionUUID->"76659f77-2cdd-4eae-9bc6-2e6d14480e38"],
Cell[154768, 3760, 612, 12, 28, "Message",ExpressionUUID->"a2199256-dbac-4265-bf1a-61d84dffad7f"],
Cell[155383, 3774, 5433, 157, 132, "Output",ExpressionUUID->"5eebe66d-34b0-4c1e-9240-e7c814db4d5b"],
Cell[160819, 3933, 6738, 188, 171, "Output",ExpressionUUID->"15253824-3325-4b8a-ba2b-2c9637682d98"],
Cell[167560, 4123, 16342, 321, 203, "Output",ExpressionUUID->"85dbe73d-62d5-4d67-967b-ec41e509eba9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183939, 4449, 203, 4, 28, "Input",ExpressionUUID->"6b0cdc38-eadb-42f4-85e4-b901442a0c1c"],
Cell[184145, 4455, 1136, 17, 32, "Output",ExpressionUUID->"c0f96e1e-bd37-43a4-8619-d53f708d696c"]
}, Open  ]],
Cell[185296, 4475, 912, 25, 28, "Input",ExpressionUUID->"875af7b5-846a-4662-bb71-49b66de06b87"],
Cell[CellGroupData[{
Cell[186233, 4504, 549, 13, 48, "Input",ExpressionUUID->"2b1f70c9-18ef-4046-bb46-910c03259f2b"],
Cell[186785, 4519, 2560, 71, 74, "Output",ExpressionUUID->"ec9060b4-27e6-4076-8774-1a97bcdaf88e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189382, 4595, 194, 3, 28, "Input",ExpressionUUID->"37842eac-50db-4b5a-9071-c4b838257eee"],
Cell[189579, 4600, 14340, 326, 184, "Output",ExpressionUUID->"78f3ae05-93e4-462e-808e-1fb512eb079b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203956, 4931, 212, 4, 28, "Input",ExpressionUUID->"e477192d-4188-4f87-a315-b7412a2e051c"],
Cell[204171, 4937, 15744, 357, 194, "Output",ExpressionUUID->"7750886b-8fae-40c5-b7b7-21b6bbeed0d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219952, 5299, 196, 4, 28, "Input",ExpressionUUID->"64756d1b-367b-4ac3-9dd4-9263af837c96"],
Cell[220151, 5305, 8484, 214, 123, "Output",ExpressionUUID->"422c5708-3a7d-4ba3-bbb8-cfc6614ebad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228672, 5524, 469, 13, 28, "Input",ExpressionUUID->"131782ff-fec6-4e26-9610-6096a30d1193"],
Cell[229144, 5539, 1388, 36, 52, "Output",ExpressionUUID->"829af2b9-57c9-4854-8e3d-32ec953ee5c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230569, 5580, 1531, 33, 124, "Input",ExpressionUUID->"dc2620d3-07d1-4a8d-8fe7-c1bf3dadf9d0"],
Cell[232103, 5615, 2990, 77, 78, "Output",ExpressionUUID->"f839c69b-126b-4639-a17b-138dd5029ecd"],
Cell[235096, 5694, 6343, 118, 360, "Output",ExpressionUUID->"eec3eb09-4383-4781-b768-3f1406339df7"],
Cell[241442, 5814, 553, 8, 32, "Output",ExpressionUUID->"c65519bb-473a-432e-99b2-f1273c36c793"],
Cell[241998, 5824, 555, 8, 32, "Output",ExpressionUUID->"32bc418d-e53d-491d-bc04-7167e55dc6b9"],
Cell[242556, 5834, 2499, 63, 78, "Output",ExpressionUUID->"650b1d88-154b-4ec0-b79e-4ffe7c75c126"],
Cell[245058, 5899, 581, 13, 28, "Message",ExpressionUUID->"c7493136-9ccc-45e8-8b5e-49c4b6ab3114"],
Cell[245642, 5914, 561, 8, 32, "Output",ExpressionUUID->"dd7c7062-b32f-4724-a43b-c3b6537642c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246240, 5927, 210, 4, 28, "Input",ExpressionUUID->"8274a8fd-3ee2-4d46-b7fa-e1532ba50422"],
Cell[246453, 5933, 15744, 357, 194, "Output",ExpressionUUID->"ee897499-e1c5-47a8-971d-470e66d96f5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262234, 6295, 206, 4, 28, "Input",ExpressionUUID->"24e16db7-99b1-4786-8c93-363b0dce9738"],
Cell[262443, 6301, 24468, 553, 169, "Output",ExpressionUUID->"d736782b-e959-4fff-8639-6ee63ae6f11e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286948, 6859, 206, 4, 28, "Input",ExpressionUUID->"1131d437-67be-4266-8448-94bb2783ec7b"],
Cell[287157, 6865, 12836, 311, 136, "Output",ExpressionUUID->"00df85a6-140d-4dbc-a095-244ff26de407"],
Cell[299996, 7178, 8973, 223, 82, "Print",ExpressionUUID->"649f6fa9-0e56-4c38-8f02-ef640fd5ca3b",
 CellTags->"Info-95395ef5-4f8b-4bfd-9f6f-5f5d9eb9556e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309006, 7406, 268, 6, 28, "Input",ExpressionUUID->"07784ccc-6045-46d8-9541-af87ef92e445"],
Cell[309277, 7414, 296, 9, 32, "Output",ExpressionUUID->"58b1e587-6b16-4314-8b7c-7008221229a4"]
}, Open  ]]
}
]
*)

